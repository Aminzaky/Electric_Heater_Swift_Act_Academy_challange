

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 18 10:34:34 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	functab,global,class=ENTRY,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F877A Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153                           
   154                           	psect	cinit
   155  0015                     start_initialization:	
   156                           ; #config settings
   157                           
   158  0015                     __initialization:
   159                           
   160                           ; Clear objects allocated to BANK0
   161  0015  1383               	bcf	3,7	;select IRP bank0
   162  0016  305C               	movlw	low __pbssBANK0
   163  0017  0084               	movwf	4
   164  0018  3067               	movlw	low (__pbssBANK0+11)
   165  0019  160A  118A  227B  120A  118A  	fcall	clear_ram0
   166                           
   167                           ; Clear objects allocated to BANK1
   168  001E  30A0               	movlw	low __pbssBANK1
   169  001F  0084               	movwf	4
   170  0020  30B4               	movlw	low (__pbssBANK1+20)
   171  0021  160A  118A  227B  120A  118A  	fcall	clear_ram0
   172  0026                     end_of_initialization:	
   173                           ;End of C runtime variable initialization code
   174                           
   175  0026                     __end_of__initialization:
   176  0026  0183               	clrf	3
   177  0027  160A  118A  2C80   	ljmp	_main	;jump to C main() function
   178                           
   179                           	psect	bssBANK0
   180  005C                     __pbssBANK0:
   181  005C                     _u32TickCount:
   182  005C                     	ds	4
   183  0060                     _heaterstate:
   184  0060                     	ds	1
   185  0061                     _temp:
   186  0061                     	ds	1
   187  0062                     _SWcounter:
   188  0062                     	ds	1
   189  0063                     _ON_OFFstate:
   190  0063                     	ds	1
   191  0064                     _DOWNstate:
   192  0064                     	ds	1
   193  0065                     _UPstate:
   194  0065                     	ds	1
   195  0066                     _CallBack_ptr:
   196  0066                     	ds	1
   197                           
   198                           	psect	bssBANK1
   199  00A0                     __pbssBANK1:
   200  00A0                     _temp_array:
   201  00A0                     	ds	10
   202  00AA                     _u32SetmodeCount:
   203  00AA                     	ds	4
   204  00AE                     _state:
   205  00AE                     	ds	1
   206  00AF                     _avgtemp:
   207  00AF                     	ds	1
   208  00B0                     _Settemp:
   209  00B0                     	ds	1
   210  00B1                     _ON_OFFpushed_flag:
   211  00B1                     	ds	1
   212  00B2                     _DOWNpushed_flag:
   213  00B2                     	ds	1
   214  00B3                     _UPpushed_flag:
   215  00B3                     	ds	1
   216                           
   217                           	psect	clrtext
   218  127B                     clear_ram0:	
   219                           ;	Called with FSR containing the base address, and
   220                           ;	W with the last address+1
   221                           
   222  127B  0064               	clrwdt	;clear the watchdog before getting into this loop
   223  127C                     clrloop0:
   224  127C  0180               	clrf	0	;clear RAM location pointed to by FSR
   225  127D  0A84               	incf	4,f	;increment pointer
   226  127E  0604               	xorwf	4,w	;XOR with final address
   227  127F  1903               	btfsc	3,2	;have we reached the end yet?
   228  1280  3400               	retlw	0	;all done for this memory range, return
   229  1281  0604               	xorwf	4,w	;XOR again to restore value
   230  1282  2A7C               	goto	clrloop0	;do the next byte
   231                           
   232                           	psect	cstackBANK1
   233  00B4                     __pcstackBANK1:
   234  00B4                     ??_TMR_Init:
   235  00B4                     ??_TMR_Start:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  00B4                     ??_ADC_Init:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  00B4                     ??_I2C_Master_Init:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  00B4                     ??_TMR0_vidSetCallBack:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  00B4                     ??_I2C_Master_Wait:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  00B4                     ?_DIO_voidInitPort:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  00B4                     ?_DIO_voidWritePortValue:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  00B4                     ?_DIO_voidInitPin:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  00B4                     ?_DIO_voidWritePinValue:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  00B4                     DIO_voidInitPort@Dir:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  00B4                     DIO_voidWritePortValue@value:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  00B4                     DIO_voidInitPin@Dir:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  00B4                     DIO_voidWritePinValue@value:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  00B4                     TMR0_vidSetCallBack@CallBack:	
   275                           ; 1 bytes @ 0x0
   276                           
   277                           
   278                           ; 1 bytes @ 0x0
   279  00B4                     	ds	1
   280  00B5                     ??_I2C_Master_Start:
   281  00B5                     ??_I2C_Master_RepeatedStart:	
   282                           ; 1 bytes @ 0x1
   283                           
   284  00B5                     ??_I2C_Master_Write:	
   285                           ; 1 bytes @ 0x1
   286                           
   287  00B5                     ??_I2C_Master_Stop:	
   288                           ; 1 bytes @ 0x1
   289                           
   290  00B5                     ??_I2C_Master_Read:	
   291                           ; 1 bytes @ 0x1
   292                           
   293  00B5                     ??_I2C_Nack:	
   294                           ; 1 bytes @ 0x1
   295                           
   296  00B5                     ??_DIO_voidInitPort:	
   297                           ; 1 bytes @ 0x1
   298                           
   299  00B5                     ??_DIO_voidWritePortValue:	
   300                           ; 1 bytes @ 0x1
   301                           
   302  00B5                     ??_DIO_voidInitPin:	
   303                           ; 1 bytes @ 0x1
   304                           
   305  00B5                     ??_DIO_voidWritePinValue:	
   306                           ; 1 bytes @ 0x1
   307                           
   308                           
   309                           ; 1 bytes @ 0x1
   310  00B5                     	ds	1
   311  00B6                     I2C_Master_Write@data:
   312                           
   313                           ; 1 bytes @ 0x2
   314  00B6                     	ds	1
   315  00B7                     ?_EEPROM_Write:
   316  00B7                     DIO_voidInitPort@Port:	
   317                           ; 1 bytes @ 0x3
   318                           
   319  00B7                     DIO_voidWritePortValue@Port:	
   320                           ; 1 bytes @ 0x3
   321                           
   322  00B7                     DIO_voidInitPin@pin_num:	
   323                           ; 1 bytes @ 0x3
   324                           
   325  00B7                     DIO_voidWritePinValue@pin_num:	
   326                           ; 1 bytes @ 0x3
   327                           
   328  00B7                     EEPROM_Write@data:	
   329                           ; 1 bytes @ 0x3
   330                           
   331  00B7                     I2C_Master_Read@buffer:	
   332                           ; 1 bytes @ 0x3
   333                           
   334                           
   335                           ; 2 bytes @ 0x3
   336  00B7                     	ds	1
   337  00B8                     ??_SSD_Init:
   338  00B8                     ??_sw_int:	
   339                           ; 1 bytes @ 0x4
   340                           
   341  00B8                     ??_DO_Init:	
   342                           ; 1 bytes @ 0x4
   343                           
   344  00B8                     ??_EEPROM_Write:	
   345                           ; 1 bytes @ 0x4
   346                           
   347  00B8                     ??_SSD_OFF:	
   348                           ; 1 bytes @ 0x4
   349                           
   350  00B8                     ?_DO_SetState:	
   351                           ; 1 bytes @ 0x4
   352                           
   353  00B8                     EEPROM_Write@address:	
   354                           ; 1 bytes @ 0x4
   355                           
   356  00B8                     DO_SetState@state:	
   357                           ; 1 bytes @ 0x4
   358                           
   359                           
   360                           ; 1 bytes @ 0x4
   361  00B8                     	ds	1
   362  00B9                     ??_Sch_Init:
   363  00B9                     ??_EEPROM_Read:	
   364                           ; 1 bytes @ 0x5
   365                           
   366  00B9                     ??_DO_SetState:	
   367                           ; 1 bytes @ 0x5
   368                           
   369  00B9                     EEPROM_Read@address:	
   370                           ; 1 bytes @ 0x5
   371                           
   372  00B9                     DO_SetState@device:	
   373                           ; 1 bytes @ 0x5
   374                           
   375                           
   376                           ; 1 bytes @ 0x5
   377  00B9                     	ds	1
   378  00BA                     EEPROM_Read@Data:
   379                           
   380                           ; 1 bytes @ 0x6
   381  00BA                     	ds	1
   382  00BB                     ??_Sch_Start:
   383                           
   384                           ; 1 bytes @ 0x7
   385  00BB                     	ds	3
   386  00BE                     Sch_Start@OPtemp:
   387                           
   388                           ; 1 bytes @ 0xA
   389  00BE                     	ds	1
   390  00BF                     ??_main:
   391                           
   392                           	psect	cstackCOMMON
   393  0070                     __pcstackCOMMON:	
   394                           ; 1 bytes @ 0xB
   395                           
   396  0070                     ?_TMR_Init:
   397  0070                     ?_TMR_Start:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_SSD_Init:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_ADC_Init:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_sw_int:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_DO_Init:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_I2C_Master_Init:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_Sch_Init:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_TMR0_vidSetCallBack:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_Sch_UpdateTick_Handler:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_Sch_Start:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_I2C_Master_Start:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_I2C_Master_RepeatedStart:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_I2C_Master_Write:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_I2C_Master_Stop:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_I2C_Master_Read:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_I2C_Nack:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_I2C_Master_Wait:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_DIO_U8ReadPinValue:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ??_DIO_U8ReadPinValue:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_main:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_TMR_Update:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_sw_voidtask:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_UPDATE_TEMP:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_EEPROM_Read:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_SSD_OFF:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?i1_DIO_voidWritePortValue:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?i1_DIO_voidWritePinValue:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?i1_SSD_OFF:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?__Umul8_16:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_ADC_Read:	
   485                           ; 2 bytes @ 0x0
   486                           
   487  0070                     ?___awdiv:	
   488                           ; 2 bytes @ 0x0
   489                           
   490  0070                     ?___awmod:	
   491                           ; 2 bytes @ 0x0
   492                           
   493  0070                     ?___llmod:	
   494                           ; 2 bytes @ 0x0
   495                           
   496  0070                     ?___xxtofl:	
   497                           ; 4 bytes @ 0x0
   498                           
   499  0070                     __Umul8_16@multiplicand:	
   500                           ; 4 bytes @ 0x0
   501                           
   502  0070                     i1DIO_voidWritePortValue@value:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     i1DIO_voidWritePinValue@value:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ___awdiv@divisor:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ___awmod@divisor:	
   512                           ; 2 bytes @ 0x0
   513                           
   514  0070                     ___llmod@divisor:	
   515                           ; 2 bytes @ 0x0
   516                           
   517  0070                     ___xxtofl@val:	
   518                           ; 4 bytes @ 0x0
   519                           
   520                           
   521                           ; 4 bytes @ 0x0
   522  0070                     	ds	1
   523  0071                     ??i1_DIO_voidWritePortValue:
   524  0071                     ??i1_DIO_voidWritePinValue:	
   525                           ; 1 bytes @ 0x1
   526                           
   527  0071                     DIO_U8ReadPinValue@pin:	
   528                           ; 1 bytes @ 0x1
   529                           
   530                           
   531                           ; 1 bytes @ 0x1
   532  0071                     	ds	1
   533  0072                     ??__Umul8_16:
   534  0072                     ??_ADC_Read:	
   535                           ; 1 bytes @ 0x2
   536                           
   537  0072                     DIO_U8ReadPinValue@pin_num:	
   538                           ; 1 bytes @ 0x2
   539                           
   540  0072                     ___awdiv@dividend:	
   541                           ; 1 bytes @ 0x2
   542                           
   543  0072                     ___awmod@dividend:	
   544                           ; 2 bytes @ 0x2
   545                           
   546                           
   547                           ; 2 bytes @ 0x2
   548  0072                     	ds	1
   549  0073                     ??_sw_voidtask:
   550  0073                     i1DIO_voidWritePortValue@Port:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     i1DIO_voidWritePinValue@pin_num:	
   554                           ; 1 bytes @ 0x3
   555                           
   556                           
   557                           ; 1 bytes @ 0x3
   558  0073                     	ds	1
   559  0074                     ??___awdiv:
   560  0074                     ??___awmod:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0074                     ??___xxtofl:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  0074                     ??i1_SSD_OFF:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0074                     ADC_Read@channel:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0074                     ___awdiv@counter:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0074                     ___awmod@counter:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0074                     __Umul8_16@product:	
   579                           ; 1 bytes @ 0x4
   580                           
   581  0074                     ___llmod@dividend:	
   582                           ; 2 bytes @ 0x4
   583                           
   584                           
   585                           ; 4 bytes @ 0x4
   586  0074                     	ds	1
   587  0075                     ___awdiv@sign:
   588  0075                     ___awmod@sign:	
   589                           ; 1 bytes @ 0x5
   590                           
   591  0075                     ADC_Read@ADC_result:	
   592                           ; 1 bytes @ 0x5
   593                           
   594                           
   595                           ; 2 bytes @ 0x5
   596  0075                     	ds	1
   597  0076                     ___awdiv@quotient:
   598  0076                     __Umul8_16@word_mpld:	
   599                           ; 2 bytes @ 0x6
   600                           
   601                           
   602                           ; 2 bytes @ 0x6
   603  0076                     	ds	1
   604  0077                     ADC_Read@A:
   605                           
   606                           ; 1 bytes @ 0x7
   607  0077                     	ds	1
   608  0078                     ?_SSD_Display:
   609  0078                     ??___llmod:	
   610                           ; 1 bytes @ 0x8
   611                           
   612  0078                     ADC_Read@E:	
   613                           ; 1 bytes @ 0x8
   614                           
   615  0078                     SSD_Display@number:	
   616                           ; 1 bytes @ 0x8
   617                           
   618  0078                     __Umul8_16@multiplier:	
   619                           ; 1 bytes @ 0x8
   620                           
   621  0078                     ___xxtofl@sign:	
   622                           ; 1 bytes @ 0x8
   623                           
   624                           
   625                           ; 1 bytes @ 0x8
   626  0078                     	ds	1
   627  0079                     ??_SSD_Display:
   628  0079                     ___llmod@counter:	
   629                           ; 1 bytes @ 0x9
   630                           
   631  0079                     ___xxtofl@exp:	
   632                           ; 1 bytes @ 0x9
   633                           
   634                           
   635                           ; 1 bytes @ 0x9
   636  0079                     	ds	1
   637  007A                     ___xxtofl@arg:
   638                           
   639                           ; 4 bytes @ 0xA
   640  007A                     	ds	1
   641  007B                     SSD_Display@display_no:
   642                           
   643                           ; 1 bytes @ 0xB
   644  007B                     	ds	3
   645  007E                     ??_UPDATE_TEMP:
   646                           
   647                           	psect	cstackBANK0
   648  0020                     __pcstackBANK0:	
   649                           ; 1 bytes @ 0xE
   650                           
   651  0020                     ?___flmul:
   652  0020                     ___flmul@b:	
   653                           ; 4 bytes @ 0x0
   654                           
   655                           
   656                           ; 4 bytes @ 0x0
   657  0020                     	ds	4
   658  0024                     ___flmul@a:
   659                           
   660                           ; 4 bytes @ 0x4
   661  0024                     	ds	4
   662  0028                     ??___flmul:
   663                           
   664                           ; 1 bytes @ 0x8
   665  0028                     	ds	5
   666  002D                     ___flmul@sign:
   667                           
   668                           ; 1 bytes @ 0xD
   669  002D                     	ds	1
   670  002E                     ___flmul@grs:
   671                           
   672                           ; 4 bytes @ 0xE
   673  002E                     	ds	4
   674  0032                     ___flmul@aexp:
   675                           
   676                           ; 1 bytes @ 0x12
   677  0032                     	ds	1
   678  0033                     ___flmul@bexp:
   679                           
   680                           ; 1 bytes @ 0x13
   681  0033                     	ds	1
   682  0034                     ___flmul@prod:
   683                           
   684                           ; 4 bytes @ 0x14
   685  0034                     	ds	4
   686  0038                     ___flmul@temp:
   687                           
   688                           ; 2 bytes @ 0x18
   689  0038                     	ds	2
   690  003A                     ?___fltol:
   691  003A                     ___fltol@f1:	
   692                           ; 4 bytes @ 0x1A
   693                           
   694                           
   695                           ; 4 bytes @ 0x1A
   696  003A                     	ds	4
   697  003E                     ??___fltol:
   698                           
   699                           ; 1 bytes @ 0x1E
   700  003E                     	ds	4
   701  0042                     ___fltol@sign1:
   702                           
   703                           ; 1 bytes @ 0x22
   704  0042                     	ds	1
   705  0043                     ___fltol@exp1:
   706                           
   707                           ; 1 bytes @ 0x23
   708  0043                     	ds	1
   709  0044                     UPDATE_TEMP@val:
   710                           
   711                           ; 2 bytes @ 0x24
   712  0044                     	ds	2
   713  0046                     ??_Sch_UpdateTick_Handler:
   714                           
   715                           ; 1 bytes @ 0x26
   716  0046                     	ds	16
   717  0056                     Sch_UpdateTick_Handler@i:
   718                           
   719                           ; 2 bytes @ 0x36
   720  0056                     	ds	2
   721  0058                     ??_TMR_Update:
   722                           
   723                           ; 1 bytes @ 0x38
   724  0058                     	ds	4
   725                           
   726                           	psect	maintext
   727  1480                     __pmaintext:	
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 37 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : B00/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels required when called:    9
   753 ;; This function calls:
   754 ;;		_ADC_Init
   755 ;;		_DO_Init
   756 ;;		_I2C_Master_Init
   757 ;;		_SSD_Init
   758 ;;		_Sch_Init
   759 ;;		_Sch_Start
   760 ;;		_TMR0_vidSetCallBack
   761 ;;		_TMR_Init
   762 ;;		_TMR_Start
   763 ;;		_sw_int
   764 ;; This function is called by:
   765 ;;		Startup code after reset
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _main
   771  1480                     _main:
   772  1480                     l3721:	
   773                           ;incstack = 0
   774 ;; hardware stack exceeded
   775                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   776                           
   777                           
   778                           ;main.c: 39:     TMR_Init();
   779  1480  120A  158A  2003  160A  118A  	fcall	_TMR_Init
   780  1485                     l3723:
   781                           
   782                           ;main.c: 40:     TMR_Start();
   783  1485  160A  118A  22C2  160A  118A  	fcall	_TMR_Start
   784  148A                     l3725:
   785                           
   786                           ;main.c: 41:     SSD_Init();
   787  148A  160A  118A  2313  160A  118A  	fcall	_SSD_Init
   788                           
   789                           ;main.c: 42:     ADC_Init();
   790  148F  160A  118A  2368  160A  118A  	fcall	_ADC_Init
   791  1494                     l3727:
   792                           
   793                           ;main.c: 43:     sw_int();
   794  1494  160A  118A  2387  160A  118A  	fcall	_sw_int
   795  1499                     l3729:
   796                           
   797                           ;main.c: 44:     DO_Init();
   798  1499  160A  118A  23A6  160A  118A  	fcall	_DO_Init
   799                           
   800                           ;main.c: 45:     I2C_Master_Init();
   801  149E  160A  118A  234B  160A  118A  	fcall	_I2C_Master_Init
   802                           
   803                           ;main.c: 48:     Sch_Init();
   804  14A3  160A  118A  22D0  160A  118A  	fcall	_Sch_Init
   805                           
   806                           ;main.c: 50:     TMR0_vidSetCallBack(Sch_UpdateTick_Handler);
   807  14A8  3001               	movlw	(low (fp__Sch_UpdateTick_Handler-i1fpbase))& (0+255)
   808  14A9  160A  118A  229E  160A  118A  	fcall	_TMR0_vidSetCallBack
   809  14AE                     l3731:
   810                           
   811                           ;main.c: 52:     Sch_Start();
   812  14AE  120A  158A  26A1  160A  118A  	fcall	_Sch_Start
   813  14B3                     l100:
   814  14B3  120A  118A  2812   	ljmp	start
   815  14B6                     __end_of_main:
   816                           
   817                           	psect	text1
   818  1387                     __ptext1:	
   819 ;; *************** function _sw_int *****************
   820 ;; Defined at:
   821 ;;		line 25 in file "SWITCH.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0
   838 ;;      Totals:         0       0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    6
   842 ;; This function calls:
   843 ;;		_DIO_voidInitPin
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _sw_int
   851  1387                     _sw_int:
   852  1387                     l3545:	
   853                           ;incstack = 0
   854                           ; Regs used in _sw_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   855                           
   856                           
   857                           ;SWITCH.c: 26:     DIO_voidInitPin(10, 1);
   858  1387  1683               	bsf	3,5	;RP0=1, select bank1
   859  1388  1303               	bcf	3,6	;RP1=0, select bank1
   860  1389  01B4               	clrf	DIO_voidInitPin@Dir^(0+128)
   861  138A  0AB4               	incf	DIO_voidInitPin@Dir^(0+128),f
   862  138B  300A               	movlw	10
   863  138C  120A  158A  2424  160A  118A  	fcall	_DIO_voidInitPin
   864                           
   865                           ;SWITCH.c: 27:     DIO_voidInitPin(8, 1);
   866  1391  1683               	bsf	3,5	;RP0=1, select bank1
   867  1392  1303               	bcf	3,6	;RP1=0, select bank1
   868  1393  01B4               	clrf	DIO_voidInitPin@Dir^(0+128)
   869  1394  0AB4               	incf	DIO_voidInitPin@Dir^(0+128),f
   870  1395  3008               	movlw	8
   871  1396  120A  158A  2424  160A  118A  	fcall	_DIO_voidInitPin
   872                           
   873                           ;SWITCH.c: 28:     DIO_voidInitPin(9, 1);
   874  139B  1683               	bsf	3,5	;RP0=1, select bank1
   875  139C  1303               	bcf	3,6	;RP1=0, select bank1
   876  139D  01B4               	clrf	DIO_voidInitPin@Dir^(0+128)
   877  139E  0AB4               	incf	DIO_voidInitPin@Dir^(0+128),f
   878  139F  3009               	movlw	9
   879  13A0  120A  158A  2424  160A  118A  	fcall	_DIO_voidInitPin
   880  13A5                     l169:
   881  13A5  0008               	return
   882  13A6                     __end_of_sw_int:
   883                           
   884                           	psect	text2
   885  12C2                     __ptext2:	
   886 ;; *************** function _TMR_Start *****************
   887 ;; Defined at:
   888 ;;		line 79 in file "TMR0.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, btemp+1
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    5
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _TMR_Start
   918  12C2                     _TMR_Start:
   919  12C2                     l3519:	
   920                           ;incstack = 0
   921                           ; Regs used in _TMR_Start: [wreg+status,2+status,0+btemp+1]
   922                           
   923                           
   924                           ;TMR0.c: 82:     ((*((uint8*)(0x0B))) |= (1 << (5)));
   925  12C2  168B               	bsf	11,5
   926                           
   927                           ;TMR0.c: 84:     ((*((uint8*)(0x0B))) |= (1 << (7)));
   928  12C3  178B               	bsf	11,7
   929                           
   930                           ;TMR0.c: 86:     ((*((uint8*)(0x0B))) |= (1 << (6)));
   931  12C4  170B               	bsf	11,6
   932  12C5                     l3521:
   933                           
   934                           ;TMR0.c: 88:     (*((uint8*)(0x0B)) &= ~(1 << 2));
   935  12C5  30FB               	movlw	251
   936  12C6  00FF               	movwf	btemp+1
   937  12C7  087F               	movf	btemp+1,w
   938  12C8  058B               	andwf	11,f
   939  12C9                     l3523:
   940                           
   941                           ;TMR0.c: 90:     (*((uint8*)(0x01))=(((uint8) ((256 + 2)-(((8.0 * 5.0) / (256.0))*250.0)
      +                          )) | (*((uint8*)(0x01))&0x00)));
   942  12C9  30DA               	movlw	218
   943  12CA  00FF               	movwf	btemp+1
   944  12CB  087F               	movf	btemp+1,w
   945  12CC  1283               	bcf	3,5	;RP0=0, select bank0
   946  12CD  1303               	bcf	3,6	;RP1=0, select bank0
   947  12CE  0081               	movwf	1
   948  12CF                     l118:
   949  12CF  0008               	return
   950  12D0                     __end_of_TMR_Start:
   951                           
   952                           	psect	text3
   953  0803                     __ptext3:	
   954 ;; *************** function _TMR_Init *****************
   955 ;; Defined at:
   956 ;;		line 20 in file "TMR0.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  prescale        2    0        int 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       2       0       0
   972 ;;      Temps:          0       0       0       0       0
   973 ;;      Totals:         0       0       2       0       0
   974 ;;Total ram usage:        2 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    5
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _TMR_Init
   986  0803                     _TMR_Init:
   987  0803                     l3477:	
   988                           ;incstack = 0
   989                           ; Regs used in _TMR_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
   990                           
   991                           
   992                           ;TMR0.c: 24:     switch (prescale) {
   993  0803  286E               	goto	l3507
   994  0804                     l3479:
   995                           
   996                           ;TMR0.c: 26:             (*((uint8*)(0x81)) &= ~(1 << 0));
   997  0804  30FE               	movlw	254
   998  0805  00FF               	movwf	btemp+1
   999  0806  087F               	movf	btemp+1,w
  1000  0807  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0808  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0809  0581               	andwf	1,f
  1003                           
  1004                           ;TMR0.c: 27:             (*((uint8*)(0x81)) &= ~(1 << 1));
  1005  080A  30FD               	movlw	253
  1006  080B  00FF               	movwf	btemp+1
  1007  080C  087F               	movf	btemp+1,w
  1008  080D  0581               	andwf	1,f
  1009                           
  1010                           ;TMR0.c: 28:             (*((uint8*)(0x81)) &= ~(1 << 2));
  1011  080E  30FB               	movlw	251
  1012  080F  00FF               	movwf	btemp+1
  1013  0810  087F               	movf	btemp+1,w
  1014  0811  0581               	andwf	1,f
  1015                           
  1016                           ;TMR0.c: 29:             (*((uint8*)(0x81)) &= ~(1 << 3));
  1017  0812  30F7               	movlw	247
  1018  0813  00FF               	movwf	btemp+1
  1019  0814  087F               	movf	btemp+1,w
  1020  0815  0581               	andwf	1,f
  1021                           
  1022                           ;TMR0.c: 30:             break;
  1023  0816  2892               	goto	l3509
  1024  0817                     l108:	
  1025                           ;TMR0.c: 31:         case 4:
  1026                           
  1027                           
  1028                           ;TMR0.c: 32:             ((*((uint8*)(0x81))) |= (1 << (0)));
  1029  0817  1683               	bsf	3,5	;RP0=1, select bank1
  1030  0818  1303               	bcf	3,6	;RP1=0, select bank1
  1031  0819  1401               	bsf	1,0
  1032  081A                     l3481:
  1033                           
  1034                           ;TMR0.c: 33:             (*((uint8*)(0x81)) &= ~(1 << 1));
  1035  081A  30FD               	movlw	253
  1036  081B  00FF               	movwf	btemp+1
  1037  081C  087F               	movf	btemp+1,w
  1038  081D  0581               	andwf	1,f
  1039                           
  1040                           ;TMR0.c: 34:             (*((uint8*)(0x81)) &= ~(1 << 2));
  1041  081E  30FB               	movlw	251
  1042  081F  00FF               	movwf	btemp+1
  1043  0820  087F               	movf	btemp+1,w
  1044  0821  0581               	andwf	1,f
  1045                           
  1046                           ;TMR0.c: 35:             (*((uint8*)(0x81)) &= ~(1 << 3));
  1047  0822  30F7               	movlw	247
  1048  0823  00FF               	movwf	btemp+1
  1049  0824  087F               	movf	btemp+1,w
  1050  0825  0581               	andwf	1,f
  1051                           
  1052                           ;TMR0.c: 36:             break;
  1053  0826  2892               	goto	l3509
  1054  0827                     l3483:
  1055                           
  1056                           ;TMR0.c: 38:             (*((uint8*)(0x81)) &= ~(1 << 0));
  1057  0827  30FE               	movlw	254
  1058  0828  00FF               	movwf	btemp+1
  1059  0829  087F               	movf	btemp+1,w
  1060  082A  1683               	bsf	3,5	;RP0=1, select bank1
  1061  082B  1303               	bcf	3,6	;RP1=0, select bank1
  1062  082C  0581               	andwf	1,f
  1063  082D                     l3485:
  1064                           
  1065                           ;TMR0.c: 39:             ((*((uint8*)(0x81))) |= (1 << (1)));
  1066  082D  1481               	bsf	1,1
  1067                           
  1068                           ;TMR0.c: 40:             (*((uint8*)(0x81)) &= ~(1 << 2));
  1069  082E  30FB               	movlw	251
  1070  082F  00FF               	movwf	btemp+1
  1071  0830  087F               	movf	btemp+1,w
  1072  0831  0581               	andwf	1,f
  1073                           
  1074                           ;TMR0.c: 41:             (*((uint8*)(0x81)) &= ~(1 << 3));
  1075  0832  30F7               	movlw	247
  1076  0833  00FF               	movwf	btemp+1
  1077  0834  087F               	movf	btemp+1,w
  1078  0835  0581               	andwf	1,f
  1079                           
  1080                           ;TMR0.c: 42:             break;
  1081  0836  2892               	goto	l3509
  1082  0837                     l110:	
  1083                           ;TMR0.c: 43:         case 16:
  1084                           
  1085                           
  1086                           ;TMR0.c: 44:             ((*((uint8*)(0x81))) |= (1 << (0)));
  1087  0837  1683               	bsf	3,5	;RP0=1, select bank1
  1088  0838  1303               	bcf	3,6	;RP1=0, select bank1
  1089  0839  1401               	bsf	1,0
  1090                           
  1091                           ;TMR0.c: 45:             ((*((uint8*)(0x81))) |= (1 << (1)));
  1092  083A  1481               	bsf	1,1
  1093  083B                     l3487:
  1094                           
  1095                           ;TMR0.c: 46:             (*((uint8*)(0x81)) &= ~(1 << 2));
  1096  083B  30FB               	movlw	251
  1097  083C  00FF               	movwf	btemp+1
  1098  083D  087F               	movf	btemp+1,w
  1099  083E  0581               	andwf	1,f
  1100                           
  1101                           ;TMR0.c: 47:             (*((uint8*)(0x81)) &= ~(1 << 3));
  1102  083F  30F7               	movlw	247
  1103  0840  00FF               	movwf	btemp+1
  1104  0841  087F               	movf	btemp+1,w
  1105  0842  0581               	andwf	1,f
  1106                           
  1107                           ;TMR0.c: 48:             break;
  1108  0843  2892               	goto	l3509
  1109  0844                     l3489:
  1110                           
  1111                           ;TMR0.c: 50:             (*((uint8*)(0x81)) &= ~(1 << 0));
  1112  0844  30FE               	movlw	254
  1113  0845  00FF               	movwf	btemp+1
  1114  0846  087F               	movf	btemp+1,w
  1115  0847  1683               	bsf	3,5	;RP0=1, select bank1
  1116  0848  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0849  0581               	andwf	1,f
  1118                           
  1119                           ;TMR0.c: 51:             (*((uint8*)(0x81)) &= ~(1 << 1));
  1120  084A  30FD               	movlw	253
  1121  084B  00FF               	movwf	btemp+1
  1122  084C  087F               	movf	btemp+1,w
  1123  084D  0581               	andwf	1,f
  1124  084E                     l3491:
  1125                           
  1126                           ;TMR0.c: 52:             ((*((uint8*)(0x81))) |= (1 << (2)));
  1127  084E  1501               	bsf	1,2
  1128                           
  1129                           ;TMR0.c: 53:             (*((uint8*)(0x81)) &= ~(1 << 3));
  1130  084F  30F7               	movlw	247
  1131  0850  00FF               	movwf	btemp+1
  1132  0851  087F               	movf	btemp+1,w
  1133  0852  0581               	andwf	1,f
  1134                           
  1135                           ;TMR0.c: 54:             break;
  1136  0853  2892               	goto	l3509
  1137  0854                     l112:	
  1138                           ;TMR0.c: 55:         case 64:
  1139                           
  1140                           
  1141                           ;TMR0.c: 56:             ((*((uint8*)(0x81))) |= (1 << (0)));
  1142  0854  1683               	bsf	3,5	;RP0=1, select bank1
  1143  0855  1303               	bcf	3,6	;RP1=0, select bank1
  1144  0856  1401               	bsf	1,0
  1145  0857                     l3493:
  1146                           
  1147                           ;TMR0.c: 57:             (*((uint8*)(0x81)) &= ~(1 << 1));
  1148  0857  30FD               	movlw	253
  1149  0858  00FF               	movwf	btemp+1
  1150  0859  087F               	movf	btemp+1,w
  1151  085A  0581               	andwf	1,f
  1152  085B  284E               	goto	l3491
  1153  085C                     l3497:
  1154                           
  1155                           ;TMR0.c: 62:             (*((uint8*)(0x81)) &= ~(1 << 0));
  1156  085C  30FE               	movlw	254
  1157  085D  00FF               	movwf	btemp+1
  1158  085E  087F               	movf	btemp+1,w
  1159  085F  1683               	bsf	3,5	;RP0=1, select bank1
  1160  0860  1303               	bcf	3,6	;RP1=0, select bank1
  1161  0861  0581               	andwf	1,f
  1162  0862                     l3499:
  1163                           
  1164                           ;TMR0.c: 63:             ((*((uint8*)(0x81))) |= (1 << (1)));
  1165  0862  1481               	bsf	1,1
  1166  0863  284E               	goto	l3491
  1167  0864                     l114:	
  1168                           ;TMR0.c: 67:         case 256:
  1169                           
  1170                           
  1171                           ;TMR0.c: 68:             ((*((uint8*)(0x81))) |= (1 << (0)));
  1172  0864  1683               	bsf	3,5	;RP0=1, select bank1
  1173  0865  1303               	bcf	3,6	;RP1=0, select bank1
  1174  0866  1401               	bsf	1,0
  1175                           
  1176                           ;TMR0.c: 69:             ((*((uint8*)(0x81))) |= (1 << (1)));
  1177  0867  1481               	bsf	1,1
  1178                           
  1179                           ;TMR0.c: 70:             ((*((uint8*)(0x81))) |= (1 << (2)));
  1180  0868  1501               	bsf	1,2
  1181  0869                     l3503:
  1182                           
  1183                           ;TMR0.c: 71:             (*((uint8*)(0x81)) &= ~(1 << 3));
  1184  0869  30F7               	movlw	247
  1185  086A  00FF               	movwf	btemp+1
  1186  086B  087F               	movf	btemp+1,w
  1187  086C  0581               	andwf	1,f
  1188                           
  1189                           ;TMR0.c: 72:             break;
  1190  086D  2892               	goto	l3509
  1191  086E                     l3507:
  1192                           
  1193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1194                           ; Switch size 1, requested type "simple"
  1195                           ; Number of cases is 2, Range of values is 0 to 1
  1196                           ; switch strategies available:
  1197                           ; Name         Instructions Cycles
  1198                           ; simple_byte            7     4 (average)
  1199                           ; direct_byte           14     8 (fixed)
  1200                           ; jumptable            260     6 (fixed)
  1201                           ;	Chosen strategy is simple_byte
  1202  086E  3001               	movlw	1
  1203  086F  3A00               	xorlw	0	; case 0
  1204  0870  1903               	skipnz
  1205  0871  2876               	goto	l4087
  1206  0872  3A01               	xorlw	1	; case 1
  1207  0873  1903               	skipnz
  1208  0874  288D               	goto	l4089
  1209  0875  2892               	goto	l3509
  1210  0876                     l4087:
  1211                           
  1212                           ; Switch size 1, requested type "simple"
  1213                           ; Number of cases is 7, Range of values is 2 to 128
  1214                           ; switch strategies available:
  1215                           ; Name         Instructions Cycles
  1216                           ; simple_byte           22    12 (average)
  1217                           ; jumptable            263     9 (fixed)
  1218                           ;	Chosen strategy is simple_byte
  1219  0876  3000               	movlw	0
  1220  0877  3A02               	xorlw	2	; case 2
  1221  0878  1903               	skipnz
  1222  0879  2804               	goto	l3479
  1223  087A  3A06               	xorlw	6	; case 4
  1224  087B  1903               	skipnz
  1225  087C  2817               	goto	l108
  1226  087D  3A0C               	xorlw	12	; case 8
  1227  087E  1903               	skipnz
  1228  087F  2827               	goto	l3483
  1229  0880  3A18               	xorlw	24	; case 16
  1230  0881  1903               	skipnz
  1231  0882  2837               	goto	l110
  1232  0883  3A30               	xorlw	48	; case 32
  1233  0884  1903               	skipnz
  1234  0885  2844               	goto	l3489
  1235  0886  3A60               	xorlw	96	; case 64
  1236  0887  1903               	skipnz
  1237  0888  2854               	goto	l112
  1238  0889  3AC0               	xorlw	192	; case 128
  1239  088A  1903               	skipnz
  1240  088B  285C               	goto	l3497
  1241  088C  2892               	goto	l3509
  1242  088D                     l4089:
  1243                           
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 1, Range of values is 0 to 0
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte            4     3 (average)
  1249                           ; direct_byte           11     8 (fixed)
  1250                           ; jumptable            260     6 (fixed)
  1251                           ;	Chosen strategy is simple_byte
  1252  088D  3000               	movlw	0
  1253  088E  3A00               	xorlw	0	; case 0
  1254  088F  1903               	skipnz
  1255  0890  2864               	goto	l114
  1256  0891  2892               	goto	l3509
  1257  0892                     l3509:
  1258                           
  1259                           ;TMR0.c: 74:     (*((uint8*)(0x81)) &= ~(1 << 5));
  1260  0892  30DF               	movlw	223
  1261  0893  00FF               	movwf	btemp+1
  1262  0894  087F               	movf	btemp+1,w
  1263  0895  1683               	bsf	3,5	;RP0=1, select bank1
  1264  0896  1303               	bcf	3,6	;RP1=0, select bank1
  1265  0897  0581               	andwf	1,f
  1266                           
  1267                           ;TMR0.c: 75:     (*((uint8*)(0x81)) &= ~(1 << 4));
  1268  0898  30EF               	movlw	239
  1269  0899  00FF               	movwf	btemp+1
  1270  089A  087F               	movf	btemp+1,w
  1271  089B  0581               	andwf	1,f
  1272  089C                     l115:
  1273  089C  0008               	return
  1274  089D                     __end_of_TMR_Init:
  1275                           
  1276                           	psect	text4
  1277  129E                     __ptext4:	
  1278 ;; *************** function _TMR0_vidSetCallBack *****************
  1279 ;; Defined at:
  1280 ;;		line 95 in file "TMR0.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  CallBack        1    wreg     PTR FTN()void 
  1283 ;;		 -> Sch_UpdateTick_Handler(1), 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  CallBack        1    0[BANK1 ] PTR FTN()void 
  1286 ;;		 -> Sch_UpdateTick_Handler(1), 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, btemp+1
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       1       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         0       0       1       0       0
  1300 ;;Total ram usage:        1 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    5
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _TMR0_vidSetCallBack
  1312  129E                     _TMR0_vidSetCallBack:
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _TMR0_vidSetCallBack: [wreg+btemp+1]
  1316                           ;TMR0_vidSetCallBack@CallBack stored from wreg
  1317  129E  1683               	bsf	3,5	;RP0=1, select bank1
  1318  129F  1303               	bcf	3,6	;RP1=0, select bank1
  1319  12A0  00B4               	movwf	TMR0_vidSetCallBack@CallBack^(0+128)
  1320  12A1                     l3565:
  1321                           
  1322                           ;TMR0.c: 96:     CallBack_ptr = CallBack;
  1323  12A1  0834               	movf	TMR0_vidSetCallBack@CallBack^(0+128),w
  1324  12A2  00FF               	movwf	btemp+1
  1325  12A3  087F               	movf	btemp+1,w
  1326  12A4  1283               	bcf	3,5	;RP0=0, select bank0
  1327  12A5  1303               	bcf	3,6	;RP1=0, select bank0
  1328  12A6  00E6               	movwf	_CallBack_ptr
  1329  12A7                     l121:
  1330  12A7  0008               	return
  1331  12A8                     __end_of_TMR0_vidSetCallBack:
  1332                           
  1333                           	psect	text5
  1334  0EA1                     __ptext5:	
  1335 ;; *************** function _Sch_Start *****************
  1336 ;; Defined at:
  1337 ;;		line 47 in file "Scheduler.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  OPtemp          1   10[BANK1 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         0       0       1       0       0
  1353 ;;      Temps:          0       0       3       0       0
  1354 ;;      Totals:         0       0       4       0       0
  1355 ;;Total ram usage:        4 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    8
  1358 ;; This function calls:
  1359 ;;		_DO_SetState
  1360 ;;		_EEPROM_Read
  1361 ;;		_EEPROM_Write
  1362 ;;		_SSD_OFF
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _Sch_Start
  1370  0EA1                     _Sch_Start:
  1371  0EA1                     l3567:	
  1372                           ;incstack = 0
  1373 ;; hardware stack exceeded
  1374                           ; Regs used in _Sch_Start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1375                           
  1376  0EA1  2FEA               	goto	l3651
  1377  0EA2                     l3569:
  1378                           
  1379                           ;Scheduler.c: 53:                 DO_SetState(21, 0);
  1380  0EA2  01B8               	clrf	DO_SetState@state^(0+128)
  1381  0EA3  3015               	movlw	21
  1382  0EA4  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1383                           
  1384                           ;Scheduler.c: 54:                 DO_SetState(11, 0);
  1385  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  1386  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  1387  0EAB  01B8               	clrf	DO_SetState@state^(0+128)
  1388  0EAC  300B               	movlw	11
  1389  0EAD  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1390                           
  1391                           ;Scheduler.c: 55:                 DO_SetState(18, 0);
  1392  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  1393  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  1394  0EB4  01B8               	clrf	DO_SetState@state^(0+128)
  1395  0EB5  3012               	movlw	18
  1396  0EB6  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1397  0EBB                     l3571:
  1398                           
  1399                           ;Scheduler.c: 56:                 SSD_OFF();
  1400  0EBB  160A  118A  232F  120A  158A  	fcall	_SSD_OFF
  1401  0EC0                     l3573:
  1402                           
  1403                           ;Scheduler.c: 57:                 if (ON_OFFpushed_flag == 1) {
  1404  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0EC2  0331               	decf	_ON_OFFpushed_flag^(0+128),w
  1407  0EC3  1D03               	btfss	3,2
  1408  0EC4  2EC6               	goto	u4571
  1409  0EC5  2EC7               	goto	u4570
  1410  0EC6                     u4571:
  1411  0EC6  2FEA               	goto	l375
  1412  0EC7                     u4570:
  1413  0EC7                     l3575:
  1414                           
  1415                           ;Scheduler.c: 58:                     ON_OFFpushed_flag = 0;
  1416  0EC7  01B1               	clrf	_ON_OFFpushed_flag^(0+128)
  1417  0EC8                     l3577:
  1418                           
  1419                           ;Scheduler.c: 59:                     state = 1;
  1420  0EC8  01AE               	clrf	_state^(0+128)
  1421  0EC9  0AAE               	incf	_state^(0+128),f
  1422  0ECA  2FEA               	goto	l3651
  1423  0ECB                     l3579:
  1424                           
  1425                           ;Scheduler.c: 65:                 OPtemp = EEPROM_Read(0x00);
  1426  0ECB  3000               	movlw	0
  1427  0ECC  160A  118A  2579  120A  158A  	fcall	_EEPROM_Read
  1428  0ED1  00FF               	movwf	btemp+1
  1429  0ED2  087F               	movf	btemp+1,w
  1430  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0ED5  00BE               	movwf	Sch_Start@OPtemp^(0+128)
  1433  0ED6                     l3581:
  1434                           
  1435                           ;Scheduler.c: 66:                 if (ON_OFFpushed_flag == 1) {
  1436  0ED6  0331               	decf	_ON_OFFpushed_flag^(0+128),w
  1437  0ED7  1D03               	btfss	3,2
  1438  0ED8  2EDA               	goto	u4581
  1439  0ED9  2EDB               	goto	u4580
  1440  0EDA                     u4581:
  1441  0EDA  2EE0               	goto	l3585
  1442  0EDB                     u4580:
  1443  0EDB                     l3583:
  1444                           
  1445                           ;Scheduler.c: 67:                     ON_OFFpushed_flag = 0;
  1446  0EDB  01B1               	clrf	_ON_OFFpushed_flag^(0+128)
  1447                           
  1448                           ;Scheduler.c: 68:                     state = 0;
  1449  0EDC  01AE               	clrf	_state^(0+128)
  1450                           
  1451                           ;Scheduler.c: 69:                     heaterstate = 0;
  1452  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0EDF  01E0               	clrf	_heaterstate
  1455  0EE0                     l3585:
  1456                           
  1457                           ;Scheduler.c: 71:                 if (DOWNpushed_flag == 1 || UPpushed_flag == 1) {
  1458  0EE0  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0EE1  1303               	bcf	3,6	;RP1=0, select bank1
  1460  0EE2  0332               	decf	_DOWNpushed_flag^(0+128),w
  1461  0EE3  1903               	btfsc	3,2
  1462  0EE4  2EE6               	goto	u4591
  1463  0EE5  2EE7               	goto	u4590
  1464  0EE6                     u4591:
  1465  0EE6  2EEC               	goto	l3589
  1466  0EE7                     u4590:
  1467  0EE7                     l3587:
  1468  0EE7  0333               	decf	_UPpushed_flag^(0+128),w
  1469  0EE8  1D03               	btfss	3,2
  1470  0EE9  2EEB               	goto	u4601
  1471  0EEA  2EEC               	goto	u4600
  1472  0EEB                     u4601:
  1473  0EEB  2EFD               	goto	l3597
  1474  0EEC                     u4600:
  1475  0EEC                     l3589:
  1476                           
  1477                           ;Scheduler.c: 72:                     DOWNpushed_flag = 0;
  1478  0EEC  01B2               	clrf	_DOWNpushed_flag^(0+128)
  1479                           
  1480                           ;Scheduler.c: 73:                     UPpushed_flag = 0;
  1481  0EED  01B3               	clrf	_UPpushed_flag^(0+128)
  1482  0EEE                     l3591:
  1483                           
  1484                           ;Scheduler.c: 74:                     state = 2;
  1485  0EEE  3002               	movlw	2
  1486  0EEF  00FF               	movwf	btemp+1
  1487  0EF0  087F               	movf	btemp+1,w
  1488  0EF1  00AE               	movwf	_state^(0+128)
  1489  0EF2                     l3593:
  1490                           
  1491                           ;Scheduler.c: 75:                     u32SetmodeCount = 0;
  1492  0EF2  3000               	movlw	0
  1493  0EF3  00AD               	movwf	(_u32SetmodeCount+3)^(0+128)
  1494  0EF4  3000               	movlw	0
  1495  0EF5  00AC               	movwf	(_u32SetmodeCount+2)^(0+128)
  1496  0EF6  3000               	movlw	0
  1497  0EF7  00AB               	movwf	(_u32SetmodeCount+1)^(0+128)
  1498  0EF8  3000               	movlw	0
  1499  0EF9  00AA               	movwf	_u32SetmodeCount^(0+128)
  1500  0EFA                     l3595:
  1501                           
  1502                           ;Scheduler.c: 76:                     heaterstate = 0;
  1503  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0EFC  01E0               	clrf	_heaterstate
  1506  0EFD                     l3597:
  1507                           
  1508                           ;Scheduler.c: 79:                 if (avgtemp > ((OPtemp + 5))) {
  1509  0EFD  1683               	bsf	3,5	;RP0=1, select bank1
  1510  0EFE  1303               	bcf	3,6	;RP1=0, select bank1
  1511  0EFF  083E               	movf	Sch_Start@OPtemp^(0+128),w
  1512  0F00  3E05               	addlw	5
  1513  0F01  00BB               	movwf	??_Sch_Start^(0+128)
  1514  0F02  3000               	movlw	0
  1515  0F03  1803               	skipnc
  1516  0F04  3001               	movlw	1
  1517  0F05  00BC               	movwf	(??_Sch_Start^(0+128)+1)
  1518  0F06  083C               	movf	(??_Sch_Start+1)^(0+128),w
  1519  0F07  3A80               	xorlw	128
  1520  0F08  00BD               	movwf	(??_Sch_Start+2)^(0+128)
  1521  0F09  3080               	movlw	128
  1522  0F0A  023D               	subwf	(??_Sch_Start+2)^(0+128),w
  1523  0F0B  1D03               	skipz
  1524  0F0C  2F0F               	goto	u4615
  1525  0F0D  082F               	movf	_avgtemp^(0+128),w
  1526  0F0E  023B               	subwf	??_Sch_Start^(0+128),w
  1527  0F0F                     u4615:
  1528  0F0F  1803               	skipnc
  1529  0F10  2F12               	goto	u4611
  1530  0F11  2F13               	goto	u4610
  1531  0F12                     u4611:
  1532  0F12  2F33               	goto	l3603
  1533  0F13                     u4610:
  1534  0F13                     l3599:
  1535                           
  1536                           ;Scheduler.c: 80:                     DO_SetState(21, 0);
  1537  0F13  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0F14  1303               	bcf	3,6	;RP1=0, select bank1
  1539  0F15  01B8               	clrf	DO_SetState@state^(0+128)
  1540  0F16  3015               	movlw	21
  1541  0F17  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1542                           
  1543                           ;Scheduler.c: 81:                     DO_SetState(18, 1);
  1544  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0F1E  01B8               	clrf	DO_SetState@state^(0+128)
  1547  0F1F  0AB8               	incf	DO_SetState@state^(0+128),f
  1548  0F20  3012               	movlw	18
  1549  0F21  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1550                           
  1551                           ;Scheduler.c: 83:                     DO_SetState(11, 1);
  1552  0F26  1683               	bsf	3,5	;RP0=1, select bank1
  1553  0F27  1303               	bcf	3,6	;RP1=0, select bank1
  1554  0F28  01B8               	clrf	DO_SetState@state^(0+128)
  1555  0F29  0AB8               	incf	DO_SetState@state^(0+128),f
  1556  0F2A  300B               	movlw	11
  1557  0F2B  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1558  0F30                     l3601:
  1559                           
  1560                           ;Scheduler.c: 84:                     heaterstate = 0;
  1561  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0F32  01E0               	clrf	_heaterstate
  1564  0F33                     l3603:
  1565                           
  1566                           ;Scheduler.c: 87:                 if (avgtemp < ((OPtemp - 5))) {
  1567  0F33  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0F34  1303               	bcf	3,6	;RP1=0, select bank1
  1569  0F35  083E               	movf	Sch_Start@OPtemp^(0+128),w
  1570  0F36  3EFB               	addlw	251
  1571  0F37  00BB               	movwf	??_Sch_Start^(0+128)
  1572  0F38  30FF               	movlw	255
  1573  0F39  1803               	skipnc
  1574  0F3A  3000               	movlw	0
  1575  0F3B  00BC               	movwf	(??_Sch_Start^(0+128)+1)
  1576  0F3C  083C               	movf	(??_Sch_Start+1)^(0+128),w
  1577  0F3D  3A80               	xorlw	128
  1578  0F3E  3C80               	sublw	128
  1579  0F3F  1D03               	skipz
  1580  0F40  2F43               	goto	u4625
  1581  0F41  083B               	movf	??_Sch_Start^(0+128),w
  1582  0F42  022F               	subwf	_avgtemp^(0+128),w
  1583  0F43                     u4625:
  1584  0F43  1803               	skipnc
  1585  0F44  2F46               	goto	u4621
  1586  0F45  2F47               	goto	u4620
  1587  0F46                     u4621:
  1588  0F46  2FEA               	goto	l375
  1589  0F47                     u4620:
  1590  0F47                     l3605:
  1591                           
  1592                           ;Scheduler.c: 88:                     DO_SetState(21, 1);
  1593  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0F49  01B8               	clrf	DO_SetState@state^(0+128)
  1596  0F4A  0AB8               	incf	DO_SetState@state^(0+128),f
  1597  0F4B  3015               	movlw	21
  1598  0F4C  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1599                           
  1600                           ;Scheduler.c: 89:                     DO_SetState(18, 0);
  1601  0F51  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0F52  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0F53  01B8               	clrf	DO_SetState@state^(0+128)
  1604  0F54  3012               	movlw	18
  1605  0F55  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1606  0F5A                     l3607:
  1607                           
  1608                           ;Scheduler.c: 90:                     heaterstate = 1;
  1609  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0F5C  01E0               	clrf	_heaterstate
  1612  0F5D  0AE0               	incf	_heaterstate,f
  1613  0F5E  2FEA               	goto	l3651
  1614  0F5F                     l3609:
  1615                           
  1616                           ;Scheduler.c: 95:                 DO_SetState(21, 0);
  1617  0F5F  01B8               	clrf	DO_SetState@state^(0+128)
  1618  0F60  3015               	movlw	21
  1619  0F61  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1620                           
  1621                           ;Scheduler.c: 96:                 DO_SetState(11, 0);
  1622  0F66  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0F67  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0F68  01B8               	clrf	DO_SetState@state^(0+128)
  1625  0F69  300B               	movlw	11
  1626  0F6A  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1627                           
  1628                           ;Scheduler.c: 97:                 DO_SetState(18, 0);
  1629  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0F71  01B8               	clrf	DO_SetState@state^(0+128)
  1632  0F72  3012               	movlw	18
  1633  0F73  160A  118A  22B4  120A  158A  	fcall	_DO_SetState
  1634  0F78                     l3611:
  1635                           
  1636                           ;Scheduler.c: 98:                 if (ON_OFFpushed_flag == 1) {
  1637  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  1638  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  1639  0F7A  0331               	decf	_ON_OFFpushed_flag^(0+128),w
  1640  0F7B  1D03               	btfss	3,2
  1641  0F7C  2F7E               	goto	u4631
  1642  0F7D  2F7F               	goto	u4630
  1643  0F7E                     u4631:
  1644  0F7E  2F81               	goto	l3615
  1645  0F7F                     u4630:
  1646  0F7F                     l3613:
  1647                           
  1648                           ;Scheduler.c: 99:                     ON_OFFpushed_flag = 0;
  1649  0F7F  01B1               	clrf	_ON_OFFpushed_flag^(0+128)
  1650                           
  1651                           ;Scheduler.c: 100:                     state = 0;
  1652  0F80  01AE               	clrf	_state^(0+128)
  1653  0F81                     l3615:
  1654                           
  1655                           ;Scheduler.c: 102:                 if (DOWNpushed_flag == 1) {
  1656  0F81  0332               	decf	_DOWNpushed_flag^(0+128),w
  1657  0F82  1D03               	btfss	3,2
  1658  0F83  2F85               	goto	u4641
  1659  0F84  2F86               	goto	u4640
  1660  0F85                     u4641:
  1661  0F85  2FA7               	goto	l3629
  1662  0F86                     u4640:
  1663  0F86                     l3617:
  1664                           
  1665                           ;Scheduler.c: 103:                     Settemp -= 5;
  1666  0F86  3005               	movlw	5
  1667  0F87  02B0               	subwf	_Settemp^(0+128),f
  1668  0F88                     l3619:
  1669                           
  1670                           ;Scheduler.c: 104:                     if (Settemp < 35) {
  1671  0F88  3023               	movlw	35
  1672  0F89  0230               	subwf	_Settemp^(0+128),w
  1673  0F8A  1803               	skipnc
  1674  0F8B  2F8D               	goto	u4651
  1675  0F8C  2F8E               	goto	u4650
  1676  0F8D                     u4651:
  1677  0F8D  2F92               	goto	l3623
  1678  0F8E                     u4650:
  1679  0F8E                     l3621:
  1680                           
  1681                           ;Scheduler.c: 105:                         Settemp = 35;
  1682  0F8E  3023               	movlw	35
  1683  0F8F  00FF               	movwf	btemp+1
  1684  0F90  087F               	movf	btemp+1,w
  1685  0F91  00B0               	movwf	_Settemp^(0+128)
  1686  0F92                     l3623:
  1687                           
  1688                           ;Scheduler.c: 107:                     DOWNpushed_flag = 0;
  1689  0F92  01B2               	clrf	_DOWNpushed_flag^(0+128)
  1690  0F93                     l3625:
  1691                           
  1692                           ;Scheduler.c: 109:                     EEPROM_Write(0x00, Settemp);
  1693  0F93  0830               	movf	_Settemp^(0+128),w
  1694  0F94  00FF               	movwf	btemp+1
  1695  0F95  087F               	movf	btemp+1,w
  1696  0F96  00B7               	movwf	EEPROM_Write@data^(0+128)
  1697  0F97  3000               	movlw	0
  1698  0F98  160A  118A  23EF  120A  158A  	fcall	_EEPROM_Write
  1699  0F9D                     l3627:
  1700                           
  1701                           ;Scheduler.c: 111:                     u32SetmodeCount = 0;
  1702  0F9D  3000               	movlw	0
  1703  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  1705  0FA0  00AD               	movwf	(_u32SetmodeCount+3)^(0+128)
  1706  0FA1  3000               	movlw	0
  1707  0FA2  00AC               	movwf	(_u32SetmodeCount+2)^(0+128)
  1708  0FA3  3000               	movlw	0
  1709  0FA4  00AB               	movwf	(_u32SetmodeCount+1)^(0+128)
  1710  0FA5  3000               	movlw	0
  1711  0FA6  00AA               	movwf	_u32SetmodeCount^(0+128)
  1712  0FA7                     l3629:
  1713                           
  1714                           ;Scheduler.c: 114:                 if (UPpushed_flag == 1) {
  1715  0FA7  0333               	decf	_UPpushed_flag^(0+128),w
  1716  0FA8  1D03               	btfss	3,2
  1717  0FA9  2FAB               	goto	u4661
  1718  0FAA  2FAC               	goto	u4660
  1719  0FAB                     u4661:
  1720  0FAB  2FCF               	goto	l3643
  1721  0FAC                     u4660:
  1722  0FAC                     l3631:
  1723                           
  1724                           ;Scheduler.c: 115:                     Settemp += 5;
  1725  0FAC  3005               	movlw	5
  1726  0FAD  00FF               	movwf	btemp+1
  1727  0FAE  087F               	movf	btemp+1,w
  1728  0FAF  07B0               	addwf	_Settemp^(0+128),f
  1729  0FB0                     l3633:
  1730                           
  1731                           ;Scheduler.c: 116:                     if (Settemp > 75) {
  1732  0FB0  304C               	movlw	76
  1733  0FB1  0230               	subwf	_Settemp^(0+128),w
  1734  0FB2  1C03               	skipc
  1735  0FB3  2FB5               	goto	u4671
  1736  0FB4  2FB6               	goto	u4670
  1737  0FB5                     u4671:
  1738  0FB5  2FBA               	goto	l3637
  1739  0FB6                     u4670:
  1740  0FB6                     l3635:
  1741                           
  1742                           ;Scheduler.c: 117:                         Settemp = 75;
  1743  0FB6  304B               	movlw	75
  1744  0FB7  00FF               	movwf	btemp+1
  1745  0FB8  087F               	movf	btemp+1,w
  1746  0FB9  00B0               	movwf	_Settemp^(0+128)
  1747  0FBA                     l3637:
  1748                           
  1749                           ;Scheduler.c: 119:                     UPpushed_flag = 0;
  1750  0FBA  01B3               	clrf	_UPpushed_flag^(0+128)
  1751  0FBB                     l3639:
  1752                           
  1753                           ;Scheduler.c: 121:                     EEPROM_Write(0x00, Settemp);
  1754  0FBB  0830               	movf	_Settemp^(0+128),w
  1755  0FBC  00FF               	movwf	btemp+1
  1756  0FBD  087F               	movf	btemp+1,w
  1757  0FBE  00B7               	movwf	EEPROM_Write@data^(0+128)
  1758  0FBF  3000               	movlw	0
  1759  0FC0  160A  118A  23EF  120A  158A  	fcall	_EEPROM_Write
  1760  0FC5                     l3641:
  1761                           
  1762                           ;Scheduler.c: 123:                     u32SetmodeCount = 0;
  1763  0FC5  3000               	movlw	0
  1764  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  1765  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  1766  0FC8  00AD               	movwf	(_u32SetmodeCount+3)^(0+128)
  1767  0FC9  3000               	movlw	0
  1768  0FCA  00AC               	movwf	(_u32SetmodeCount+2)^(0+128)
  1769  0FCB  3000               	movlw	0
  1770  0FCC  00AB               	movwf	(_u32SetmodeCount+1)^(0+128)
  1771  0FCD  3000               	movlw	0
  1772  0FCE  00AA               	movwf	_u32SetmodeCount^(0+128)
  1773  0FCF                     l3643:
  1774                           
  1775                           ;Scheduler.c: 125:                 if (u32SetmodeCount > 1000) {
  1776  0FCF  082D               	movf	(_u32SetmodeCount+3)^(0+128),w
  1777  0FD0  1D03               	btfss	3,2
  1778  0FD1  2FE1               	goto	u4680
  1779  0FD2  082C               	movf	(_u32SetmodeCount+2)^(0+128),w
  1780  0FD3  1D03               	btfss	3,2
  1781  0FD4  2FE1               	goto	u4680
  1782  0FD5  3003               	movlw	3
  1783  0FD6  022B               	subwf	(_u32SetmodeCount+1)^(0+128),w
  1784  0FD7  1D03               	skipz
  1785  0FD8  2FDD               	goto	u4683
  1786  0FD9  30E9               	movlw	233
  1787  0FDA  022A               	subwf	_u32SetmodeCount^(0+128),w
  1788  0FDB  1D03               	skipz
  1789  0FDC  2FDD               	goto	u4683
  1790  0FDD                     u4683:
  1791  0FDD  1C03               	btfss	3,0
  1792  0FDE  2FE0               	goto	u4681
  1793  0FDF  2FE1               	goto	u4680
  1794  0FE0                     u4681:
  1795  0FE0  2FEA               	goto	l375
  1796  0FE1                     u4680:
  1797  0FE1                     l3645:
  1798                           
  1799                           ;Scheduler.c: 127:                     u32SetmodeCount = 0;
  1800  0FE1  3000               	movlw	0
  1801  0FE2  00AD               	movwf	(_u32SetmodeCount+3)^(0+128)
  1802  0FE3  3000               	movlw	0
  1803  0FE4  00AC               	movwf	(_u32SetmodeCount+2)^(0+128)
  1804  0FE5  3000               	movlw	0
  1805  0FE6  00AB               	movwf	(_u32SetmodeCount+1)^(0+128)
  1806  0FE7  3000               	movlw	0
  1807  0FE8  00AA               	movwf	_u32SetmodeCount^(0+128)
  1808  0FE9  2EC8               	goto	l3577
  1809  0FEA                     l375:
  1810  0FEA                     l3651:
  1811  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  1812  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  1813  0FEC  082E               	movf	_state^(0+128),w
  1814  0FED  00BB               	movwf	??_Sch_Start^(0+128)
  1815  0FEE  01BC               	clrf	(??_Sch_Start^(0+128)+1)
  1816                           
  1817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1818                           ; Switch size 1, requested type "simple"
  1819                           ; Number of cases is 1, Range of values is 0 to 0
  1820                           ; switch strategies available:
  1821                           ; Name         Instructions Cycles
  1822                           ; simple_byte            4     3 (average)
  1823                           ; direct_byte           11     8 (fixed)
  1824                           ; jumptable            260     6 (fixed)
  1825                           ;	Chosen strategy is simple_byte
  1826  0FEF  083C               	movf	(??_Sch_Start+1)^(0+128),w
  1827  0FF0  3A00               	xorlw	0	; case 0
  1828  0FF1  1903               	skipnz
  1829  0FF2  2FF4               	goto	l4091
  1830  0FF3  2FEA               	goto	l3651
  1831  0FF4                     l4091:
  1832                           
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 3, Range of values is 0 to 2
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte           10     6 (average)
  1838                           ; direct_byte           17     8 (fixed)
  1839                           ; jumptable            260     6 (fixed)
  1840                           ;	Chosen strategy is simple_byte
  1841  0FF4  083B               	movf	??_Sch_Start^(0+128),w
  1842  0FF5  3A00               	xorlw	0	; case 0
  1843  0FF6  1903               	skipnz
  1844  0FF7  2EA2               	goto	l3569
  1845  0FF8  3A01               	xorlw	1	; case 1
  1846  0FF9  1903               	skipnz
  1847  0FFA  2ECB               	goto	l3579
  1848  0FFB  3A03               	xorlw	3	; case 2
  1849  0FFC  1903               	skipnz
  1850  0FFD  2F5F               	goto	l3609
  1851  0FFE  2FEA               	goto	l3651
  1852  0FFF  0008               	return
  1853  1000                     __end_of_Sch_Start:
  1854                           
  1855                           	psect	text6
  1856  132F                     __ptext6:	
  1857 ;; *************** function _SSD_OFF *****************
  1858 ;; Defined at:
  1859 ;;		line 98 in file "SSD.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0
  1876 ;;      Totals:         0       0       0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    6
  1880 ;; This function calls:
  1881 ;;		_DIO_voidWritePinValue
  1882 ;;		_DIO_voidWritePortValue
  1883 ;; This function is called by:
  1884 ;;		_Sch_Start
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _SSD_OFF
  1890  132F                     _SSD_OFF:
  1891  132F                     l3363:	
  1892                           ;incstack = 0
  1893                           ; Regs used in _SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1894                           
  1895                           
  1896                           ;SSD.c: 99:     DIO_voidWritePinValue(4, 0);
  1897  132F  1683               	bsf	3,5	;RP0=1, select bank1
  1898  1330  1303               	bcf	3,6	;RP1=0, select bank1
  1899  1331  01B4               	clrf	DIO_voidWritePinValue@value^(0+128)
  1900  1332  3004               	movlw	4
  1901  1333  120A  158A  222A  160A  118A  	fcall	_DIO_voidWritePinValue
  1902                           
  1903                           ;SSD.c: 100:     DIO_voidWritePinValue(5, 0);
  1904  1338  1683               	bsf	3,5	;RP0=1, select bank1
  1905  1339  1303               	bcf	3,6	;RP1=0, select bank1
  1906  133A  01B4               	clrf	DIO_voidWritePinValue@value^(0+128)
  1907  133B  3005               	movlw	5
  1908  133C  120A  158A  222A  160A  118A  	fcall	_DIO_voidWritePinValue
  1909  1341                     l3365:
  1910                           
  1911                           ;SSD.c: 101:     DIO_voidWritePortValue(3, 0x00);
  1912  1341  1683               	bsf	3,5	;RP0=1, select bank1
  1913  1342  1303               	bcf	3,6	;RP1=0, select bank1
  1914  1343  01B4               	clrf	DIO_voidWritePortValue@value^(0+128)
  1915  1344  3003               	movlw	3
  1916  1345  160A  118A  24F5  160A  118A  	fcall	_DIO_voidWritePortValue
  1917  134A                     l322:
  1918  134A  0008               	return
  1919  134B                     __end_of_SSD_OFF:
  1920                           
  1921                           	psect	text7
  1922  14F5                     __ptext7:	
  1923 ;; *************** function _DIO_voidWritePortValue *****************
  1924 ;; Defined at:
  1925 ;;		line 61 in file "DIO.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  Port            1    wreg     unsigned char 
  1928 ;;  value           1    0[BANK1 ] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  Port            1    3[BANK1 ] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       0       1       0       0
  1941 ;;      Locals:         0       0       1       0       0
  1942 ;;      Temps:          0       0       2       0       0
  1943 ;;      Totals:         0       0       4       0       0
  1944 ;;Total ram usage:        4 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    5
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_SSD_OFF
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _DIO_voidWritePortValue
  1956  14F5                     _DIO_voidWritePortValue:
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in _DIO_voidWritePortValue: [wreg-fsr0h+status,2+status,0+btemp+1]
  1960                           ;DIO_voidWritePortValue@Port stored from wreg
  1961  14F5  1683               	bsf	3,5	;RP0=1, select bank1
  1962  14F6  1303               	bcf	3,6	;RP1=0, select bank1
  1963  14F7  00B7               	movwf	DIO_voidWritePortValue@Port^(0+128)
  1964  14F8                     l2579:
  1965                           
  1966                           ;DIO.c: 62:     switch (Port) {
  1967  14F8  2D1C               	goto	l2593
  1968  14F9                     l2581:
  1969                           
  1970                           ;DIO.c: 64:             *((uint8*)(0x05)) = value;
  1971  14F9  0834               	movf	DIO_voidWritePortValue@value^(0+128),w
  1972  14FA  00FF               	movwf	btemp+1
  1973  14FB  087F               	movf	btemp+1,w
  1974  14FC  1283               	bcf	3,5	;RP0=0, select bank0
  1975  14FD  1303               	bcf	3,6	;RP1=0, select bank0
  1976  14FE  0085               	movwf	5
  1977                           
  1978                           ;DIO.c: 65:             break;
  1979  14FF  2D35               	goto	l30
  1980  1500                     l2583:
  1981                           
  1982                           ;DIO.c: 67:             *((uint8*)(0x06)) = value;
  1983  1500  0834               	movf	DIO_voidWritePortValue@value^(0+128),w
  1984  1501  00FF               	movwf	btemp+1
  1985  1502  087F               	movf	btemp+1,w
  1986  1503  1283               	bcf	3,5	;RP0=0, select bank0
  1987  1504  1303               	bcf	3,6	;RP1=0, select bank0
  1988  1505  0086               	movwf	6
  1989                           
  1990                           ;DIO.c: 68:             break;
  1991  1506  2D35               	goto	l30
  1992  1507                     l2585:
  1993                           
  1994                           ;DIO.c: 70:             *((uint8*)(0x07)) = value;
  1995  1507  0834               	movf	DIO_voidWritePortValue@value^(0+128),w
  1996  1508  00FF               	movwf	btemp+1
  1997  1509  087F               	movf	btemp+1,w
  1998  150A  1283               	bcf	3,5	;RP0=0, select bank0
  1999  150B  1303               	bcf	3,6	;RP1=0, select bank0
  2000  150C  0087               	movwf	7
  2001                           
  2002                           ;DIO.c: 71:             break;
  2003  150D  2D35               	goto	l30
  2004  150E                     l2587:
  2005                           
  2006                           ;DIO.c: 73:             *((uint8*)(0x08)) = value;
  2007  150E  0834               	movf	DIO_voidWritePortValue@value^(0+128),w
  2008  150F  00FF               	movwf	btemp+1
  2009  1510  087F               	movf	btemp+1,w
  2010  1511  1283               	bcf	3,5	;RP0=0, select bank0
  2011  1512  1303               	bcf	3,6	;RP1=0, select bank0
  2012  1513  0088               	movwf	8
  2013                           
  2014                           ;DIO.c: 74:             break;
  2015  1514  2D35               	goto	l30
  2016  1515                     l2589:
  2017                           
  2018                           ;DIO.c: 76:             *((uint8*)(0x09)) = value;
  2019  1515  0834               	movf	DIO_voidWritePortValue@value^(0+128),w
  2020  1516  00FF               	movwf	btemp+1
  2021  1517  087F               	movf	btemp+1,w
  2022  1518  1283               	bcf	3,5	;RP0=0, select bank0
  2023  1519  1303               	bcf	3,6	;RP1=0, select bank0
  2024  151A  0089               	movwf	9
  2025                           
  2026                           ;DIO.c: 77:             break;
  2027  151B  2D35               	goto	l30
  2028  151C                     l2593:
  2029  151C  0837               	movf	DIO_voidWritePortValue@Port^(0+128),w
  2030  151D  00B5               	movwf	??_DIO_voidWritePortValue^(0+128)
  2031  151E  01B6               	clrf	(??_DIO_voidWritePortValue^(0+128)+1)
  2032                           
  2033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2034                           ; Switch size 1, requested type "simple"
  2035                           ; Number of cases is 1, Range of values is 0 to 0
  2036                           ; switch strategies available:
  2037                           ; Name         Instructions Cycles
  2038                           ; simple_byte            4     3 (average)
  2039                           ; direct_byte           11     8 (fixed)
  2040                           ; jumptable            260     6 (fixed)
  2041                           ;	Chosen strategy is simple_byte
  2042  151F  0836               	movf	(??_DIO_voidWritePortValue+1)^(0+128),w
  2043  1520  3A00               	xorlw	0	; case 0
  2044  1521  1903               	skipnz
  2045  1522  2D24               	goto	l4093
  2046  1523  2D35               	goto	l30
  2047  1524                     l4093:
  2048                           
  2049                           ; Switch size 1, requested type "simple"
  2050                           ; Number of cases is 5, Range of values is 0 to 4
  2051                           ; switch strategies available:
  2052                           ; Name         Instructions Cycles
  2053                           ; simple_byte           16     9 (average)
  2054                           ; direct_byte           23     8 (fixed)
  2055                           ; jumptable            260     6 (fixed)
  2056                           ;	Chosen strategy is simple_byte
  2057  1524  0835               	movf	??_DIO_voidWritePortValue^(0+128),w
  2058  1525  3A00               	xorlw	0	; case 0
  2059  1526  1903               	skipnz
  2060  1527  2CF9               	goto	l2581
  2061  1528  3A01               	xorlw	1	; case 1
  2062  1529  1903               	skipnz
  2063  152A  2D00               	goto	l2583
  2064  152B  3A03               	xorlw	3	; case 2
  2065  152C  1903               	skipnz
  2066  152D  2D07               	goto	l2585
  2067  152E  3A01               	xorlw	1	; case 3
  2068  152F  1903               	skipnz
  2069  1530  2D0E               	goto	l2587
  2070  1531  3A07               	xorlw	7	; case 4
  2071  1532  1903               	skipnz
  2072  1533  2D15               	goto	l2589
  2073  1534  2D35               	goto	l30
  2074  1535                     l30:
  2075  1535  0008               	return
  2076  1536                     __end_of_DIO_voidWritePortValue:
  2077                           
  2078                           	psect	text8
  2079  1579                     __ptext8:	
  2080 ;; *************** function _EEPROM_Read *****************
  2081 ;; Defined at:
  2082 ;;		line 26 in file "EX_E2PROM.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  address         1    wreg     unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  address         1    5[BANK1 ] unsigned char 
  2087 ;;  Data            1    6[BANK1 ] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      unsigned char 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       2       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         0       0       2       0       0
  2101 ;;Total ram usage:        2 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    7
  2104 ;; This function calls:
  2105 ;;		_I2C_Master_Read
  2106 ;;		_I2C_Master_RepeatedStart
  2107 ;;		_I2C_Master_Start
  2108 ;;		_I2C_Master_Stop
  2109 ;;		_I2C_Master_Write
  2110 ;;		_I2C_Nack
  2111 ;; This function is called by:
  2112 ;;		_Sch_Start
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           
  2117                           ;psect for function _EEPROM_Read
  2118  1579                     _EEPROM_Read:
  2119                           
  2120                           ;incstack = 0
  2121 ;; hardware stack exceeded
  2122                           ; Regs used in _EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2123                           ;EEPROM_Read@address stored from wreg
  2124  1579  1683               	bsf	3,5	;RP0=1, select bank1
  2125  157A  1303               	bcf	3,6	;RP1=0, select bank1
  2126  157B  00B9               	movwf	EEPROM_Read@address^(0+128)
  2127  157C                     l3271:
  2128                           
  2129                           ;EX_E2PROM.c: 27:     uint8 Data;;EX_E2PROM.c: 28:     I2C_Master_Start();
  2130  157C  160A  118A  228C  160A  118A  	fcall	_I2C_Master_Start
  2131                           
  2132                           ;EX_E2PROM.c: 29:     while (I2C_Master_Write(0xA0)) {
  2133  1581  2D87               	goto	l3275
  2134  1582                     l3273:
  2135                           
  2136                           ;EX_E2PROM.c: 30:         I2C_Master_RepeatedStart();
  2137  1582  160A  118A  2283  160A  118A  	fcall	_I2C_Master_RepeatedStart
  2138  1587                     l3275:
  2139                           
  2140                           ;EX_E2PROM.c: 29:     while (I2C_Master_Write(0xA0)) {
  2141  1587  30A0               	movlw	160
  2142  1588  160A  118A  244E  160A  118A  	fcall	_I2C_Master_Write
  2143  158D  3A00               	xorlw	0
  2144  158E  1D03               	skipz
  2145  158F  2D91               	goto	u4311
  2146  1590  2D92               	goto	u4310
  2147  1591                     u4311:
  2148  1591  2D82               	goto	l3273
  2149  1592                     u4310:
  2150  1592                     l3277:
  2151                           
  2152                           ;EX_E2PROM.c: 32:     I2C_Master_Write(address);
  2153  1592  1683               	bsf	3,5	;RP0=1, select bank1
  2154  1593  1303               	bcf	3,6	;RP1=0, select bank1
  2155  1594  0839               	movf	EEPROM_Read@address^(0+128),w
  2156  1595  160A  118A  244E  160A  118A  	fcall	_I2C_Master_Write
  2157  159A                     l3279:
  2158                           
  2159                           ;EX_E2PROM.c: 33:     I2C_Master_Start();
  2160  159A  160A  118A  228C  160A  118A  	fcall	_I2C_Master_Start
  2161  159F                     l3281:
  2162                           
  2163                           ;EX_E2PROM.c: 34:     I2C_Master_Write(0xA1);
  2164  159F  30A1               	movlw	161
  2165  15A0  160A  118A  244E  160A  118A  	fcall	_I2C_Master_Write
  2166  15A5                     l3283:
  2167                           
  2168                           ;EX_E2PROM.c: 35:     Data = I2C_Master_Read();
  2169  15A5  160A  118A  241E  160A  118A  	fcall	_I2C_Master_Read
  2170  15AA  00FF               	movwf	btemp+1
  2171  15AB  087F               	movf	btemp+1,w
  2172  15AC  1683               	bsf	3,5	;RP0=1, select bank1
  2173  15AD  1303               	bcf	3,6	;RP1=0, select bank1
  2174  15AE  00BA               	movwf	EEPROM_Read@Data^(0+128)
  2175  15AF                     l3285:
  2176                           
  2177                           ;EX_E2PROM.c: 36:     I2C_Nack();
  2178  15AF  160A  118A  22A8  160A  118A  	fcall	_I2C_Nack
  2179  15B4                     l3287:
  2180                           
  2181                           ;EX_E2PROM.c: 37:     I2C_Master_Stop();
  2182  15B4  160A  118A  2295  160A  118A  	fcall	_I2C_Master_Stop
  2183  15B9                     l3289:
  2184                           
  2185                           ;EX_E2PROM.c: 38:     return Data;
  2186  15B9  1683               	bsf	3,5	;RP0=1, select bank1
  2187  15BA  1303               	bcf	3,6	;RP1=0, select bank1
  2188  15BB  083A               	movf	EEPROM_Read@Data^(0+128),w
  2189  15BC                     l239:
  2190  15BC  0008               	return
  2191  15BD                     __end_of_EEPROM_Read:
  2192                           
  2193                           	psect	text9
  2194  12A8                     __ptext9:	
  2195 ;; *************** function _I2C_Nack *****************
  2196 ;; Defined at:
  2197 ;;		line 111 in file "I2C.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    6
  2218 ;; This function calls:
  2219 ;;		_I2C_Master_Wait
  2220 ;; This function is called by:
  2221 ;;		_EEPROM_Read
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _I2C_Nack
  2227  12A8                     _I2C_Nack:
  2228  12A8                     l2749:	
  2229                           ;incstack = 0
  2230 ;; hardware stack exceeded
  2231                           ; Regs used in _I2C_Nack: [wreg+status,2+status,0+pclath+cstack]
  2232                           
  2233                           
  2234                           ;I2C.c: 113:     ((*((uint8*)(0x91))) |= (1 << (5)));
  2235  12A8  1683               	bsf	3,5	;RP0=1, select bank1
  2236  12A9  1303               	bcf	3,6	;RP1=0, select bank1
  2237  12AA  1691               	bsf	17,5
  2238  12AB                     l2751:
  2239                           
  2240                           ;I2C.c: 114:     I2C_Master_Wait();
  2241  12AB  160A  118A  2536  160A  118A  	fcall	_I2C_Master_Wait
  2242  12B0                     l2753:
  2243                           
  2244                           ;I2C.c: 116:     ((*((uint8*)(0x91))) |= (1 << (4)));
  2245  12B0  1683               	bsf	3,5	;RP0=1, select bank1
  2246  12B1  1303               	bcf	3,6	;RP1=0, select bank1
  2247  12B2  1611               	bsf	17,4
  2248  12B3                     l277:
  2249  12B3  0008               	return
  2250  12B4                     __end_of_I2C_Nack:
  2251                           
  2252                           	psect	text10
  2253  141E                     __ptext10:	
  2254 ;; *************** function _I2C_Master_Read *****************
  2255 ;; Defined at:
  2256 ;;		line 81 in file "I2C.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  buffer          2    3[BANK1 ] int 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      unsigned char 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       0       0       0       0
  2271 ;;      Locals:         0       0       2       0       0
  2272 ;;      Temps:          0       0       2       0       0
  2273 ;;      Totals:         0       0       4       0       0
  2274 ;;Total ram usage:        4 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    6
  2277 ;; This function calls:
  2278 ;;		_I2C_Master_Wait
  2279 ;; This function is called by:
  2280 ;;		_EEPROM_Read
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _I2C_Master_Read
  2286  141E                     _I2C_Master_Read:
  2287  141E                     l2731:	
  2288                           ;incstack = 0
  2289 ;; hardware stack exceeded
  2290                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2291                           
  2292  141E                     l2733:
  2293                           
  2294                           ;I2C.c: 84:     I2C_Master_Wait();
  2295  141E  160A  118A  2536  160A  118A  	fcall	_I2C_Master_Wait
  2296  1423                     l2735:
  2297                           
  2298                           ;I2C.c: 86:     ((*((uint8*)(0x91))) |= (1 << (3)));
  2299  1423  1683               	bsf	3,5	;RP0=1, select bank1
  2300  1424  1303               	bcf	3,6	;RP1=0, select bank1
  2301  1425  1591               	bsf	17,3
  2302  1426                     l2737:	
  2303                           ;I2C.c: 88:     while (((*((uint8*)(0x0C)) >> 3) & (1)) == 0);
  2304                           
  2305  1426  1283               	bcf	3,5	;RP0=0, select bank0
  2306  1427  1303               	bcf	3,6	;RP1=0, select bank0
  2307  1428  080C               	movf	12,w
  2308  1429  1683               	bsf	3,5	;RP0=1, select bank1
  2309  142A  1303               	bcf	3,6	;RP1=0, select bank1
  2310  142B  00B5               	movwf	??_I2C_Master_Read^(0+128)
  2311  142C  3003               	movlw	3
  2312  142D                     u2925:
  2313  142D  1003               	clrc
  2314  142E  0CB5               	rrf	??_I2C_Master_Read^(0+128),f
  2315  142F  3EFF               	addlw	-1
  2316  1430  1D03               	skipz
  2317  1431  2C2D               	goto	u2925
  2318  1432  1C35               	btfss	??_I2C_Master_Read^(0+128),0
  2319  1433  2C35               	goto	u2931
  2320  1434  2C36               	goto	u2930
  2321  1435                     u2931:
  2322  1435  2C26               	goto	l2737
  2323  1436                     u2930:
  2324  1436                     l2739:
  2325                           
  2326                           ;I2C.c: 89:     (*((uint8*)(0x0C)) &= ~(1 << 3));
  2327  1436  30F7               	movlw	247
  2328  1437  00FF               	movwf	btemp+1
  2329  1438  087F               	movf	btemp+1,w
  2330  1439  1283               	bcf	3,5	;RP0=0, select bank0
  2331  143A  1303               	bcf	3,6	;RP1=0, select bank0
  2332  143B  058C               	andwf	12,f
  2333  143C                     l2741:
  2334                           
  2335                           ;I2C.c: 91:     I2C_Master_Wait();
  2336  143C  160A  118A  2536  160A  118A  	fcall	_I2C_Master_Wait
  2337  1441                     l2743:
  2338                           
  2339                           ;I2C.c: 93:     buffer = (*((uint8*)(0x13))&0xFF);
  2340  1441  1283               	bcf	3,5	;RP0=0, select bank0
  2341  1442  1303               	bcf	3,6	;RP1=0, select bank0
  2342  1443  0813               	movf	19,w
  2343  1444  1683               	bsf	3,5	;RP0=1, select bank1
  2344  1445  1303               	bcf	3,6	;RP1=0, select bank1
  2345  1446  00B5               	movwf	??_I2C_Master_Read^(0+128)
  2346  1447  01B6               	clrf	(??_I2C_Master_Read^(0+128)+1)
  2347  1448  0835               	movf	??_I2C_Master_Read^(0+128),w
  2348  1449  00B7               	movwf	I2C_Master_Read@buffer^(0+128)
  2349  144A  0836               	movf	(??_I2C_Master_Read+1)^(0+128),w
  2350  144B  00B8               	movwf	(I2C_Master_Read@buffer+1)^(0+128)
  2351  144C                     l2745:
  2352                           
  2353                           ;I2C.c: 95:     return (buffer);
  2354  144C  0837               	movf	I2C_Master_Read@buffer^(0+128),w
  2355  144D                     l271:
  2356  144D  0008               	return
  2357  144E                     __end_of_I2C_Master_Read:
  2358                           
  2359                           	psect	text11
  2360  12B4                     __ptext11:	
  2361 ;; *************** function _DO_SetState *****************
  2362 ;; Defined at:
  2363 ;;		line 24 in file "DO.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  device          1    wreg     unsigned char 
  2366 ;;  state           1    4[BANK1 ] unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  device          1    5[BANK1 ] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       0       1       0       0
  2379 ;;      Locals:         0       0       1       0       0
  2380 ;;      Temps:          0       0       0       0       0
  2381 ;;      Totals:         0       0       2       0       0
  2382 ;;Total ram usage:        2 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    6
  2385 ;; This function calls:
  2386 ;;		_DIO_voidWritePinValue
  2387 ;; This function is called by:
  2388 ;;		_Sch_Start
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function _DO_SetState
  2394  12B4                     _DO_SetState:
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _DO_SetState: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2398                           ;DO_SetState@device stored from wreg
  2399  12B4  1683               	bsf	3,5	;RP0=1, select bank1
  2400  12B5  1303               	bcf	3,6	;RP1=0, select bank1
  2401  12B6  00B9               	movwf	DO_SetState@device^(0+128)
  2402  12B7                     l3367:
  2403                           
  2404                           ;DO.c: 25:     DIO_voidWritePinValue(device, state);
  2405  12B7  0838               	movf	DO_SetState@state^(0+128),w
  2406  12B8  00FF               	movwf	btemp+1
  2407  12B9  087F               	movf	btemp+1,w
  2408  12BA  00B4               	movwf	DIO_voidWritePinValue@value^(0+128)
  2409  12BB  0839               	movf	DO_SetState@device^(0+128),w
  2410  12BC  120A  158A  222A  160A  118A  	fcall	_DIO_voidWritePinValue
  2411  12C1                     l332:
  2412  12C1  0008               	return
  2413  12C2                     __end_of_DO_SetState:
  2414                           
  2415                           	psect	text12
  2416  0A2A                     __ptext12:	
  2417 ;; *************** function _DIO_voidWritePinValue *****************
  2418 ;; Defined at:
  2419 ;;		line 146 in file "DIO.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  pin_num         1    wreg     unsigned char 
  2422 ;;  value           1    0[BANK1 ] unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  pin_num         1    3[BANK1 ] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, btemp+1
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2434 ;;      Params:         0       0       1       0       0
  2435 ;;      Locals:         0       0       1       0       0
  2436 ;;      Temps:          0       0       2       0       0
  2437 ;;      Totals:         0       0       4       0       0
  2438 ;;Total ram usage:        4 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    5
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_SSD_OFF
  2445 ;;		_DO_SetState
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _DIO_voidWritePinValue
  2451  0A2A                     _DIO_voidWritePinValue:
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _DIO_voidWritePinValue: [wreg+status,2+status,0+btemp+1]
  2455                           ;DIO_voidWritePinValue@pin_num stored from wreg
  2456  0A2A  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0A2B  1303               	bcf	3,6	;RP1=0, select bank1
  2458  0A2C  00B7               	movwf	DIO_voidWritePinValue@pin_num^(0+128)
  2459  0A2D                     l2601:
  2460                           
  2461                           ;DIO.c: 147:     if ((pin_num >= 0)&&(pin_num < 8)) {
  2462  0A2D  3008               	movlw	8
  2463  0A2E  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2464  0A2F  1803               	skipnc
  2465  0A30  2A32               	goto	u2541
  2466  0A31  2A33               	goto	u2540
  2467  0A32                     u2541:
  2468  0A32  2A56               	goto	l2605
  2469  0A33                     u2540:
  2470  0A33                     l2603:
  2471                           
  2472                           ;DIO.c: 148:         ((*((uint8*)(0x05))) = (((*((uint8*)(0x05))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  2473  0A33  0834               	movf	DIO_voidWritePinValue@value^(0+128),w
  2474  0A34  00B5               	movwf	??_DIO_voidWritePinValue^(0+128)
  2475  0A35  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2476  0A36  3907               	andlw	7
  2477  0A37  3E01               	addlw	1
  2478  0A38  2A3B               	goto	u2554
  2479  0A39                     u2555:
  2480  0A39  1003               	clrc
  2481  0A3A  0DB5               	rlf	??_DIO_voidWritePinValue^(0+128),f
  2482  0A3B                     u2554:
  2483  0A3B  3EFF               	addlw	-1
  2484  0A3C  1D03               	skipz
  2485  0A3D  2A39               	goto	u2555
  2486  0A3E  3001               	movlw	1
  2487  0A3F  00B6               	movwf	(??_DIO_voidWritePinValue+1)^(0+128)
  2488  0A40  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2489  0A41  3907               	andlw	7
  2490  0A42  3E01               	addlw	1
  2491  0A43  2A46               	goto	u2564
  2492  0A44                     u2565:
  2493  0A44  1003               	clrc
  2494  0A45  0DB6               	rlf	(??_DIO_voidWritePinValue+1)^(0+128),f
  2495  0A46                     u2564:
  2496  0A46  3EFF               	addlw	-1
  2497  0A47  1D03               	skipz
  2498  0A48  2A44               	goto	u2565
  2499  0A49  0836               	movf	(??_DIO_voidWritePinValue+1)^(0+128),w
  2500  0A4A  3AFF               	xorlw	255
  2501  0A4B  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0A4C  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0A4D  0505               	andwf	5,w
  2504  0A4E  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0A4F  1303               	bcf	3,6	;RP1=0, select bank1
  2506  0A50  0435               	iorwf	??_DIO_voidWritePinValue^(0+128),w
  2507  0A51  00FF               	movwf	btemp+1
  2508  0A52  087F               	movf	btemp+1,w
  2509  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0A55  0085               	movwf	5
  2512  0A56                     l2605:
  2513                           
  2514                           ;DIO.c: 150:     if ((pin_num >= 8)&&(pin_num < 16)) {
  2515  0A56  3008               	movlw	8
  2516  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0A58  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0A59  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2519  0A5A  1C03               	skipc
  2520  0A5B  2A5D               	goto	u2571
  2521  0A5C  2A5E               	goto	u2570
  2522  0A5D                     u2571:
  2523  0A5D  2A87               	goto	l2611
  2524  0A5E                     u2570:
  2525  0A5E                     l2607:
  2526  0A5E  3010               	movlw	16
  2527  0A5F  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2528  0A60  1803               	skipnc
  2529  0A61  2A63               	goto	u2581
  2530  0A62  2A64               	goto	u2580
  2531  0A63                     u2581:
  2532  0A63  2A87               	goto	l2611
  2533  0A64                     u2580:
  2534  0A64                     l2609:
  2535                           
  2536                           ;DIO.c: 151:         ((*((uint8*)(0x06))) = (((*((uint8*)(0x06))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  2537  0A64  0834               	movf	DIO_voidWritePinValue@value^(0+128),w
  2538  0A65  00B5               	movwf	??_DIO_voidWritePinValue^(0+128)
  2539  0A66  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2540  0A67  3907               	andlw	7
  2541  0A68  3E01               	addlw	1
  2542  0A69  2A6C               	goto	u2594
  2543  0A6A                     u2595:
  2544  0A6A  1003               	clrc
  2545  0A6B  0DB5               	rlf	??_DIO_voidWritePinValue^(0+128),f
  2546  0A6C                     u2594:
  2547  0A6C  3EFF               	addlw	-1
  2548  0A6D  1D03               	skipz
  2549  0A6E  2A6A               	goto	u2595
  2550  0A6F  3001               	movlw	1
  2551  0A70  00B6               	movwf	(??_DIO_voidWritePinValue+1)^(0+128)
  2552  0A71  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2553  0A72  3907               	andlw	7
  2554  0A73  3E01               	addlw	1
  2555  0A74  2A77               	goto	u2604
  2556  0A75                     u2605:
  2557  0A75  1003               	clrc
  2558  0A76  0DB6               	rlf	(??_DIO_voidWritePinValue+1)^(0+128),f
  2559  0A77                     u2604:
  2560  0A77  3EFF               	addlw	-1
  2561  0A78  1D03               	skipz
  2562  0A79  2A75               	goto	u2605
  2563  0A7A  0836               	movf	(??_DIO_voidWritePinValue+1)^(0+128),w
  2564  0A7B  3AFF               	xorlw	255
  2565  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0A7E  0506               	andwf	6,w
  2568  0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  2569  0A80  1303               	bcf	3,6	;RP1=0, select bank1
  2570  0A81  0435               	iorwf	??_DIO_voidWritePinValue^(0+128),w
  2571  0A82  00FF               	movwf	btemp+1
  2572  0A83  087F               	movf	btemp+1,w
  2573  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0A86  0086               	movwf	6
  2576  0A87                     l2611:
  2577                           
  2578                           ;DIO.c: 153:     if ((pin_num >= 16)&&(pin_num < 24)) {
  2579  0A87  3010               	movlw	16
  2580  0A88  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0A89  1303               	bcf	3,6	;RP1=0, select bank1
  2582  0A8A  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2583  0A8B  1C03               	skipc
  2584  0A8C  2A8E               	goto	u2611
  2585  0A8D  2A8F               	goto	u2610
  2586  0A8E                     u2611:
  2587  0A8E  2AB8               	goto	l2617
  2588  0A8F                     u2610:
  2589  0A8F                     l2613:
  2590  0A8F  3018               	movlw	24
  2591  0A90  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2592  0A91  1803               	skipnc
  2593  0A92  2A94               	goto	u2621
  2594  0A93  2A95               	goto	u2620
  2595  0A94                     u2621:
  2596  0A94  2AB8               	goto	l2617
  2597  0A95                     u2620:
  2598  0A95                     l2615:
  2599                           
  2600                           ;DIO.c: 154:         ((*((uint8*)(0x07))) = (((*((uint8*)(0x07))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  2601  0A95  0834               	movf	DIO_voidWritePinValue@value^(0+128),w
  2602  0A96  00B5               	movwf	??_DIO_voidWritePinValue^(0+128)
  2603  0A97  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2604  0A98  3907               	andlw	7
  2605  0A99  3E01               	addlw	1
  2606  0A9A  2A9D               	goto	u2634
  2607  0A9B                     u2635:
  2608  0A9B  1003               	clrc
  2609  0A9C  0DB5               	rlf	??_DIO_voidWritePinValue^(0+128),f
  2610  0A9D                     u2634:
  2611  0A9D  3EFF               	addlw	-1
  2612  0A9E  1D03               	skipz
  2613  0A9F  2A9B               	goto	u2635
  2614  0AA0  3001               	movlw	1
  2615  0AA1  00B6               	movwf	(??_DIO_voidWritePinValue+1)^(0+128)
  2616  0AA2  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2617  0AA3  3907               	andlw	7
  2618  0AA4  3E01               	addlw	1
  2619  0AA5  2AA8               	goto	u2644
  2620  0AA6                     u2645:
  2621  0AA6  1003               	clrc
  2622  0AA7  0DB6               	rlf	(??_DIO_voidWritePinValue+1)^(0+128),f
  2623  0AA8                     u2644:
  2624  0AA8  3EFF               	addlw	-1
  2625  0AA9  1D03               	skipz
  2626  0AAA  2AA6               	goto	u2645
  2627  0AAB  0836               	movf	(??_DIO_voidWritePinValue+1)^(0+128),w
  2628  0AAC  3AFF               	xorlw	255
  2629  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0AAF  0507               	andwf	7,w
  2632  0AB0  1683               	bsf	3,5	;RP0=1, select bank1
  2633  0AB1  1303               	bcf	3,6	;RP1=0, select bank1
  2634  0AB2  0435               	iorwf	??_DIO_voidWritePinValue^(0+128),w
  2635  0AB3  00FF               	movwf	btemp+1
  2636  0AB4  087F               	movf	btemp+1,w
  2637  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0AB7  0087               	movwf	7
  2640  0AB8                     l2617:
  2641                           
  2642                           ;DIO.c: 156:     if ((pin_num >= 24)&&(pin_num < 32)) {
  2643  0AB8  3018               	movlw	24
  2644  0AB9  1683               	bsf	3,5	;RP0=1, select bank1
  2645  0ABA  1303               	bcf	3,6	;RP1=0, select bank1
  2646  0ABB  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2647  0ABC  1C03               	skipc
  2648  0ABD  2ABF               	goto	u2651
  2649  0ABE  2AC0               	goto	u2650
  2650  0ABF                     u2651:
  2651  0ABF  2AE9               	goto	l2623
  2652  0AC0                     u2650:
  2653  0AC0                     l2619:
  2654  0AC0  3020               	movlw	32
  2655  0AC1  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2656  0AC2  1803               	skipnc
  2657  0AC3  2AC5               	goto	u2661
  2658  0AC4  2AC6               	goto	u2660
  2659  0AC5                     u2661:
  2660  0AC5  2AE9               	goto	l2623
  2661  0AC6                     u2660:
  2662  0AC6                     l2621:
  2663                           
  2664                           ;DIO.c: 157:         ((*((uint8*)(0x08))) = (((*((uint8*)(0x08))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  2665  0AC6  0834               	movf	DIO_voidWritePinValue@value^(0+128),w
  2666  0AC7  00B5               	movwf	??_DIO_voidWritePinValue^(0+128)
  2667  0AC8  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2668  0AC9  3907               	andlw	7
  2669  0ACA  3E01               	addlw	1
  2670  0ACB  2ACE               	goto	u2674
  2671  0ACC                     u2675:
  2672  0ACC  1003               	clrc
  2673  0ACD  0DB5               	rlf	??_DIO_voidWritePinValue^(0+128),f
  2674  0ACE                     u2674:
  2675  0ACE  3EFF               	addlw	-1
  2676  0ACF  1D03               	skipz
  2677  0AD0  2ACC               	goto	u2675
  2678  0AD1  3001               	movlw	1
  2679  0AD2  00B6               	movwf	(??_DIO_voidWritePinValue+1)^(0+128)
  2680  0AD3  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2681  0AD4  3907               	andlw	7
  2682  0AD5  3E01               	addlw	1
  2683  0AD6  2AD9               	goto	u2684
  2684  0AD7                     u2685:
  2685  0AD7  1003               	clrc
  2686  0AD8  0DB6               	rlf	(??_DIO_voidWritePinValue+1)^(0+128),f
  2687  0AD9                     u2684:
  2688  0AD9  3EFF               	addlw	-1
  2689  0ADA  1D03               	skipz
  2690  0ADB  2AD7               	goto	u2685
  2691  0ADC  0836               	movf	(??_DIO_voidWritePinValue+1)^(0+128),w
  2692  0ADD  3AFF               	xorlw	255
  2693  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0AE0  0508               	andwf	8,w
  2696  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0AE2  1303               	bcf	3,6	;RP1=0, select bank1
  2698  0AE3  0435               	iorwf	??_DIO_voidWritePinValue^(0+128),w
  2699  0AE4  00FF               	movwf	btemp+1
  2700  0AE5  087F               	movf	btemp+1,w
  2701  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  2702  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0AE8  0088               	movwf	8
  2704  0AE9                     l2623:
  2705                           
  2706                           ;DIO.c: 159:     if ((pin_num >= 32)&&(pin_num <= 34)) {
  2707  0AE9  3020               	movlw	32
  2708  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
  2709  0AEB  1303               	bcf	3,6	;RP1=0, select bank1
  2710  0AEC  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2711  0AED  1C03               	skipc
  2712  0AEE  2AF0               	goto	u2691
  2713  0AEF  2AF1               	goto	u2690
  2714  0AF0                     u2691:
  2715  0AF0  2B1A               	goto	l65
  2716  0AF1                     u2690:
  2717  0AF1                     l2625:
  2718  0AF1  3023               	movlw	35
  2719  0AF2  0237               	subwf	DIO_voidWritePinValue@pin_num^(0+128),w
  2720  0AF3  1803               	skipnc
  2721  0AF4  2AF6               	goto	u2701
  2722  0AF5  2AF7               	goto	u2700
  2723  0AF6                     u2701:
  2724  0AF6  2B1A               	goto	l65
  2725  0AF7                     u2700:
  2726  0AF7                     l2627:
  2727                           
  2728                           ;DIO.c: 160:         ((*((uint8*)(0x09))) = (((*((uint8*)(0x09))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  2729  0AF7  0834               	movf	DIO_voidWritePinValue@value^(0+128),w
  2730  0AF8  00B5               	movwf	??_DIO_voidWritePinValue^(0+128)
  2731  0AF9  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2732  0AFA  3907               	andlw	7
  2733  0AFB  3E01               	addlw	1
  2734  0AFC  2AFF               	goto	u2714
  2735  0AFD                     u2715:
  2736  0AFD  1003               	clrc
  2737  0AFE  0DB5               	rlf	??_DIO_voidWritePinValue^(0+128),f
  2738  0AFF                     u2714:
  2739  0AFF  3EFF               	addlw	-1
  2740  0B00  1D03               	skipz
  2741  0B01  2AFD               	goto	u2715
  2742  0B02  3001               	movlw	1
  2743  0B03  00B6               	movwf	(??_DIO_voidWritePinValue+1)^(0+128)
  2744  0B04  0837               	movf	DIO_voidWritePinValue@pin_num^(0+128),w
  2745  0B05  3907               	andlw	7
  2746  0B06  3E01               	addlw	1
  2747  0B07  2B0A               	goto	u2724
  2748  0B08                     u2725:
  2749  0B08  1003               	clrc
  2750  0B09  0DB6               	rlf	(??_DIO_voidWritePinValue+1)^(0+128),f
  2751  0B0A                     u2724:
  2752  0B0A  3EFF               	addlw	-1
  2753  0B0B  1D03               	skipz
  2754  0B0C  2B08               	goto	u2725
  2755  0B0D  0836               	movf	(??_DIO_voidWritePinValue+1)^(0+128),w
  2756  0B0E  3AFF               	xorlw	255
  2757  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0B11  0509               	andwf	9,w
  2760  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0B13  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0B14  0435               	iorwf	??_DIO_voidWritePinValue^(0+128),w
  2763  0B15  00FF               	movwf	btemp+1
  2764  0B16  087F               	movf	btemp+1,w
  2765  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0B19  0089               	movwf	9
  2768  0B1A                     l65:
  2769  0B1A  0008               	return
  2770  0B1B                     __end_of_DIO_voidWritePinValue:
  2771                           
  2772                           	psect	text13
  2773  12D0                     __ptext13:	
  2774 ;; *************** function _Sch_Init *****************
  2775 ;; Defined at:
  2776 ;;		line 37 in file "Scheduler.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    8
  2797 ;; This function calls:
  2798 ;;		_EEPROM_Write
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _Sch_Init
  2806  12D0                     _Sch_Init:
  2807  12D0                     l3559:	
  2808                           ;incstack = 0
  2809 ;; hardware stack exceeded
  2810                           ; Regs used in _Sch_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2811                           
  2812                           
  2813                           ;Scheduler.c: 39:     Settemp = 60;
  2814  12D0  303C               	movlw	60
  2815  12D1  00FF               	movwf	btemp+1
  2816  12D2  087F               	movf	btemp+1,w
  2817  12D3  1683               	bsf	3,5	;RP0=1, select bank1
  2818  12D4  1303               	bcf	3,6	;RP1=0, select bank1
  2819  12D5  00B0               	movwf	_Settemp^(0+128)
  2820  12D6                     l3561:
  2821                           
  2822                           ;Scheduler.c: 40:     state = 0;
  2823  12D6  01AE               	clrf	_state^(0+128)
  2824  12D7                     l3563:
  2825                           
  2826                           ;Scheduler.c: 41:     EEPROM_Write(0x00, Settemp);
  2827  12D7  0830               	movf	_Settemp^(0+128),w
  2828  12D8  00FF               	movwf	btemp+1
  2829  12D9  087F               	movf	btemp+1,w
  2830  12DA  00B7               	movwf	EEPROM_Write@data^(0+128)
  2831  12DB  3000               	movlw	0
  2832  12DC  160A  118A  23EF  160A  118A  	fcall	_EEPROM_Write
  2833  12E1                     l371:
  2834  12E1  0008               	return
  2835  12E2                     __end_of_Sch_Init:
  2836                           
  2837                           	psect	text14
  2838  13EF                     __ptext14:	
  2839 ;; *************** function _EEPROM_Write *****************
  2840 ;; Defined at:
  2841 ;;		line 15 in file "EX_E2PROM.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  address         1    wreg     unsigned char 
  2844 ;;  data            1    3[BANK1 ] unsigned char 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  address         1    4[BANK1 ] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       0       1       0       0
  2857 ;;      Locals:         0       0       1       0       0
  2858 ;;      Temps:          0       0       0       0       0
  2859 ;;      Totals:         0       0       2       0       0
  2860 ;;Total ram usage:        2 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    7
  2863 ;; This function calls:
  2864 ;;		_I2C_Master_RepeatedStart
  2865 ;;		_I2C_Master_Start
  2866 ;;		_I2C_Master_Stop
  2867 ;;		_I2C_Master_Write
  2868 ;; This function is called by:
  2869 ;;		_Sch_Init
  2870 ;;		_Sch_Start
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _EEPROM_Write
  2876  13EF                     _EEPROM_Write:
  2877                           
  2878                           ;incstack = 0
  2879 ;; hardware stack exceeded
  2880                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2881                           ;EEPROM_Write@address stored from wreg
  2882  13EF  1683               	bsf	3,5	;RP0=1, select bank1
  2883  13F0  1303               	bcf	3,6	;RP1=0, select bank1
  2884  13F1  00B8               	movwf	EEPROM_Write@address^(0+128)
  2885  13F2                     l3261:
  2886                           
  2887                           ;EX_E2PROM.c: 16:     I2C_Master_Start();
  2888  13F2  160A  118A  228C  160A  118A  	fcall	_I2C_Master_Start
  2889                           
  2890                           ;EX_E2PROM.c: 17:     while (I2C_Master_Write(0xA0)) {
  2891  13F7  2BFD               	goto	l3265
  2892  13F8                     l3263:
  2893                           
  2894                           ;EX_E2PROM.c: 18:         I2C_Master_RepeatedStart();
  2895  13F8  160A  118A  2283  160A  118A  	fcall	_I2C_Master_RepeatedStart
  2896  13FD                     l3265:
  2897                           
  2898                           ;EX_E2PROM.c: 17:     while (I2C_Master_Write(0xA0)) {
  2899  13FD  30A0               	movlw	160
  2900  13FE  160A  118A  244E  160A  118A  	fcall	_I2C_Master_Write
  2901  1403  3A00               	xorlw	0
  2902  1404  1D03               	skipz
  2903  1405  2C07               	goto	u4301
  2904  1406  2C08               	goto	u4300
  2905  1407                     u4301:
  2906  1407  2BF8               	goto	l3263
  2907  1408                     u4300:
  2908  1408                     l3267:
  2909                           
  2910                           ;EX_E2PROM.c: 20:     I2C_Master_Write(address);
  2911  1408  1683               	bsf	3,5	;RP0=1, select bank1
  2912  1409  1303               	bcf	3,6	;RP1=0, select bank1
  2913  140A  0838               	movf	EEPROM_Write@address^(0+128),w
  2914  140B  160A  118A  244E  160A  118A  	fcall	_I2C_Master_Write
  2915                           
  2916                           ;EX_E2PROM.c: 21:     I2C_Master_Write(data);
  2917  1410  1683               	bsf	3,5	;RP0=1, select bank1
  2918  1411  1303               	bcf	3,6	;RP1=0, select bank1
  2919  1412  0837               	movf	EEPROM_Write@data^(0+128),w
  2920  1413  160A  118A  244E  160A  118A  	fcall	_I2C_Master_Write
  2921  1418                     l3269:
  2922                           
  2923                           ;EX_E2PROM.c: 22:     I2C_Master_Stop();
  2924  1418  160A  118A  2295  160A  118A  	fcall	_I2C_Master_Stop
  2925  141D                     l233:
  2926  141D  0008               	return
  2927  141E                     __end_of_EEPROM_Write:
  2928                           
  2929                           	psect	text15
  2930  144E                     __ptext15:	
  2931 ;; *************** function _I2C_Master_Write *****************
  2932 ;; Defined at:
  2933 ;;		line 59 in file "I2C.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  data            1    wreg     unsigned char 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  data            1    2[BANK1 ] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      unsigned char 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         0       0       0       0       0
  2948 ;;      Locals:         0       0       1       0       0
  2949 ;;      Temps:          0       0       1       0       0
  2950 ;;      Totals:         0       0       2       0       0
  2951 ;;Total ram usage:        2 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    6
  2954 ;; This function calls:
  2955 ;;		_I2C_Master_Wait
  2956 ;; This function is called by:
  2957 ;;		_EEPROM_Write
  2958 ;;		_EEPROM_Read
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _I2C_Master_Write
  2964  144E                     _I2C_Master_Write:
  2965                           
  2966                           ;incstack = 0
  2967 ;; hardware stack exceeded
  2968                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2969                           ;I2C_Master_Write@data stored from wreg
  2970  144E  1683               	bsf	3,5	;RP0=1, select bank1
  2971  144F  1303               	bcf	3,6	;RP1=0, select bank1
  2972  1450  00B6               	movwf	I2C_Master_Write@data^(0+128)
  2973  1451                     l2715:
  2974                           
  2975                           ;I2C.c: 61:     I2C_Master_Wait();
  2976  1451  160A  118A  2536  160A  118A  	fcall	_I2C_Master_Wait
  2977  1456                     l2717:
  2978                           
  2979                           ;I2C.c: 63:     (*((uint8*)(0x13))=((data) | (*((uint8*)(0x13))&0x00)));
  2980  1456  1683               	bsf	3,5	;RP0=1, select bank1
  2981  1457  1303               	bcf	3,6	;RP1=0, select bank1
  2982  1458  0836               	movf	I2C_Master_Write@data^(0+128),w
  2983  1459  00FF               	movwf	btemp+1
  2984  145A  087F               	movf	btemp+1,w
  2985  145B  1283               	bcf	3,5	;RP0=0, select bank0
  2986  145C  1303               	bcf	3,6	;RP1=0, select bank0
  2987  145D  0093               	movwf	19
  2988  145E                     l2719:	
  2989                           ;I2C.c: 64:     while (((*((uint8*)(0x0C)) >> 3) & (1)) == 0);
  2990                           
  2991  145E  1283               	bcf	3,5	;RP0=0, select bank0
  2992  145F  080C               	movf	12,w
  2993  1460  1683               	bsf	3,5	;RP0=1, select bank1
  2994  1461  1303               	bcf	3,6	;RP1=0, select bank1
  2995  1462  00B5               	movwf	??_I2C_Master_Write^(0+128)
  2996  1463  3003               	movlw	3
  2997  1464                     u2895:
  2998  1464  1003               	clrc
  2999  1465  0CB5               	rrf	??_I2C_Master_Write^(0+128),f
  3000  1466  3EFF               	addlw	-1
  3001  1467  1D03               	skipz
  3002  1468  2C64               	goto	u2895
  3003  1469  1C35               	btfss	??_I2C_Master_Write^(0+128),0
  3004  146A  2C6C               	goto	u2901
  3005  146B  2C6D               	goto	u2900
  3006  146C                     u2901:
  3007  146C  2C5E               	goto	l2719
  3008  146D                     u2900:
  3009  146D                     l2721:
  3010                           
  3011                           ;I2C.c: 65:     (*((uint8*)(0x0C)) &= ~(1 << 3));
  3012  146D  30F7               	movlw	247
  3013  146E  00FF               	movwf	btemp+1
  3014  146F  087F               	movf	btemp+1,w
  3015  1470  1283               	bcf	3,5	;RP0=0, select bank0
  3016  1471  1303               	bcf	3,6	;RP1=0, select bank0
  3017  1472  058C               	andwf	12,f
  3018  1473                     l2723:
  3019                           
  3020                           ;I2C.c: 67:     return (((*((uint8*)(0x91)) >> 6) & (1)));
  3021  1473  1683               	bsf	3,5	;RP0=1, select bank1
  3022  1474  1303               	bcf	3,6	;RP1=0, select bank1
  3023  1475  0811               	movf	17,w
  3024  1476  00B5               	movwf	??_I2C_Master_Write^(0+128)
  3025  1477  3006               	movlw	6
  3026  1478                     u2915:
  3027  1478  1003               	clrc
  3028  1479  0CB5               	rrf	??_I2C_Master_Write^(0+128),f
  3029  147A  3EFF               	addlw	-1
  3030  147B  1D03               	skipz
  3031  147C  2C78               	goto	u2915
  3032  147D  0835               	movf	??_I2C_Master_Write^(0+128),w
  3033  147E  3901               	andlw	1
  3034  147F                     l262:
  3035  147F  0008               	return
  3036  1480                     __end_of_I2C_Master_Write:
  3037                           
  3038                           	psect	text16
  3039  1295                     __ptext16:	
  3040 ;; *************** function _I2C_Master_Stop *****************
  3041 ;; Defined at:
  3042 ;;		line 71 in file "I2C.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    6
  3063 ;; This function calls:
  3064 ;;		_I2C_Master_Wait
  3065 ;; This function is called by:
  3066 ;;		_EEPROM_Write
  3067 ;;		_EEPROM_Read
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function _I2C_Master_Stop
  3073  1295                     _I2C_Master_Stop:
  3074  1295                     l2727:	
  3075                           ;incstack = 0
  3076 ;; hardware stack exceeded
  3077                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3078                           
  3079                           
  3080                           ;I2C.c: 73:     I2C_Master_Wait();
  3081  1295  160A  118A  2536  160A  118A  	fcall	_I2C_Master_Wait
  3082  129A                     l2729:
  3083                           
  3084                           ;I2C.c: 75:     ((*((uint8*)(0x91))) |= (1 << (2)));
  3085  129A  1683               	bsf	3,5	;RP0=1, select bank1
  3086  129B  1303               	bcf	3,6	;RP1=0, select bank1
  3087  129C  1511               	bsf	17,2
  3088  129D                     l265:
  3089  129D  0008               	return
  3090  129E                     __end_of_I2C_Master_Stop:
  3091                           
  3092                           	psect	text17
  3093  128C                     __ptext17:	
  3094 ;; *************** function _I2C_Master_Start *****************
  3095 ;; Defined at:
  3096 ;;		line 37 in file "I2C.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         0       0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0
  3113 ;;      Totals:         0       0       0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    6
  3117 ;; This function calls:
  3118 ;;		_I2C_Master_Wait
  3119 ;; This function is called by:
  3120 ;;		_EEPROM_Write
  3121 ;;		_EEPROM_Read
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function _I2C_Master_Start
  3127  128C                     _I2C_Master_Start:
  3128  128C                     l2707:	
  3129                           ;incstack = 0
  3130 ;; hardware stack exceeded
  3131                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3132                           
  3133                           
  3134                           ;I2C.c: 39:     I2C_Master_Wait();
  3135  128C  160A  118A  2536  160A  118A  	fcall	_I2C_Master_Wait
  3136  1291                     l2709:
  3137                           
  3138                           ;I2C.c: 41:     ((*((uint8*)(0x91))) |= (1 << (0)));
  3139  1291  1683               	bsf	3,5	;RP0=1, select bank1
  3140  1292  1303               	bcf	3,6	;RP1=0, select bank1
  3141  1293  1411               	bsf	17,0
  3142  1294                     l247:
  3143  1294  0008               	return
  3144  1295                     __end_of_I2C_Master_Start:
  3145                           
  3146                           	psect	text18
  3147  1283                     __ptext18:	
  3148 ;; *************** function _I2C_Master_RepeatedStart *****************
  3149 ;; Defined at:
  3150 ;;		line 45 in file "I2C.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3164 ;;      Params:         0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    6
  3171 ;; This function calls:
  3172 ;;		_I2C_Master_Wait
  3173 ;; This function is called by:
  3174 ;;		_EEPROM_Write
  3175 ;;		_EEPROM_Read
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _I2C_Master_RepeatedStart
  3181  1283                     _I2C_Master_RepeatedStart:
  3182  1283                     l2711:	
  3183                           ;incstack = 0
  3184 ;; hardware stack exceeded
  3185                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3186                           
  3187                           
  3188                           ;I2C.c: 46:     I2C_Master_Wait();
  3189  1283  160A  118A  2536  160A  118A  	fcall	_I2C_Master_Wait
  3190  1288                     l2713:
  3191                           
  3192                           ;I2C.c: 48:     ((*((uint8*)(0x91))) |= (1 << (1)));
  3193  1288  1683               	bsf	3,5	;RP0=1, select bank1
  3194  1289  1303               	bcf	3,6	;RP1=0, select bank1
  3195  128A  1491               	bsf	17,1
  3196  128B                     l250:
  3197  128B  0008               	return
  3198  128C                     __end_of_I2C_Master_RepeatedStart:
  3199                           
  3200                           	psect	text19
  3201  1536                     __ptext19:	
  3202 ;; *************** function _I2C_Master_Wait *****************
  3203 ;; Defined at:
  3204 ;;		line 52 in file "I2C.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0
  3220 ;;      Temps:          0       0       1       0       0
  3221 ;;      Totals:         0       0       1       0       0
  3222 ;;Total ram usage:        1 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    5
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_I2C_Master_Start
  3229 ;;		_I2C_Master_RepeatedStart
  3230 ;;		_I2C_Master_Write
  3231 ;;		_I2C_Master_Stop
  3232 ;;		_I2C_Master_Read
  3233 ;;		_I2C_Nack
  3234 ;;		_I2C_Ack
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _I2C_Master_Wait
  3240  1536                     _I2C_Master_Wait:
  3241  1536                     l2551:	
  3242                           ;incstack = 0
  3243 ;; hardware stack exceeded
  3244                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
  3245                           
  3246  1536                     l2553:	
  3247                           ;I2C.c: 55:     while (((*((uint8*)(0x94)) >> 2) & (1)) || ((*((uint8*)(0x91)) >> 0) & (
      +                          1)) || ((*((uint8*)(0x91)) >> 1) & (1)) || ((*((uint8*)(0x91)) >> 2) & (1)) || ((*((uint
      +                          8*)(0x91)) >> 3) & (1)) || ((*((uint8*)(0x91)) >> 4) & (1)));
  3248                           
  3249  1536  1683               	bsf	3,5	;RP0=1, select bank1
  3250  1537  1303               	bcf	3,6	;RP1=0, select bank1
  3251  1538  0814               	movf	20,w
  3252  1539  00B4               	movwf	??_I2C_Master_Wait^(0+128)
  3253  153A  3002               	movlw	2
  3254  153B                     u2405:
  3255  153B  1003               	clrc
  3256  153C  0CB4               	rrf	??_I2C_Master_Wait^(0+128),f
  3257  153D  3EFF               	addlw	-1
  3258  153E  1D03               	skipz
  3259  153F  2D3B               	goto	u2405
  3260  1540  1834               	btfsc	??_I2C_Master_Wait^(0+128),0
  3261  1541  2D43               	goto	u2411
  3262  1542  2D44               	goto	u2410
  3263  1543                     u2411:
  3264  1543  2D36               	goto	l2553
  3265  1544                     u2410:
  3266  1544                     l2555:
  3267  1544  1811               	btfsc	17,0
  3268  1545  2D47               	goto	u2421
  3269  1546  2D48               	goto	u2420
  3270  1547                     u2421:
  3271  1547  2D36               	goto	l2553
  3272  1548                     u2420:
  3273  1548                     l2557:
  3274  1548  0811               	movf	17,w
  3275  1549  00B4               	movwf	??_I2C_Master_Wait^(0+128)
  3276  154A  3001               	movlw	1
  3277  154B                     u2435:
  3278  154B  1003               	clrc
  3279  154C  0CB4               	rrf	??_I2C_Master_Wait^(0+128),f
  3280  154D  3EFF               	addlw	-1
  3281  154E  1D03               	skipz
  3282  154F  2D4B               	goto	u2435
  3283  1550  1834               	btfsc	??_I2C_Master_Wait^(0+128),0
  3284  1551  2D53               	goto	u2441
  3285  1552  2D54               	goto	u2440
  3286  1553                     u2441:
  3287  1553  2D36               	goto	l2553
  3288  1554                     u2440:
  3289  1554                     l2559:
  3290  1554  0811               	movf	17,w
  3291  1555  00B4               	movwf	??_I2C_Master_Wait^(0+128)
  3292  1556  3002               	movlw	2
  3293  1557                     u2455:
  3294  1557  1003               	clrc
  3295  1558  0CB4               	rrf	??_I2C_Master_Wait^(0+128),f
  3296  1559  3EFF               	addlw	-1
  3297  155A  1D03               	skipz
  3298  155B  2D57               	goto	u2455
  3299  155C  1834               	btfsc	??_I2C_Master_Wait^(0+128),0
  3300  155D  2D5F               	goto	u2461
  3301  155E  2D60               	goto	u2460
  3302  155F                     u2461:
  3303  155F  2D36               	goto	l2553
  3304  1560                     u2460:
  3305  1560                     l2561:
  3306  1560  0811               	movf	17,w
  3307  1561  00B4               	movwf	??_I2C_Master_Wait^(0+128)
  3308  1562  3003               	movlw	3
  3309  1563                     u2475:
  3310  1563  1003               	clrc
  3311  1564  0CB4               	rrf	??_I2C_Master_Wait^(0+128),f
  3312  1565  3EFF               	addlw	-1
  3313  1566  1D03               	skipz
  3314  1567  2D63               	goto	u2475
  3315  1568  1834               	btfsc	??_I2C_Master_Wait^(0+128),0
  3316  1569  2D6B               	goto	u2481
  3317  156A  2D6C               	goto	u2480
  3318  156B                     u2481:
  3319  156B  2D36               	goto	l2553
  3320  156C                     u2480:
  3321  156C                     l2563:
  3322  156C  0811               	movf	17,w
  3323  156D  00B4               	movwf	??_I2C_Master_Wait^(0+128)
  3324  156E  3004               	movlw	4
  3325  156F                     u2495:
  3326  156F  1003               	clrc
  3327  1570  0CB4               	rrf	??_I2C_Master_Wait^(0+128),f
  3328  1571  3EFF               	addlw	-1
  3329  1572  1D03               	skipz
  3330  1573  2D6F               	goto	u2495
  3331  1574  1834               	btfsc	??_I2C_Master_Wait^(0+128),0
  3332  1575  2D77               	goto	u2501
  3333  1576  2D78               	goto	u2500
  3334  1577                     u2501:
  3335  1577  2D36               	goto	l2553
  3336  1578                     u2500:
  3337  1578                     l256:
  3338  1578  0008               	return
  3339  1579                     __end_of_I2C_Master_Wait:
  3340                           
  3341                           	psect	text20
  3342  1313                     __ptext20:	
  3343 ;; *************** function _SSD_Init *****************
  3344 ;; Defined at:
  3345 ;;		line 15 in file "SSD.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3359 ;;      Params:         0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    6
  3366 ;; This function calls:
  3367 ;;		_DIO_voidInitPin
  3368 ;;		_DIO_voidInitPort
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function _SSD_Init
  3376  1313                     _SSD_Init:
  3377  1313                     l3525:	
  3378                           ;incstack = 0
  3379                           ; Regs used in _SSD_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3380                           
  3381                           
  3382                           ;SSD.c: 16:     DIO_voidInitPort(3, 0);
  3383  1313  1683               	bsf	3,5	;RP0=1, select bank1
  3384  1314  1303               	bcf	3,6	;RP1=0, select bank1
  3385  1315  01B4               	clrf	DIO_voidInitPort@Dir^(0+128)
  3386  1316  3003               	movlw	3
  3387  1317  160A  118A  2716  160A  118A  	fcall	_DIO_voidInitPort
  3388                           
  3389                           ;SSD.c: 17:     DIO_voidInitPin(4, 0);
  3390  131C  1683               	bsf	3,5	;RP0=1, select bank1
  3391  131D  1303               	bcf	3,6	;RP1=0, select bank1
  3392  131E  01B4               	clrf	DIO_voidInitPin@Dir^(0+128)
  3393  131F  3004               	movlw	4
  3394  1320  120A  158A  2424  160A  118A  	fcall	_DIO_voidInitPin
  3395                           
  3396                           ;SSD.c: 18:     DIO_voidInitPin(5, 0);
  3397  1325  1683               	bsf	3,5	;RP0=1, select bank1
  3398  1326  1303               	bcf	3,6	;RP1=0, select bank1
  3399  1327  01B4               	clrf	DIO_voidInitPin@Dir^(0+128)
  3400  1328  3005               	movlw	5
  3401  1329  120A  158A  2424  160A  118A  	fcall	_DIO_voidInitPin
  3402  132E                     l288:
  3403  132E  0008               	return
  3404  132F                     __end_of_SSD_Init:
  3405                           
  3406                           	psect	text21
  3407  1716                     __ptext21:	
  3408 ;; *************** function _DIO_voidInitPort *****************
  3409 ;; Defined at:
  3410 ;;		line 15 in file "DIO.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  Port            1    wreg     unsigned char 
  3413 ;;  Dir             1    0[BANK1 ] unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  Port            1    3[BANK1 ] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3425 ;;      Params:         0       0       1       0       0
  3426 ;;      Locals:         0       0       1       0       0
  3427 ;;      Temps:          0       0       2       0       0
  3428 ;;      Totals:         0       0       4       0       0
  3429 ;;Total ram usage:        4 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    5
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_SSD_Init
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _DIO_voidInitPort
  3441  1716                     _DIO_voidInitPort:
  3442                           
  3443                           ;incstack = 0
  3444                           ; Regs used in _DIO_voidInitPort: [wreg-fsr0h+status,2+status,0+btemp+1]
  3445                           ;DIO_voidInitPort@Port stored from wreg
  3446  1716  1683               	bsf	3,5	;RP0=1, select bank1
  3447  1717  1303               	bcf	3,6	;RP1=0, select bank1
  3448  1718  00B7               	movwf	DIO_voidInitPort@Port^(0+128)
  3449  1719                     l3031:
  3450                           
  3451                           ;DIO.c: 16:     switch (Port) {
  3452  1719  2F6A               	goto	l3075
  3453  171A                     l3033:
  3454                           
  3455                           ;DIO.c: 18:             if (Dir == 1) {
  3456  171A  0334               	decf	DIO_voidInitPort@Dir^(0+128),w
  3457  171B  1D03               	btfss	3,2
  3458  171C  2F1E               	goto	u3741
  3459  171D  2F1F               	goto	u3740
  3460  171E                     u3741:
  3461  171E  2F23               	goto	l3037
  3462  171F                     u3740:
  3463  171F                     l3035:
  3464                           
  3465                           ;DIO.c: 19:                 (*((uint8*)(0x85))|=0xFF);
  3466  171F  30FF               	movlw	255
  3467  1720  00FF               	movwf	btemp+1
  3468  1721  087F               	movf	btemp+1,w
  3469  1722  0085               	movwf	5
  3470  1723                     l3037:
  3471                           
  3472                           ;DIO.c: 21:             if (Dir == 0) {
  3473  1723  0834               	movf	DIO_voidInitPort@Dir^(0+128),w
  3474  1724  1D03               	btfss	3,2
  3475  1725  2F27               	goto	u3751
  3476  1726  2F28               	goto	u3750
  3477  1727                     u3751:
  3478  1727  2F83               	goto	l20
  3479  1728                     u3750:
  3480  1728                     l3039:
  3481                           
  3482                           ;DIO.c: 22:                 (*((uint8*)(0x85))&=0x00);
  3483  1728  0185               	clrf	5
  3484  1729  2F83               	goto	l20
  3485  172A                     l3041:
  3486                           
  3487                           ;DIO.c: 26:             if (Dir == 1) {
  3488  172A  0334               	decf	DIO_voidInitPort@Dir^(0+128),w
  3489  172B  1D03               	btfss	3,2
  3490  172C  2F2E               	goto	u3761
  3491  172D  2F2F               	goto	u3760
  3492  172E                     u3761:
  3493  172E  2F33               	goto	l3045
  3494  172F                     u3760:
  3495  172F                     l3043:
  3496                           
  3497                           ;DIO.c: 27:                 (*((uint8*)(0x86))|=0xFF);
  3498  172F  30FF               	movlw	255
  3499  1730  00FF               	movwf	btemp+1
  3500  1731  087F               	movf	btemp+1,w
  3501  1732  0086               	movwf	6
  3502  1733                     l3045:
  3503                           
  3504                           ;DIO.c: 29:             if (Dir == 0) {
  3505  1733  0834               	movf	DIO_voidInitPort@Dir^(0+128),w
  3506  1734  1D03               	btfss	3,2
  3507  1735  2F37               	goto	u3771
  3508  1736  2F38               	goto	u3770
  3509  1737                     u3771:
  3510  1737  2F83               	goto	l20
  3511  1738                     u3770:
  3512  1738                     l3047:
  3513                           
  3514                           ;DIO.c: 30:                 (*((uint8*)(0x86))&=0x00);
  3515  1738  0186               	clrf	6
  3516  1739  2F83               	goto	l20
  3517  173A                     l3049:
  3518                           
  3519                           ;DIO.c: 34:             if (Dir == 1) {
  3520  173A  0334               	decf	DIO_voidInitPort@Dir^(0+128),w
  3521  173B  1D03               	btfss	3,2
  3522  173C  2F3E               	goto	u3781
  3523  173D  2F3F               	goto	u3780
  3524  173E                     u3781:
  3525  173E  2F43               	goto	l3053
  3526  173F                     u3780:
  3527  173F                     l3051:
  3528                           
  3529                           ;DIO.c: 35:                 (*((uint8*)(0x87))|=0xFF);
  3530  173F  30FF               	movlw	255
  3531  1740  00FF               	movwf	btemp+1
  3532  1741  087F               	movf	btemp+1,w
  3533  1742  0087               	movwf	7
  3534  1743                     l3053:
  3535                           
  3536                           ;DIO.c: 37:             if (Dir == 0) {
  3537  1743  0834               	movf	DIO_voidInitPort@Dir^(0+128),w
  3538  1744  1D03               	btfss	3,2
  3539  1745  2F47               	goto	u3791
  3540  1746  2F48               	goto	u3790
  3541  1747                     u3791:
  3542  1747  2F83               	goto	l20
  3543  1748                     u3790:
  3544  1748                     l3055:
  3545                           
  3546                           ;DIO.c: 38:                 (*((uint8*)(0x87))&=0x00);
  3547  1748  0187               	clrf	7
  3548  1749  2F83               	goto	l20
  3549  174A                     l3057:
  3550                           
  3551                           ;DIO.c: 42:             if (Dir == 1) {
  3552  174A  0334               	decf	DIO_voidInitPort@Dir^(0+128),w
  3553  174B  1D03               	btfss	3,2
  3554  174C  2F4E               	goto	u3801
  3555  174D  2F4F               	goto	u3800
  3556  174E                     u3801:
  3557  174E  2F53               	goto	l3061
  3558  174F                     u3800:
  3559  174F                     l3059:
  3560                           
  3561                           ;DIO.c: 43:                 (*((uint8*)(0x88))|=0xFF);
  3562  174F  30FF               	movlw	255
  3563  1750  00FF               	movwf	btemp+1
  3564  1751  087F               	movf	btemp+1,w
  3565  1752  0088               	movwf	8
  3566  1753                     l3061:
  3567                           
  3568                           ;DIO.c: 45:             if (Dir == 0) {
  3569  1753  0834               	movf	DIO_voidInitPort@Dir^(0+128),w
  3570  1754  1D03               	btfss	3,2
  3571  1755  2F57               	goto	u3811
  3572  1756  2F58               	goto	u3810
  3573  1757                     u3811:
  3574  1757  2F83               	goto	l20
  3575  1758                     u3810:
  3576  1758                     l3063:
  3577                           
  3578                           ;DIO.c: 46:                 (*((uint8*)(0x88))&=0x00);
  3579  1758  0188               	clrf	8
  3580  1759  2F83               	goto	l20
  3581  175A                     l3065:
  3582                           
  3583                           ;DIO.c: 50:             if (Dir == 1) {
  3584  175A  0334               	decf	DIO_voidInitPort@Dir^(0+128),w
  3585  175B  1D03               	btfss	3,2
  3586  175C  2F5E               	goto	u3821
  3587  175D  2F5F               	goto	u3820
  3588  175E                     u3821:
  3589  175E  2F63               	goto	l3069
  3590  175F                     u3820:
  3591  175F                     l3067:
  3592                           
  3593                           ;DIO.c: 51:                 (*((uint8*)(0x89))|=0xFF);
  3594  175F  30FF               	movlw	255
  3595  1760  00FF               	movwf	btemp+1
  3596  1761  087F               	movf	btemp+1,w
  3597  1762  0089               	movwf	9
  3598  1763                     l3069:
  3599                           
  3600                           ;DIO.c: 53:             if (Dir == 0) {
  3601  1763  0834               	movf	DIO_voidInitPort@Dir^(0+128),w
  3602  1764  1D03               	btfss	3,2
  3603  1765  2F67               	goto	u3831
  3604  1766  2F68               	goto	u3830
  3605  1767                     u3831:
  3606  1767  2F83               	goto	l20
  3607  1768                     u3830:
  3608  1768                     l3071:
  3609                           
  3610                           ;DIO.c: 54:                 (*((uint8*)(0x89))&=0x00);
  3611  1768  0189               	clrf	9
  3612  1769  2F83               	goto	l20
  3613  176A                     l3075:
  3614  176A  0837               	movf	DIO_voidInitPort@Port^(0+128),w
  3615  176B  00B5               	movwf	??_DIO_voidInitPort^(0+128)
  3616  176C  01B6               	clrf	(??_DIO_voidInitPort^(0+128)+1)
  3617                           
  3618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3619                           ; Switch size 1, requested type "simple"
  3620                           ; Number of cases is 1, Range of values is 0 to 0
  3621                           ; switch strategies available:
  3622                           ; Name         Instructions Cycles
  3623                           ; simple_byte            4     3 (average)
  3624                           ; direct_byte           11     8 (fixed)
  3625                           ; jumptable            260     6 (fixed)
  3626                           ;	Chosen strategy is simple_byte
  3627  176D  0836               	movf	(??_DIO_voidInitPort+1)^(0+128),w
  3628  176E  3A00               	xorlw	0	; case 0
  3629  176F  1903               	skipnz
  3630  1770  2F72               	goto	l4095
  3631  1771  2F83               	goto	l20
  3632  1772                     l4095:
  3633                           
  3634                           ; Switch size 1, requested type "simple"
  3635                           ; Number of cases is 5, Range of values is 0 to 4
  3636                           ; switch strategies available:
  3637                           ; Name         Instructions Cycles
  3638                           ; simple_byte           16     9 (average)
  3639                           ; direct_byte           23     8 (fixed)
  3640                           ; jumptable            260     6 (fixed)
  3641                           ;	Chosen strategy is simple_byte
  3642  1772  0835               	movf	??_DIO_voidInitPort^(0+128),w
  3643  1773  3A00               	xorlw	0	; case 0
  3644  1774  1903               	skipnz
  3645  1775  2F1A               	goto	l3033
  3646  1776  3A01               	xorlw	1	; case 1
  3647  1777  1903               	skipnz
  3648  1778  2F2A               	goto	l3041
  3649  1779  3A03               	xorlw	3	; case 2
  3650  177A  1903               	skipnz
  3651  177B  2F3A               	goto	l3049
  3652  177C  3A01               	xorlw	1	; case 3
  3653  177D  1903               	skipnz
  3654  177E  2F4A               	goto	l3057
  3655  177F  3A07               	xorlw	7	; case 4
  3656  1780  1903               	skipnz
  3657  1781  2F5A               	goto	l3065
  3658  1782  2F83               	goto	l20
  3659  1783                     l20:
  3660  1783  0008               	return
  3661  1784                     __end_of_DIO_voidInitPort:
  3662                           
  3663                           	psect	text22
  3664  134B                     __ptext22:	
  3665 ;; *************** function _I2C_Master_Init *****************
  3666 ;; Defined at:
  3667 ;;		line 17 in file "I2C.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, btemp+1
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    5
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _I2C_Master_Init
  3697  134B                     _I2C_Master_Init:
  3698  134B                     l3551:	
  3699                           ;incstack = 0
  3700                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1]
  3701                           
  3702                           
  3703                           ;I2C.c: 20:     ((*((uint8*)(0x87))) |= (1 << (3)));
  3704  134B  1683               	bsf	3,5	;RP0=1, select bank1
  3705  134C  1303               	bcf	3,6	;RP1=0, select bank1
  3706  134D  1587               	bsf	7,3
  3707                           
  3708                           ;I2C.c: 21:     ((*((uint8*)(0x87))) |= (1 << (4)));
  3709  134E  1607               	bsf	7,4
  3710                           
  3711                           ;I2C.c: 23:     ((*((uint8*)(0x94))) |= (1 << (7)));
  3712  134F  1794               	bsf	20,7
  3713                           
  3714                           ;I2C.c: 25:     ((*((uint8*)(0x14))) |= (1 << (5)));
  3715  1350  1283               	bcf	3,5	;RP0=0, select bank0
  3716  1351  1303               	bcf	3,6	;RP1=0, select bank0
  3717  1352  1694               	bsf	20,5
  3718                           
  3719                           ;I2C.c: 26:     ((*((uint8*)(0x14))) |= (1 << (3)));
  3720  1353  1594               	bsf	20,3
  3721  1354                     l3553:
  3722                           
  3723                           ;I2C.c: 27:     (*((uint8*)(0x14)) &= ~(1 << 2));
  3724  1354  30FB               	movlw	251
  3725  1355  00FF               	movwf	btemp+1
  3726  1356  087F               	movf	btemp+1,w
  3727  1357  0594               	andwf	20,f
  3728                           
  3729                           ;I2C.c: 28:     (*((uint8*)(0x14)) &= ~(1 << 1));
  3730  1358  30FD               	movlw	253
  3731  1359  00FF               	movwf	btemp+1
  3732  135A  087F               	movf	btemp+1,w
  3733  135B  0594               	andwf	20,f
  3734                           
  3735                           ;I2C.c: 29:     (*((uint8*)(0x14)) &= ~(1 << 0));
  3736  135C  30FE               	movlw	254
  3737  135D  00FF               	movwf	btemp+1
  3738  135E  087F               	movf	btemp+1,w
  3739  135F  0594               	andwf	20,f
  3740  1360                     l3555:
  3741                           
  3742                           ;I2C.c: 30:     (*((uint8*)(0x91))&=0x00);
  3743  1360  1683               	bsf	3,5	;RP0=1, select bank1
  3744  1361  1303               	bcf	3,6	;RP1=0, select bank1
  3745  1362  0191               	clrf	17
  3746  1363                     l3557:
  3747                           
  3748                           ;I2C.c: 32:     (*((uint8*)(0x93))=((((8 * 1000000) / (4 * 100000)) - 1) | (*((uint8*)(0
      +                          x93))&0x00)));
  3749  1363  3013               	movlw	19
  3750  1364  00FF               	movwf	btemp+1
  3751  1365  087F               	movf	btemp+1,w
  3752  1366  0093               	movwf	19
  3753  1367                     l244:
  3754  1367  0008               	return
  3755  1368                     __end_of_I2C_Master_Init:
  3756                           
  3757                           	psect	text23
  3758  13A6                     __ptext23:	
  3759 ;; *************** function _DO_Init *****************
  3760 ;; Defined at:
  3761 ;;		line 16 in file "DO.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3775 ;;      Params:         0       0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0
  3778 ;;      Totals:         0       0       0       0       0
  3779 ;;Total ram usage:        0 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    6
  3782 ;; This function calls:
  3783 ;;		_DIO_voidInitPin
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           
  3790                           ;psect for function _DO_Init
  3791  13A6                     _DO_Init:
  3792  13A6                     l3547:	
  3793                           ;incstack = 0
  3794                           ; Regs used in _DO_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3795                           
  3796                           
  3797                           ;DO.c: 17:     DIO_voidInitPin(11, 0);
  3798  13A6  1683               	bsf	3,5	;RP0=1, select bank1
  3799  13A7  1303               	bcf	3,6	;RP1=0, select bank1
  3800  13A8  01B4               	clrf	DIO_voidInitPin@Dir^(0+128)
  3801  13A9  300B               	movlw	11
  3802  13AA  120A  158A  2424  160A  118A  	fcall	_DIO_voidInitPin
  3803                           
  3804                           ;DO.c: 18:     DIO_voidInitPin(21, 0);
  3805  13AF  1683               	bsf	3,5	;RP0=1, select bank1
  3806  13B0  1303               	bcf	3,6	;RP1=0, select bank1
  3807  13B1  01B4               	clrf	DIO_voidInitPin@Dir^(0+128)
  3808  13B2  3015               	movlw	21
  3809  13B3  120A  158A  2424  160A  118A  	fcall	_DIO_voidInitPin
  3810                           
  3811                           ;DO.c: 19:     DIO_voidInitPin(18, 0);
  3812  13B8  1683               	bsf	3,5	;RP0=1, select bank1
  3813  13B9  1303               	bcf	3,6	;RP1=0, select bank1
  3814  13BA  01B4               	clrf	DIO_voidInitPin@Dir^(0+128)
  3815  13BB  3012               	movlw	18
  3816  13BC  120A  158A  2424  160A  118A  	fcall	_DIO_voidInitPin
  3817  13C1                     l3549:
  3818                           
  3819                           ;DO.c: 20:     (*((uint8*)(0x86))&=0x0F);
  3820  13C1  300F               	movlw	15
  3821  13C2  00FF               	movwf	btemp+1
  3822  13C3  087F               	movf	btemp+1,w
  3823  13C4  1683               	bsf	3,5	;RP0=1, select bank1
  3824  13C5  1303               	bcf	3,6	;RP1=0, select bank1
  3825  13C6  0586               	andwf	6,f
  3826  13C7                     l329:
  3827  13C7  0008               	return
  3828  13C8                     __end_of_DO_Init:
  3829                           
  3830                           	psect	text24
  3831  0C24                     __ptext24:	
  3832 ;; *************** function _DIO_voidInitPin *****************
  3833 ;; Defined at:
  3834 ;;		line 105 in file "DIO.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  pin_num         1    wreg     unsigned char 
  3837 ;;  Dir             1    0[BANK1 ] unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  pin_num         1    3[BANK1 ] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3849 ;;      Params:         0       0       1       0       0
  3850 ;;      Locals:         0       0       1       0       0
  3851 ;;      Temps:          0       0       2       0       0
  3852 ;;      Totals:         0       0       4       0       0
  3853 ;;Total ram usage:        4 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    5
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_sw_int
  3860 ;;		_SSD_Init
  3861 ;;		_DO_Init
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           
  3866                           ;psect for function _DIO_voidInitPin
  3867  0C24                     _DIO_voidInitPin:
  3868                           
  3869                           ;incstack = 0
  3870                           ; Regs used in _DIO_voidInitPin: [wreg-fsr0h+status,2+status,0+btemp+1]
  3871                           ;DIO_voidInitPin@pin_num stored from wreg
  3872  0C24  1683               	bsf	3,5	;RP0=1, select bank1
  3873  0C25  1303               	bcf	3,6	;RP1=0, select bank1
  3874  0C26  00B7               	movwf	DIO_voidInitPin@pin_num^(0+128)
  3875  0C27                     l3083:
  3876                           
  3877                           ;DIO.c: 106:     switch (Dir) {
  3878  0C27  2D31               	goto	l3143
  3879  0C28                     l3085:
  3880                           
  3881                           ;DIO.c: 108:             if ((pin_num >= 0)&&(pin_num < 8)) {
  3882  0C28  3008               	movlw	8
  3883  0C29  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  3884  0C2A  1803               	skipnc
  3885  0C2B  2C2D               	goto	u3841
  3886  0C2C  2C2E               	goto	u3840
  3887  0C2D                     u3841:
  3888  0C2D  2C3D               	goto	l3089
  3889  0C2E                     u3840:
  3890  0C2E                     l3087:
  3891                           
  3892                           ;DIO.c: 109:                 ((*((uint8*)(0x85))) |= (1 << (pin_num % 8)));
  3893  0C2E  3001               	movlw	1
  3894  0C2F  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  3895  0C30  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  3896  0C31  3907               	andlw	7
  3897  0C32  3E01               	addlw	1
  3898  0C33  2C36               	goto	u3854
  3899  0C34                     u3855:
  3900  0C34  1003               	clrc
  3901  0C35  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  3902  0C36                     u3854:
  3903  0C36  3EFF               	addlw	-1
  3904  0C37  1D03               	skipz
  3905  0C38  2C34               	goto	u3855
  3906  0C39  0835               	movf	??_DIO_voidInitPin^(0+128),w
  3907  0C3A  00FF               	movwf	btemp+1
  3908  0C3B  087F               	movf	btemp+1,w
  3909  0C3C  0485               	iorwf	5,f
  3910  0C3D                     l3089:
  3911                           
  3912                           ;DIO.c: 111:             if ((pin_num >= 8)&&(pin_num < 16)) {
  3913  0C3D  3008               	movlw	8
  3914  0C3E  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  3915  0C3F  1C03               	skipc
  3916  0C40  2C42               	goto	u3861
  3917  0C41  2C43               	goto	u3860
  3918  0C42                     u3861:
  3919  0C42  2C58               	goto	l3095
  3920  0C43                     u3860:
  3921  0C43                     l3091:
  3922  0C43  3010               	movlw	16
  3923  0C44  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  3924  0C45  1803               	skipnc
  3925  0C46  2C48               	goto	u3871
  3926  0C47  2C49               	goto	u3870
  3927  0C48                     u3871:
  3928  0C48  2C58               	goto	l3095
  3929  0C49                     u3870:
  3930  0C49                     l3093:
  3931                           
  3932                           ;DIO.c: 112:                 ((*((uint8*)(0x86))) |= (1 << (pin_num % 8)));
  3933  0C49  3001               	movlw	1
  3934  0C4A  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  3935  0C4B  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  3936  0C4C  3907               	andlw	7
  3937  0C4D  3E01               	addlw	1
  3938  0C4E  2C51               	goto	u3884
  3939  0C4F                     u3885:
  3940  0C4F  1003               	clrc
  3941  0C50  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  3942  0C51                     u3884:
  3943  0C51  3EFF               	addlw	-1
  3944  0C52  1D03               	skipz
  3945  0C53  2C4F               	goto	u3885
  3946  0C54  0835               	movf	??_DIO_voidInitPin^(0+128),w
  3947  0C55  00FF               	movwf	btemp+1
  3948  0C56  087F               	movf	btemp+1,w
  3949  0C57  0486               	iorwf	6,f
  3950  0C58                     l3095:
  3951                           
  3952                           ;DIO.c: 114:             if ((pin_num >= 16)&&(pin_num < 24)) {
  3953  0C58  3010               	movlw	16
  3954  0C59  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  3955  0C5A  1C03               	skipc
  3956  0C5B  2C5D               	goto	u3891
  3957  0C5C  2C5E               	goto	u3890
  3958  0C5D                     u3891:
  3959  0C5D  2C73               	goto	l3101
  3960  0C5E                     u3890:
  3961  0C5E                     l3097:
  3962  0C5E  3018               	movlw	24
  3963  0C5F  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  3964  0C60  1803               	skipnc
  3965  0C61  2C63               	goto	u3901
  3966  0C62  2C64               	goto	u3900
  3967  0C63                     u3901:
  3968  0C63  2C73               	goto	l3101
  3969  0C64                     u3900:
  3970  0C64                     l3099:
  3971                           
  3972                           ;DIO.c: 115:                 ((*((uint8*)(0x87))) |= (1 << (pin_num % 8)));
  3973  0C64  3001               	movlw	1
  3974  0C65  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  3975  0C66  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  3976  0C67  3907               	andlw	7
  3977  0C68  3E01               	addlw	1
  3978  0C69  2C6C               	goto	u3914
  3979  0C6A                     u3915:
  3980  0C6A  1003               	clrc
  3981  0C6B  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  3982  0C6C                     u3914:
  3983  0C6C  3EFF               	addlw	-1
  3984  0C6D  1D03               	skipz
  3985  0C6E  2C6A               	goto	u3915
  3986  0C6F  0835               	movf	??_DIO_voidInitPin^(0+128),w
  3987  0C70  00FF               	movwf	btemp+1
  3988  0C71  087F               	movf	btemp+1,w
  3989  0C72  0487               	iorwf	7,f
  3990  0C73                     l3101:
  3991                           
  3992                           ;DIO.c: 117:             if ((pin_num >= 24)&&(pin_num < 32)) {
  3993  0C73  3018               	movlw	24
  3994  0C74  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  3995  0C75  1C03               	skipc
  3996  0C76  2C78               	goto	u3921
  3997  0C77  2C79               	goto	u3920
  3998  0C78                     u3921:
  3999  0C78  2C8E               	goto	l3107
  4000  0C79                     u3920:
  4001  0C79                     l3103:
  4002  0C79  3020               	movlw	32
  4003  0C7A  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4004  0C7B  1803               	skipnc
  4005  0C7C  2C7E               	goto	u3931
  4006  0C7D  2C7F               	goto	u3930
  4007  0C7E                     u3931:
  4008  0C7E  2C8E               	goto	l3107
  4009  0C7F                     u3930:
  4010  0C7F                     l3105:
  4011                           
  4012                           ;DIO.c: 118:                 ((*((uint8*)(0x88))) |= (1 << (pin_num % 8)));
  4013  0C7F  3001               	movlw	1
  4014  0C80  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  4015  0C81  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  4016  0C82  3907               	andlw	7
  4017  0C83  3E01               	addlw	1
  4018  0C84  2C87               	goto	u3944
  4019  0C85                     u3945:
  4020  0C85  1003               	clrc
  4021  0C86  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  4022  0C87                     u3944:
  4023  0C87  3EFF               	addlw	-1
  4024  0C88  1D03               	skipz
  4025  0C89  2C85               	goto	u3945
  4026  0C8A  0835               	movf	??_DIO_voidInitPin^(0+128),w
  4027  0C8B  00FF               	movwf	btemp+1
  4028  0C8C  087F               	movf	btemp+1,w
  4029  0C8D  0488               	iorwf	8,f
  4030  0C8E                     l3107:
  4031                           
  4032                           ;DIO.c: 120:             if ((pin_num >= 32)&&(pin_num <= 34)) {
  4033  0C8E  3020               	movlw	32
  4034  0C8F  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4035  0C90  1C03               	skipc
  4036  0C91  2C93               	goto	u3951
  4037  0C92  2C94               	goto	u3950
  4038  0C93                     u3951:
  4039  0C93  2D41               	goto	l57
  4040  0C94                     u3950:
  4041  0C94                     l3109:
  4042  0C94  3023               	movlw	35
  4043  0C95  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4044  0C96  1803               	skipnc
  4045  0C97  2C99               	goto	u3961
  4046  0C98  2C9A               	goto	u3960
  4047  0C99                     u3961:
  4048  0C99  2D41               	goto	l57
  4049  0C9A                     u3960:
  4050  0C9A                     l3111:
  4051                           
  4052                           ;DIO.c: 121:                 ((*((uint8*)(0x89))) |= (1 << (pin_num % 8)));
  4053  0C9A  3001               	movlw	1
  4054  0C9B  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  4055  0C9C  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  4056  0C9D  3907               	andlw	7
  4057  0C9E  3E01               	addlw	1
  4058  0C9F  2CA2               	goto	u3974
  4059  0CA0                     u3975:
  4060  0CA0  1003               	clrc
  4061  0CA1  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  4062  0CA2                     u3974:
  4063  0CA2  3EFF               	addlw	-1
  4064  0CA3  1D03               	skipz
  4065  0CA4  2CA0               	goto	u3975
  4066  0CA5  0835               	movf	??_DIO_voidInitPin^(0+128),w
  4067  0CA6  00FF               	movwf	btemp+1
  4068  0CA7  087F               	movf	btemp+1,w
  4069  0CA8  0489               	iorwf	9,f
  4070  0CA9  2D41               	goto	l57
  4071  0CAA                     l3113:
  4072                           
  4073                           ;DIO.c: 125:             if ((pin_num >= 0)&&(pin_num < 8)) {
  4074  0CAA  3008               	movlw	8
  4075  0CAB  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4076  0CAC  1803               	skipnc
  4077  0CAD  2CAF               	goto	u3981
  4078  0CAE  2CB0               	goto	u3980
  4079  0CAF                     u3981:
  4080  0CAF  2CC0               	goto	l3117
  4081  0CB0                     u3980:
  4082  0CB0                     l3115:
  4083                           
  4084                           ;DIO.c: 126:                 (*((uint8*)(0x85)) &= ~(1 << pin_num % 8));
  4085  0CB0  3001               	movlw	1
  4086  0CB1  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  4087  0CB2  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  4088  0CB3  3907               	andlw	7
  4089  0CB4  3E01               	addlw	1
  4090  0CB5  2CB8               	goto	u3994
  4091  0CB6                     u3995:
  4092  0CB6  1003               	clrc
  4093  0CB7  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  4094  0CB8                     u3994:
  4095  0CB8  3EFF               	addlw	-1
  4096  0CB9  1D03               	skipz
  4097  0CBA  2CB6               	goto	u3995
  4098  0CBB  0835               	movf	??_DIO_voidInitPin^(0+128),w
  4099  0CBC  3AFF               	xorlw	255
  4100  0CBD  00FF               	movwf	btemp+1
  4101  0CBE  087F               	movf	btemp+1,w
  4102  0CBF  0585               	andwf	5,f
  4103  0CC0                     l3117:
  4104                           
  4105                           ;DIO.c: 128:             if ((pin_num >= 8)&&(pin_num < 16)) {
  4106  0CC0  3008               	movlw	8
  4107  0CC1  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4108  0CC2  1C03               	skipc
  4109  0CC3  2CC5               	goto	u4001
  4110  0CC4  2CC6               	goto	u4000
  4111  0CC5                     u4001:
  4112  0CC5  2CDC               	goto	l3123
  4113  0CC6                     u4000:
  4114  0CC6                     l3119:
  4115  0CC6  3010               	movlw	16
  4116  0CC7  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4117  0CC8  1803               	skipnc
  4118  0CC9  2CCB               	goto	u4011
  4119  0CCA  2CCC               	goto	u4010
  4120  0CCB                     u4011:
  4121  0CCB  2CDC               	goto	l3123
  4122  0CCC                     u4010:
  4123  0CCC                     l3121:
  4124                           
  4125                           ;DIO.c: 129:                 (*((uint8*)(0x86)) &= ~(1 << pin_num % 8));
  4126  0CCC  3001               	movlw	1
  4127  0CCD  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  4128  0CCE  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  4129  0CCF  3907               	andlw	7
  4130  0CD0  3E01               	addlw	1
  4131  0CD1  2CD4               	goto	u4024
  4132  0CD2                     u4025:
  4133  0CD2  1003               	clrc
  4134  0CD3  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  4135  0CD4                     u4024:
  4136  0CD4  3EFF               	addlw	-1
  4137  0CD5  1D03               	skipz
  4138  0CD6  2CD2               	goto	u4025
  4139  0CD7  0835               	movf	??_DIO_voidInitPin^(0+128),w
  4140  0CD8  3AFF               	xorlw	255
  4141  0CD9  00FF               	movwf	btemp+1
  4142  0CDA  087F               	movf	btemp+1,w
  4143  0CDB  0586               	andwf	6,f
  4144  0CDC                     l3123:
  4145                           
  4146                           ;DIO.c: 131:             if ((pin_num >= 16)&&(pin_num < 24)) {
  4147  0CDC  3010               	movlw	16
  4148  0CDD  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4149  0CDE  1C03               	skipc
  4150  0CDF  2CE1               	goto	u4031
  4151  0CE0  2CE2               	goto	u4030
  4152  0CE1                     u4031:
  4153  0CE1  2CF8               	goto	l3129
  4154  0CE2                     u4030:
  4155  0CE2                     l3125:
  4156  0CE2  3018               	movlw	24
  4157  0CE3  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4158  0CE4  1803               	skipnc
  4159  0CE5  2CE7               	goto	u4041
  4160  0CE6  2CE8               	goto	u4040
  4161  0CE7                     u4041:
  4162  0CE7  2CF8               	goto	l3129
  4163  0CE8                     u4040:
  4164  0CE8                     l3127:
  4165                           
  4166                           ;DIO.c: 132:                 (*((uint8*)(0x87)) &= ~(1 << pin_num % 8));
  4167  0CE8  3001               	movlw	1
  4168  0CE9  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  4169  0CEA  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  4170  0CEB  3907               	andlw	7
  4171  0CEC  3E01               	addlw	1
  4172  0CED  2CF0               	goto	u4054
  4173  0CEE                     u4055:
  4174  0CEE  1003               	clrc
  4175  0CEF  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  4176  0CF0                     u4054:
  4177  0CF0  3EFF               	addlw	-1
  4178  0CF1  1D03               	skipz
  4179  0CF2  2CEE               	goto	u4055
  4180  0CF3  0835               	movf	??_DIO_voidInitPin^(0+128),w
  4181  0CF4  3AFF               	xorlw	255
  4182  0CF5  00FF               	movwf	btemp+1
  4183  0CF6  087F               	movf	btemp+1,w
  4184  0CF7  0587               	andwf	7,f
  4185  0CF8                     l3129:
  4186                           
  4187                           ;DIO.c: 134:             if ((pin_num >= 24)&&(pin_num < 32)) {
  4188  0CF8  3018               	movlw	24
  4189  0CF9  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4190  0CFA  1C03               	skipc
  4191  0CFB  2CFD               	goto	u4061
  4192  0CFC  2CFE               	goto	u4060
  4193  0CFD                     u4061:
  4194  0CFD  2D14               	goto	l3135
  4195  0CFE                     u4060:
  4196  0CFE                     l3131:
  4197  0CFE  3020               	movlw	32
  4198  0CFF  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4199  0D00  1803               	skipnc
  4200  0D01  2D03               	goto	u4071
  4201  0D02  2D04               	goto	u4070
  4202  0D03                     u4071:
  4203  0D03  2D14               	goto	l3135
  4204  0D04                     u4070:
  4205  0D04                     l3133:
  4206                           
  4207                           ;DIO.c: 135:                 (*((uint8*)(0x88)) &= ~(1 << pin_num % 8));
  4208  0D04  3001               	movlw	1
  4209  0D05  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  4210  0D06  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  4211  0D07  3907               	andlw	7
  4212  0D08  3E01               	addlw	1
  4213  0D09  2D0C               	goto	u4084
  4214  0D0A                     u4085:
  4215  0D0A  1003               	clrc
  4216  0D0B  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  4217  0D0C                     u4084:
  4218  0D0C  3EFF               	addlw	-1
  4219  0D0D  1D03               	skipz
  4220  0D0E  2D0A               	goto	u4085
  4221  0D0F  0835               	movf	??_DIO_voidInitPin^(0+128),w
  4222  0D10  3AFF               	xorlw	255
  4223  0D11  00FF               	movwf	btemp+1
  4224  0D12  087F               	movf	btemp+1,w
  4225  0D13  0588               	andwf	8,f
  4226  0D14                     l3135:
  4227                           
  4228                           ;DIO.c: 137:             if ((pin_num >= 32)&&(pin_num <= 34)) {
  4229  0D14  3020               	movlw	32
  4230  0D15  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4231  0D16  1C03               	skipc
  4232  0D17  2D19               	goto	u4091
  4233  0D18  2D1A               	goto	u4090
  4234  0D19                     u4091:
  4235  0D19  2D41               	goto	l57
  4236  0D1A                     u4090:
  4237  0D1A                     l3137:
  4238  0D1A  3023               	movlw	35
  4239  0D1B  0237               	subwf	DIO_voidInitPin@pin_num^(0+128),w
  4240  0D1C  1803               	skipnc
  4241  0D1D  2D1F               	goto	u4101
  4242  0D1E  2D20               	goto	u4100
  4243  0D1F                     u4101:
  4244  0D1F  2D41               	goto	l57
  4245  0D20                     u4100:
  4246  0D20                     l3139:
  4247                           
  4248                           ;DIO.c: 138:                 (*((uint8*)(0x89)) &= ~(1 << pin_num % 8));
  4249  0D20  3001               	movlw	1
  4250  0D21  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  4251  0D22  0837               	movf	DIO_voidInitPin@pin_num^(0+128),w
  4252  0D23  3907               	andlw	7
  4253  0D24  3E01               	addlw	1
  4254  0D25  2D28               	goto	u4114
  4255  0D26                     u4115:
  4256  0D26  1003               	clrc
  4257  0D27  0DB5               	rlf	??_DIO_voidInitPin^(0+128),f
  4258  0D28                     u4114:
  4259  0D28  3EFF               	addlw	-1
  4260  0D29  1D03               	skipz
  4261  0D2A  2D26               	goto	u4115
  4262  0D2B  0835               	movf	??_DIO_voidInitPin^(0+128),w
  4263  0D2C  3AFF               	xorlw	255
  4264  0D2D  00FF               	movwf	btemp+1
  4265  0D2E  087F               	movf	btemp+1,w
  4266  0D2F  0589               	andwf	9,f
  4267  0D30  2D41               	goto	l57
  4268  0D31                     l3143:
  4269  0D31  0834               	movf	DIO_voidInitPin@Dir^(0+128),w
  4270  0D32  00B5               	movwf	??_DIO_voidInitPin^(0+128)
  4271  0D33  01B6               	clrf	(??_DIO_voidInitPin^(0+128)+1)
  4272                           
  4273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4274                           ; Switch size 1, requested type "simple"
  4275                           ; Number of cases is 1, Range of values is 0 to 0
  4276                           ; switch strategies available:
  4277                           ; Name         Instructions Cycles
  4278                           ; simple_byte            4     3 (average)
  4279                           ; direct_byte           11     8 (fixed)
  4280                           ; jumptable            260     6 (fixed)
  4281                           ;	Chosen strategy is simple_byte
  4282  0D34  0836               	movf	(??_DIO_voidInitPin+1)^(0+128),w
  4283  0D35  3A00               	xorlw	0	; case 0
  4284  0D36  1903               	skipnz
  4285  0D37  2D39               	goto	l4097
  4286  0D38  2D41               	goto	l57
  4287  0D39                     l4097:
  4288                           
  4289                           ; Switch size 1, requested type "simple"
  4290                           ; Number of cases is 2, Range of values is 0 to 1
  4291                           ; switch strategies available:
  4292                           ; Name         Instructions Cycles
  4293                           ; simple_byte            7     4 (average)
  4294                           ; direct_byte           14     8 (fixed)
  4295                           ; jumptable            260     6 (fixed)
  4296                           ;	Chosen strategy is simple_byte
  4297  0D39  0835               	movf	??_DIO_voidInitPin^(0+128),w
  4298  0D3A  3A00               	xorlw	0	; case 0
  4299  0D3B  1903               	skipnz
  4300  0D3C  2CAA               	goto	l3113
  4301  0D3D  3A01               	xorlw	1	; case 1
  4302  0D3E  1903               	skipnz
  4303  0D3F  2C28               	goto	l3085
  4304  0D40  2D41               	goto	l57
  4305  0D41                     l57:
  4306  0D41  0008               	return
  4307  0D42                     __end_of_DIO_voidInitPin:
  4308                           
  4309                           	psect	text25
  4310  1368                     __ptext25:	
  4311 ;; *************** function _ADC_Init *****************
  4312 ;; Defined at:
  4313 ;;		line 16 in file "ADC.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, btemp+1
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4327 ;;      Params:         0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0
  4330 ;;      Totals:         0       0       0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    5
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function _ADC_Init
  4343  1368                     _ADC_Init:
  4344  1368                     l3527:	
  4345                           ;incstack = 0
  4346                           ; Regs used in _ADC_Init: [wreg+status,2+status,0+btemp+1]
  4347                           
  4348                           
  4349                           ;ADC.c: 19:     (*((uint8*)(0x1E))&=0x00);
  4350  1368  1283               	bcf	3,5	;RP0=0, select bank0
  4351  1369  1303               	bcf	3,6	;RP1=0, select bank0
  4352  136A  019E               	clrf	30
  4353                           
  4354                           ;ADC.c: 20:     (*((uint8*)(0x9E))&=0x00);
  4355  136B  1683               	bsf	3,5	;RP0=1, select bank1
  4356  136C  1303               	bcf	3,6	;RP1=0, select bank1
  4357  136D  019E               	clrf	30
  4358  136E                     l3529:
  4359                           
  4360                           ;ADC.c: 22:     ((*((uint8*)(0x1F))) |= (1 << (6)));
  4361  136E  1283               	bcf	3,5	;RP0=0, select bank0
  4362  136F  1303               	bcf	3,6	;RP1=0, select bank0
  4363  1370  171F               	bsf	31,6
  4364  1371                     l3531:
  4365                           
  4366                           ;ADC.c: 23:     ((*((uint8*)(0x1F))) |= (1 << (7)));
  4367  1371  179F               	bsf	31,7
  4368  1372                     l3533:
  4369                           
  4370                           ;ADC.c: 24:     ((*((uint8*)(0x9F))) |= (1 << (6)));
  4371  1372  1683               	bsf	3,5	;RP0=1, select bank1
  4372  1373  1303               	bcf	3,6	;RP1=0, select bank1
  4373  1374  171F               	bsf	31,6
  4374  1375                     l3535:
  4375                           
  4376                           ;ADC.c: 26:     (*((uint8*)(0x9F)) &= ~(1 << 3));
  4377  1375  30F7               	movlw	247
  4378  1376  00FF               	movwf	btemp+1
  4379  1377  087F               	movf	btemp+1,w
  4380  1378  059F               	andwf	31,f
  4381  1379                     l3537:
  4382                           
  4383                           ;ADC.c: 27:     (*((uint8*)(0x9F)) &= ~(1 << 2));
  4384  1379  30FB               	movlw	251
  4385  137A  00FF               	movwf	btemp+1
  4386  137B  087F               	movf	btemp+1,w
  4387  137C  059F               	andwf	31,f
  4388  137D                     l3539:
  4389                           
  4390                           ;ADC.c: 28:     (*((uint8*)(0x9F)) &= ~(1 << 1));
  4391  137D  30FD               	movlw	253
  4392  137E  00FF               	movwf	btemp+1
  4393  137F  087F               	movf	btemp+1,w
  4394  1380  059F               	andwf	31,f
  4395  1381                     l3541:
  4396                           
  4397                           ;ADC.c: 29:     (*((uint8*)(0x9F)) &= ~(1 << 0));
  4398  1381  30FE               	movlw	254
  4399  1382  00FF               	movwf	btemp+1
  4400  1383  087F               	movf	btemp+1,w
  4401  1384  059F               	andwf	31,f
  4402  1385                     l3543:
  4403                           
  4404                           ;ADC.c: 31:     ((*((uint8*)(0x9F))) |= (1 << (7)));
  4405  1385  179F               	bsf	31,7
  4406  1386                     l132:
  4407  1386  0008               	return
  4408  1387                     __end_of_ADC_Init:
  4409                           
  4410                           	psect	text26
  4411  12F8                     __ptext26:	
  4412 ;; *************** function _TMR_Update *****************
  4413 ;; Defined at:
  4414 ;;		line 109 in file "TMR0.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0
  4430 ;;      Temps:          0       4       0       0       0
  4431 ;;      Totals:         0       4       0       0       0
  4432 ;;Total ram usage:        4 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    4
  4435 ;; This function calls:
  4436 ;;		Absolute function
  4437 ;;		_Sch_UpdateTick_Handler
  4438 ;; This function is called by:
  4439 ;;		Interrupt level 1
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           
  4444                           ;psect for function _TMR_Update
  4445  12F8                     _TMR_Update:
  4446  12F8                     i1l3735:
  4447                           
  4448                           ;TMR0.c: 112:     (*((uint8*)(0x0B)) &= ~(1 << 2));
  4449  12F8  30FB               	movlw	251
  4450  12F9  00FF               	movwf	btemp+1
  4451  12FA  087F               	movf	btemp+1,w
  4452  12FB  058B               	andwf	11,f
  4453  12FC                     i1l3737:
  4454                           
  4455                           ;TMR0.c: 114:     (*((uint8*)(0x01))=(((uint8) ((256 + 2)-(((8.0 * 5.0) / (256.0))*250.0
      +                          ))) | (*((uint8*)(0x01))&0x00)));
  4456  12FC  30DA               	movlw	218
  4457  12FD  00FF               	movwf	btemp+1
  4458  12FE  087F               	movf	btemp+1,w
  4459  12FF  0081               	movwf	1
  4460  1300                     i1l3739:
  4461                           
  4462                           ;TMR0.c: 116:     CallBack_ptr();
  4463  1300  0866               	movf	_CallBack_ptr,w
  4464  1301  120A  118A  202B  160A  118A  	fcall	i1fptable
  4465  1306                     i1l129:
  4466  1306  1283               	bcf	3,5	;RP0=0, select bank0
  4467  1307  1303               	bcf	3,6	;RP1=0, select bank0
  4468  1308  085B               	movf	??_TMR_Update+3,w
  4469  1309  00FF               	movwf	btemp+1
  4470  130A  085A               	movf	??_TMR_Update+2,w
  4471  130B  008A               	movwf	10
  4472  130C  0859               	movf	??_TMR_Update+1,w
  4473  130D  0084               	movwf	4
  4474  130E  0E58               	swapf	??_TMR_Update^0,w
  4475  130F  0083               	movwf	3
  4476  1310  0EFE               	swapf	btemp,f
  4477  1311  0E7E               	swapf	btemp,w
  4478  1312  0009               	retfie
  4479  1313                     __end_of_TMR_Update:
  4480                           
  4481                           	psect	intentry
  4482  0004                     __pintentry:	
  4483                           ;incstack = 0
  4484 ;; hardware stack exceeded
  4485                           ; Regs used in _TMR_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4486                           
  4487  0004                     interrupt_function:
  4488  007E                     saved_w	set	btemp
  4489  0004  00FE               	movwf	btemp
  4490  0005  0E03               	swapf	3,w
  4491  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0008  00D8               	movwf	??_TMR_Update
  4494  0009  0804               	movf	4,w
  4495  000A  00D9               	movwf	??_TMR_Update+1
  4496  000B  080A               	movf	10,w
  4497  000C  00DA               	movwf	??_TMR_Update+2
  4498  000D  087F               	movf	btemp+1,w
  4499  000E  00DB               	movwf	??_TMR_Update+3
  4500  000F  160A  118A  2AF8   	ljmp	_TMR_Update
  4501                           
  4502                           	psect	text27
  4503  0395                     __ptext27:	
  4504 ;; *************** function _Sch_UpdateTick_Handler *****************
  4505 ;; Defined at:
  4506 ;;		line 141 in file "Scheduler.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  i               2   54[BANK0 ] int 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4520 ;;      Params:         0       0       0       0       0
  4521 ;;      Locals:         0       2       0       0       0
  4522 ;;      Temps:          0      16       0       0       0
  4523 ;;      Totals:         0      18       0       0       0
  4524 ;;Total ram usage:       18 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    3
  4527 ;; This function calls:
  4528 ;;		_SSD_Display
  4529 ;;		_UPDATE_TEMP
  4530 ;;		___awdiv
  4531 ;;		___awmod
  4532 ;;		___llmod
  4533 ;;		_sw_voidtask
  4534 ;;		i1_SSD_OFF
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;;		_TMR_Update
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           
  4542                           ;psect for function _Sch_UpdateTick_Handler
  4543  0395                     _Sch_UpdateTick_Handler:
  4544  0395                     i1l3659:	
  4545                           ;incstack = 0
  4546 ;; hardware stack exceeded
  4547                           ; Regs used in _Sch_UpdateTick_Handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4548                           
  4549                           
  4550                           ;Scheduler.c: 143:     u32TickCount++;
  4551  0395  3001               	movlw	1
  4552  0396  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0397  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0398  07DC               	addwf	_u32TickCount,f
  4555  0399  3000               	movlw	0
  4556  039A  1803               	skipnc
  4557  039B  3001               	movlw	1
  4558  039C  07DD               	addwf	_u32TickCount+1,f
  4559  039D  3000               	movlw	0
  4560  039E  1803               	skipnc
  4561  039F  3001               	movlw	1
  4562  03A0  07DE               	addwf	_u32TickCount+2,f
  4563  03A1  3000               	movlw	0
  4564  03A2  1803               	skipnc
  4565  03A3  3001               	movlw	1
  4566  03A4  07DF               	addwf	_u32TickCount+3,f
  4567  03A5                     i1l3661:
  4568                           
  4569                           ;Scheduler.c: 145:     if ((u32TickCount % 200 == 0)&&(heaterstate == 1)) {
  4570  03A5  3000               	movlw	0
  4571  03A6  00F3               	movwf	___llmod@divisor+3
  4572  03A7  3000               	movlw	0
  4573  03A8  00F2               	movwf	___llmod@divisor+2
  4574  03A9  3000               	movlw	0
  4575  03AA  00F1               	movwf	___llmod@divisor+1
  4576  03AB  30C8               	movlw	200
  4577  03AC  00F0               	movwf	___llmod@divisor
  4578  03AD  085F               	movf	_u32TickCount+3,w
  4579  03AE  00F7               	movwf	___llmod@dividend+3
  4580  03AF  085E               	movf	_u32TickCount+2,w
  4581  03B0  00F6               	movwf	___llmod@dividend+2
  4582  03B1  085D               	movf	_u32TickCount+1,w
  4583  03B2  00F5               	movwf	___llmod@dividend+1
  4584  03B3  085C               	movf	_u32TickCount,w
  4585  03B4  00F4               	movwf	___llmod@dividend
  4586  03B5  160A  118A  2602  120A  118A  	fcall	___llmod
  4587  03BA  0873               	movf	?___llmod+3,w
  4588  03BB  0472               	iorwf	?___llmod+2,w
  4589  03BC  0471               	iorwf	?___llmod+1,w
  4590  03BD  0470               	iorwf	?___llmod,w
  4591  03BE  1D03               	skipz
  4592  03BF  2BC1               	goto	u469_21
  4593  03C0  2BC2               	goto	u469_20
  4594  03C1                     u469_21:
  4595  03C1  2BCD               	goto	i1l3667
  4596  03C2                     u469_20:
  4597  03C2                     i1l3663:
  4598  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  4599  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  4600  03C4  0360               	decf	_heaterstate,w
  4601  03C5  1D03               	btfss	3,2
  4602  03C6  2BC8               	goto	u470_21
  4603  03C7  2BC9               	goto	u470_20
  4604  03C8                     u470_21:
  4605  03C8  2BCD               	goto	i1l3667
  4606  03C9                     u470_20:
  4607  03C9                     i1l3665:
  4608                           
  4609                           ;Scheduler.c: 146:         ((*((uint8*)(0x06))) ^= (1 <<(3)));
  4610  03C9  3008               	movlw	8
  4611  03CA  00FF               	movwf	btemp+1
  4612  03CB  087F               	movf	btemp+1,w
  4613  03CC  0686               	xorwf	6,f
  4614  03CD                     i1l3667:
  4615                           
  4616                           ;Scheduler.c: 149:     if (u32TickCount % 10 == 0) {
  4617  03CD  3000               	movlw	0
  4618  03CE  00F3               	movwf	___llmod@divisor+3
  4619  03CF  3000               	movlw	0
  4620  03D0  00F2               	movwf	___llmod@divisor+2
  4621  03D1  3000               	movlw	0
  4622  03D2  00F1               	movwf	___llmod@divisor+1
  4623  03D3  300A               	movlw	10
  4624  03D4  00F0               	movwf	___llmod@divisor
  4625  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  4626  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  4627  03D7  085F               	movf	_u32TickCount+3,w
  4628  03D8  00F7               	movwf	___llmod@dividend+3
  4629  03D9  085E               	movf	_u32TickCount+2,w
  4630  03DA  00F6               	movwf	___llmod@dividend+2
  4631  03DB  085D               	movf	_u32TickCount+1,w
  4632  03DC  00F5               	movwf	___llmod@dividend+1
  4633  03DD  085C               	movf	_u32TickCount,w
  4634  03DE  00F4               	movwf	___llmod@dividend
  4635  03DF  160A  118A  2602  120A  118A  	fcall	___llmod
  4636  03E4  0873               	movf	?___llmod+3,w
  4637  03E5  0472               	iorwf	?___llmod+2,w
  4638  03E6  0471               	iorwf	?___llmod+1,w
  4639  03E7  0470               	iorwf	?___llmod,w
  4640  03E8  1D03               	skipz
  4641  03E9  2BEB               	goto	u471_21
  4642  03EA  2BEC               	goto	u471_20
  4643  03EB                     u471_21:
  4644  03EB  2BF1               	goto	i1l3671
  4645  03EC                     u471_20:
  4646  03EC                     i1l3669:
  4647                           
  4648                           ;Scheduler.c: 150:         sw_voidtask();
  4649  03EC  120A  118A  25FD  120A  118A  	fcall	_sw_voidtask
  4650  03F1                     i1l3671:
  4651                           
  4652                           ;Scheduler.c: 153:     if (u32TickCount % 20 == 0) {
  4653  03F1  3000               	movlw	0
  4654  03F2  00F3               	movwf	___llmod@divisor+3
  4655  03F3  3000               	movlw	0
  4656  03F4  00F2               	movwf	___llmod@divisor+2
  4657  03F5  3000               	movlw	0
  4658  03F6  00F1               	movwf	___llmod@divisor+1
  4659  03F7  3014               	movlw	20
  4660  03F8  00F0               	movwf	___llmod@divisor
  4661  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  4662  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  4663  03FB  085F               	movf	_u32TickCount+3,w
  4664  03FC  00F7               	movwf	___llmod@dividend+3
  4665  03FD  085E               	movf	_u32TickCount+2,w
  4666  03FE  00F6               	movwf	___llmod@dividend+2
  4667  03FF  085D               	movf	_u32TickCount+1,w
  4668  0400  00F5               	movwf	___llmod@dividend+1
  4669  0401  085C               	movf	_u32TickCount,w
  4670  0402  00F4               	movwf	___llmod@dividend
  4671  0403  160A  118A  2602  120A  118A  	fcall	___llmod
  4672  0408  0873               	movf	?___llmod+3,w
  4673  0409  0472               	iorwf	?___llmod+2,w
  4674  040A  0471               	iorwf	?___llmod+1,w
  4675  040B  0470               	iorwf	?___llmod,w
  4676  040C  1D03               	skipz
  4677  040D  2C0F               	goto	u472_21
  4678  040E  2C10               	goto	u472_20
  4679  040F                     u472_21:
  4680  040F  2DE8               	goto	i1l3715
  4681  0410                     u472_20:
  4682  0410                     i1l3673:
  4683                           
  4684                           ;Scheduler.c: 154:         UPDATE_TEMP();
  4685  0410  160A  118A  25BD  120A  118A  	fcall	_UPDATE_TEMP
  4686  0415                     i1l3675:
  4687                           
  4688                           ;Scheduler.c: 155:         for (int i = 0; i < 10; i++) {
  4689  0415  1283               	bcf	3,5	;RP0=0, select bank0
  4690  0416  1303               	bcf	3,6	;RP1=0, select bank0
  4691  0417  01D6               	clrf	Sch_UpdateTick_Handler@i
  4692  0418  01D7               	clrf	Sch_UpdateTick_Handler@i+1
  4693  0419                     i1l3681:
  4694                           
  4695                           ;Scheduler.c: 156:             temp_array[i] = temp_array[i + 1];
  4696  0419  1283               	bcf	3,5	;RP0=0, select bank0
  4697  041A  1303               	bcf	3,6	;RP1=0, select bank0
  4698  041B  0856               	movf	Sch_UpdateTick_Handler@i,w
  4699  041C  3EA1               	addlw	(low ((_temp_array| 0+1)))& (0+255)
  4700  041D  0084               	movwf	4
  4701  041E  1383               	bcf	3,7	;select IRP bank1
  4702  041F  0800               	movf	0,w
  4703  0420  00FF               	movwf	btemp+1
  4704  0421  0856               	movf	Sch_UpdateTick_Handler@i,w
  4705  0422  3EA0               	addlw	(low (_temp_array| 0))& (0+255)
  4706  0423  0084               	movwf	4
  4707  0424  087F               	movf	btemp+1,w
  4708  0425  0080               	movwf	0
  4709  0426                     i1l3683:
  4710                           
  4711                           ;Scheduler.c: 157:         }
  4712  0426  3001               	movlw	1
  4713  0427  07D6               	addwf	Sch_UpdateTick_Handler@i,f
  4714  0428  1803               	skipnc
  4715  0429  0AD7               	incf	Sch_UpdateTick_Handler@i+1,f
  4716  042A  3000               	movlw	0
  4717  042B  07D7               	addwf	Sch_UpdateTick_Handler@i+1,f
  4718  042C                     i1l3685:
  4719  042C  0857               	movf	Sch_UpdateTick_Handler@i+1,w
  4720  042D  3A80               	xorlw	128
  4721  042E  00FF               	movwf	btemp+1
  4722  042F  3080               	movlw	128
  4723  0430  027F               	subwf	btemp+1,w
  4724  0431  1D03               	skipz
  4725  0432  2C35               	goto	u473_25
  4726  0433  300A               	movlw	10
  4727  0434  0256               	subwf	Sch_UpdateTick_Handler@i,w
  4728  0435                     u473_25:
  4729  0435  1C03               	skipc
  4730  0436  2C38               	goto	u473_21
  4731  0437  2C39               	goto	u473_20
  4732  0438                     u473_21:
  4733  0438  2C19               	goto	i1l3681
  4734  0439                     u473_20:
  4735  0439                     i1l3687:
  4736                           
  4737                           ;Scheduler.c: 158:         temp_array[9] = (uint8) temp;
  4738  0439  1283               	bcf	3,5	;RP0=0, select bank0
  4739  043A  1303               	bcf	3,6	;RP1=0, select bank0
  4740  043B  0861               	movf	_temp,w
  4741  043C  00FF               	movwf	btemp+1
  4742  043D  087F               	movf	btemp+1,w
  4743  043E  1683               	bsf	3,5	;RP0=1, select bank1
  4744  043F  1303               	bcf	3,6	;RP1=0, select bank1
  4745  0440  00A9               	movwf	(_temp_array^(0+128)+9)
  4746  0441                     i1l3689:
  4747                           
  4748                           ;Scheduler.c: 159:         avgtemp = (temp_array[0] + temp_array[1] + temp_array[2] + te
      +                          mp_array[3] + temp_array[4] + temp_array[5] + temp_array[6] + temp_array[7] + temp_array
      +                          [8] + temp_array[9]) / 10;
  4749  0441  300A               	movlw	10
  4750  0442  00F0               	movwf	___awdiv@divisor
  4751  0443  3000               	movlw	0
  4752  0444  00F1               	movwf	___awdiv@divisor+1
  4753  0445  0820               	movf	_temp_array^(0+128),w
  4754  0446  0721               	addwf	(_temp_array^(0+128)+1),w
  4755  0447  1283               	bcf	3,5	;RP0=0, select bank0
  4756  0448  1303               	bcf	3,6	;RP1=0, select bank0
  4757  0449  00C6               	movwf	??_Sch_UpdateTick_Handler
  4758  044A  01C7               	clrf	??_Sch_UpdateTick_Handler+1
  4759  044B  0DC7               	rlf	??_Sch_UpdateTick_Handler+1,f
  4760  044C  1683               	bsf	3,5	;RP0=1, select bank1
  4761  044D  1303               	bcf	3,6	;RP1=0, select bank1
  4762  044E  0822               	movf	(_temp_array^(0+128)+2),w
  4763  044F  1283               	bcf	3,5	;RP0=0, select bank0
  4764  0450  1303               	bcf	3,6	;RP1=0, select bank0
  4765  0451  0746               	addwf	??_Sch_UpdateTick_Handler,w
  4766  0452  00C8               	movwf	??_Sch_UpdateTick_Handler+2
  4767  0453  3000               	movlw	0
  4768  0454  1803               	skipnc
  4769  0455  3001               	movlw	1
  4770  0456  0747               	addwf	??_Sch_UpdateTick_Handler+1,w
  4771  0457  00C9               	movwf	??_Sch_UpdateTick_Handler+3
  4772  0458  1683               	bsf	3,5	;RP0=1, select bank1
  4773  0459  1303               	bcf	3,6	;RP1=0, select bank1
  4774  045A  0823               	movf	(_temp_array^(0+128)+3),w
  4775  045B  1283               	bcf	3,5	;RP0=0, select bank0
  4776  045C  1303               	bcf	3,6	;RP1=0, select bank0
  4777  045D  0748               	addwf	??_Sch_UpdateTick_Handler+2,w
  4778  045E  00CA               	movwf	??_Sch_UpdateTick_Handler+4
  4779  045F  3000               	movlw	0
  4780  0460  1803               	skipnc
  4781  0461  3001               	movlw	1
  4782  0462  0749               	addwf	??_Sch_UpdateTick_Handler+3,w
  4783  0463  00CB               	movwf	??_Sch_UpdateTick_Handler+5
  4784  0464  1683               	bsf	3,5	;RP0=1, select bank1
  4785  0465  1303               	bcf	3,6	;RP1=0, select bank1
  4786  0466  0824               	movf	(_temp_array^(0+128)+4),w
  4787  0467  1283               	bcf	3,5	;RP0=0, select bank0
  4788  0468  1303               	bcf	3,6	;RP1=0, select bank0
  4789  0469  074A               	addwf	??_Sch_UpdateTick_Handler+4,w
  4790  046A  00CC               	movwf	??_Sch_UpdateTick_Handler+6
  4791  046B  3000               	movlw	0
  4792  046C  1803               	skipnc
  4793  046D  3001               	movlw	1
  4794  046E  074B               	addwf	??_Sch_UpdateTick_Handler+5,w
  4795  046F  00CD               	movwf	??_Sch_UpdateTick_Handler+7
  4796  0470  1683               	bsf	3,5	;RP0=1, select bank1
  4797  0471  1303               	bcf	3,6	;RP1=0, select bank1
  4798  0472  0825               	movf	(_temp_array^(0+128)+5),w
  4799  0473  1283               	bcf	3,5	;RP0=0, select bank0
  4800  0474  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0475  074C               	addwf	??_Sch_UpdateTick_Handler+6,w
  4802  0476  00CE               	movwf	??_Sch_UpdateTick_Handler+8
  4803  0477  3000               	movlw	0
  4804  0478  1803               	skipnc
  4805  0479  3001               	movlw	1
  4806  047A  074D               	addwf	??_Sch_UpdateTick_Handler+7,w
  4807  047B  00CF               	movwf	??_Sch_UpdateTick_Handler+9
  4808  047C  1683               	bsf	3,5	;RP0=1, select bank1
  4809  047D  1303               	bcf	3,6	;RP1=0, select bank1
  4810  047E  0826               	movf	(_temp_array^(0+128)+6),w
  4811  047F  1283               	bcf	3,5	;RP0=0, select bank0
  4812  0480  1303               	bcf	3,6	;RP1=0, select bank0
  4813  0481  074E               	addwf	??_Sch_UpdateTick_Handler+8,w
  4814  0482  00D0               	movwf	??_Sch_UpdateTick_Handler+10
  4815  0483  3000               	movlw	0
  4816  0484  1803               	skipnc
  4817  0485  3001               	movlw	1
  4818  0486  074F               	addwf	??_Sch_UpdateTick_Handler+9,w
  4819  0487  00D1               	movwf	??_Sch_UpdateTick_Handler+11
  4820  0488  1683               	bsf	3,5	;RP0=1, select bank1
  4821  0489  1303               	bcf	3,6	;RP1=0, select bank1
  4822  048A  0827               	movf	(_temp_array^(0+128)+7),w
  4823  048B  1283               	bcf	3,5	;RP0=0, select bank0
  4824  048C  1303               	bcf	3,6	;RP1=0, select bank0
  4825  048D  0750               	addwf	??_Sch_UpdateTick_Handler+10,w
  4826  048E  00D2               	movwf	??_Sch_UpdateTick_Handler+12
  4827  048F  3000               	movlw	0
  4828  0490  1803               	skipnc
  4829  0491  3001               	movlw	1
  4830  0492  0751               	addwf	??_Sch_UpdateTick_Handler+11,w
  4831  0493  00D3               	movwf	??_Sch_UpdateTick_Handler+13
  4832  0494  1683               	bsf	3,5	;RP0=1, select bank1
  4833  0495  1303               	bcf	3,6	;RP1=0, select bank1
  4834  0496  0828               	movf	(_temp_array^(0+128)+8),w
  4835  0497  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0498  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0499  0752               	addwf	??_Sch_UpdateTick_Handler+12,w
  4838  049A  00D4               	movwf	??_Sch_UpdateTick_Handler+14
  4839  049B  3000               	movlw	0
  4840  049C  1803               	skipnc
  4841  049D  3001               	movlw	1
  4842  049E  0753               	addwf	??_Sch_UpdateTick_Handler+13,w
  4843  049F  00D5               	movwf	??_Sch_UpdateTick_Handler+15
  4844  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  4845  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  4846  04A2  0829               	movf	(_temp_array^(0+128)+9),w
  4847  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  4848  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  4849  04A5  0754               	addwf	??_Sch_UpdateTick_Handler+14,w
  4850  04A6  00F2               	movwf	___awdiv@dividend
  4851  04A7  3000               	movlw	0
  4852  04A8  1803               	skipnc
  4853  04A9  3001               	movlw	1
  4854  04AA  0755               	addwf	??_Sch_UpdateTick_Handler+15,w
  4855  04AB  00F3               	movwf	___awdiv@dividend+1
  4856  04AC  160A  118A  26AF  120A  118A  	fcall	___awdiv
  4857  04B1  0870               	movf	?___awdiv,w
  4858  04B2  00FF               	movwf	btemp+1
  4859  04B3  087F               	movf	btemp+1,w
  4860  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  4861  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  4862  04B6  00AF               	movwf	_avgtemp^(0+128)
  4863  04B7  2DE8               	goto	i1l3715
  4864  04B8                     i1l3691:
  4865                           
  4866                           ;Scheduler.c: 165:             if (u32TickCount % 10 == 5) {
  4867  04B8  3000               	movlw	0
  4868  04B9  00F3               	movwf	___llmod@divisor+3
  4869  04BA  3000               	movlw	0
  4870  04BB  00F2               	movwf	___llmod@divisor+2
  4871  04BC  3000               	movlw	0
  4872  04BD  00F1               	movwf	___llmod@divisor+1
  4873  04BE  300A               	movlw	10
  4874  04BF  00F0               	movwf	___llmod@divisor
  4875  04C0  085F               	movf	_u32TickCount+3,w
  4876  04C1  00F7               	movwf	___llmod@dividend+3
  4877  04C2  085E               	movf	_u32TickCount+2,w
  4878  04C3  00F6               	movwf	___llmod@dividend+2
  4879  04C4  085D               	movf	_u32TickCount+1,w
  4880  04C5  00F5               	movwf	___llmod@dividend+1
  4881  04C6  085C               	movf	_u32TickCount,w
  4882  04C7  00F4               	movwf	___llmod@dividend
  4883  04C8  160A  118A  2602  120A  118A  	fcall	___llmod
  4884  04CD  3005               	movlw	5
  4885  04CE  0670               	xorwf	?___llmod,w
  4886  04CF  0471               	iorwf	?___llmod+1,w
  4887  04D0  0472               	iorwf	?___llmod+2,w
  4888  04D1  0473               	iorwf	?___llmod+3,w
  4889  04D2  1D03               	btfss	3,2
  4890  04D3  2CD5               	goto	u474_21
  4891  04D4  2CD6               	goto	u474_20
  4892  04D5                     u474_21:
  4893  04D5  2CF2               	goto	i1l3695
  4894  04D6                     u474_20:
  4895  04D6                     i1l3693:
  4896                           
  4897                           ;Scheduler.c: 166:                 SSD_Display(0, ((uint8) temp) / 10);
  4898  04D6  300A               	movlw	10
  4899  04D7  00F0               	movwf	___awdiv@divisor
  4900  04D8  3000               	movlw	0
  4901  04D9  00F1               	movwf	___awdiv@divisor+1
  4902  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  4903  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  4904  04DC  0861               	movf	_temp,w
  4905  04DD  00C6               	movwf	??_Sch_UpdateTick_Handler
  4906  04DE  01C7               	clrf	??_Sch_UpdateTick_Handler+1
  4907  04DF  0846               	movf	??_Sch_UpdateTick_Handler,w
  4908  04E0  00F2               	movwf	___awdiv@dividend
  4909  04E1  0847               	movf	??_Sch_UpdateTick_Handler+1,w
  4910  04E2  00F3               	movwf	___awdiv@dividend+1
  4911  04E3  160A  118A  26AF  120A  118A  	fcall	___awdiv
  4912  04E8  0870               	movf	?___awdiv,w
  4913  04E9  00FF               	movwf	btemp+1
  4914  04EA  087F               	movf	btemp+1,w
  4915  04EB  00F8               	movwf	SSD_Display@number
  4916  04EC  3000               	movlw	0
  4917  04ED  120A  158A  2542  120A  118A  	fcall	_SSD_Display
  4918  04F2                     i1l3695:
  4919                           
  4920                           ;Scheduler.c: 168:             if (u32TickCount % 10 == 0) {
  4921  04F2  3000               	movlw	0
  4922  04F3  00F3               	movwf	___llmod@divisor+3
  4923  04F4  3000               	movlw	0
  4924  04F5  00F2               	movwf	___llmod@divisor+2
  4925  04F6  3000               	movlw	0
  4926  04F7  00F1               	movwf	___llmod@divisor+1
  4927  04F8  300A               	movlw	10
  4928  04F9  00F0               	movwf	___llmod@divisor
  4929  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  4930  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  4931  04FC  085F               	movf	_u32TickCount+3,w
  4932  04FD  00F7               	movwf	___llmod@dividend+3
  4933  04FE  085E               	movf	_u32TickCount+2,w
  4934  04FF  00F6               	movwf	___llmod@dividend+2
  4935  0500  085D               	movf	_u32TickCount+1,w
  4936  0501  00F5               	movwf	___llmod@dividend+1
  4937  0502  085C               	movf	_u32TickCount,w
  4938  0503  00F4               	movwf	___llmod@dividend
  4939  0504  160A  118A  2602  120A  118A  	fcall	___llmod
  4940  0509  0873               	movf	?___llmod+3,w
  4941  050A  0472               	iorwf	?___llmod+2,w
  4942  050B  0471               	iorwf	?___llmod+1,w
  4943  050C  0470               	iorwf	?___llmod,w
  4944  050D  1D03               	skipz
  4945  050E  2D10               	goto	u475_21
  4946  050F  2D11               	goto	u475_20
  4947  0510                     u475_21:
  4948  0510  2DFC               	goto	i1l413
  4949  0511                     u475_20:
  4950  0511                     i1l3697:
  4951                           
  4952                           ;Scheduler.c: 169:                 SSD_Display(1, ((uint8) temp) % 10);
  4953  0511  300A               	movlw	10
  4954  0512  00F0               	movwf	___awmod@divisor
  4955  0513  3000               	movlw	0
  4956  0514  00F1               	movwf	___awmod@divisor+1
  4957  0515  1283               	bcf	3,5	;RP0=0, select bank0
  4958  0516  1303               	bcf	3,6	;RP1=0, select bank0
  4959  0517  0861               	movf	_temp,w
  4960  0518  00C6               	movwf	??_Sch_UpdateTick_Handler
  4961  0519  01C7               	clrf	??_Sch_UpdateTick_Handler+1
  4962  051A  0846               	movf	??_Sch_UpdateTick_Handler,w
  4963  051B  00F2               	movwf	___awmod@dividend
  4964  051C  0847               	movf	??_Sch_UpdateTick_Handler+1,w
  4965  051D  00F3               	movwf	___awmod@dividend+1
  4966  051E  160A  118A  2656  120A  118A  	fcall	___awmod
  4967  0523  0870               	movf	?___awmod,w
  4968  0524  00FF               	movwf	btemp+1
  4969  0525  087F               	movf	btemp+1,w
  4970  0526  00F8               	movwf	SSD_Display@number
  4971  0527  3001               	movlw	1
  4972  0528  120A  158A  2542  120A  118A  	fcall	_SSD_Display
  4973  052D  2DFC               	goto	i1l413
  4974  052E                     i1l3699:
  4975                           
  4976                           ;Scheduler.c: 174:             u32SetmodeCount++;
  4977  052E  3001               	movlw	1
  4978  052F  1683               	bsf	3,5	;RP0=1, select bank1
  4979  0530  1303               	bcf	3,6	;RP1=0, select bank1
  4980  0531  07AA               	addwf	_u32SetmodeCount^(0+128),f
  4981  0532  3000               	movlw	0
  4982  0533  1803               	skipnc
  4983  0534  3001               	movlw	1
  4984  0535  07AB               	addwf	(_u32SetmodeCount+1)^(0+128),f
  4985  0536  3000               	movlw	0
  4986  0537  1803               	skipnc
  4987  0538  3001               	movlw	1
  4988  0539  07AC               	addwf	(_u32SetmodeCount+2)^(0+128),f
  4989  053A  3000               	movlw	0
  4990  053B  1803               	skipnc
  4991  053C  3001               	movlw	1
  4992  053D  07AD               	addwf	(_u32SetmodeCount+3)^(0+128),f
  4993  053E                     i1l3701:
  4994                           
  4995                           ;Scheduler.c: 175:             if (u32TickCount % 200 < 100) {
  4996  053E  3000               	movlw	0
  4997  053F  00F3               	movwf	___llmod@divisor+3
  4998  0540  3000               	movlw	0
  4999  0541  00F2               	movwf	___llmod@divisor+2
  5000  0542  3000               	movlw	0
  5001  0543  00F1               	movwf	___llmod@divisor+1
  5002  0544  30C8               	movlw	200
  5003  0545  00F0               	movwf	___llmod@divisor
  5004  0546  1283               	bcf	3,5	;RP0=0, select bank0
  5005  0547  1303               	bcf	3,6	;RP1=0, select bank0
  5006  0548  085F               	movf	_u32TickCount+3,w
  5007  0549  00F7               	movwf	___llmod@dividend+3
  5008  054A  085E               	movf	_u32TickCount+2,w
  5009  054B  00F6               	movwf	___llmod@dividend+2
  5010  054C  085D               	movf	_u32TickCount+1,w
  5011  054D  00F5               	movwf	___llmod@dividend+1
  5012  054E  085C               	movf	_u32TickCount,w
  5013  054F  00F4               	movwf	___llmod@dividend
  5014  0550  160A  118A  2602  120A  118A  	fcall	___llmod
  5015  0555  0873               	movf	?___llmod+3,w
  5016  0556  1D03               	btfss	3,2
  5017  0557  2D65               	goto	u476_21
  5018  0558  0872               	movf	?___llmod+2,w
  5019  0559  1D03               	btfss	3,2
  5020  055A  2D65               	goto	u476_21
  5021  055B  0871               	movf	?___llmod+1,w
  5022  055C  1D03               	btfss	3,2
  5023  055D  2D65               	goto	u476_21
  5024  055E  3064               	movlw	100
  5025  055F  0270               	subwf	?___llmod,w
  5026  0560  1D03               	skipz
  5027  0561  2D62               	goto	u476_23
  5028  0562                     u476_23:
  5029  0562  1803               	btfsc	3,0
  5030  0563  2D65               	goto	u476_21
  5031  0564  2D66               	goto	u476_20
  5032  0565                     u476_21:
  5033  0565  2DE2               	goto	i1l3711
  5034  0566                     u476_20:
  5035  0566                     i1l3703:
  5036                           
  5037                           ;Scheduler.c: 176:                 if (u32TickCount % 10 == 5) {
  5038  0566  3000               	movlw	0
  5039  0567  00F3               	movwf	___llmod@divisor+3
  5040  0568  3000               	movlw	0
  5041  0569  00F2               	movwf	___llmod@divisor+2
  5042  056A  3000               	movlw	0
  5043  056B  00F1               	movwf	___llmod@divisor+1
  5044  056C  300A               	movlw	10
  5045  056D  00F0               	movwf	___llmod@divisor
  5046  056E  1283               	bcf	3,5	;RP0=0, select bank0
  5047  056F  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0570  085F               	movf	_u32TickCount+3,w
  5049  0571  00F7               	movwf	___llmod@dividend+3
  5050  0572  085E               	movf	_u32TickCount+2,w
  5051  0573  00F6               	movwf	___llmod@dividend+2
  5052  0574  085D               	movf	_u32TickCount+1,w
  5053  0575  00F5               	movwf	___llmod@dividend+1
  5054  0576  085C               	movf	_u32TickCount,w
  5055  0577  00F4               	movwf	___llmod@dividend
  5056  0578  160A  118A  2602  120A  118A  	fcall	___llmod
  5057  057D  3005               	movlw	5
  5058  057E  0670               	xorwf	?___llmod,w
  5059  057F  0471               	iorwf	?___llmod+1,w
  5060  0580  0472               	iorwf	?___llmod+2,w
  5061  0581  0473               	iorwf	?___llmod+3,w
  5062  0582  1D03               	btfss	3,2
  5063  0583  2D85               	goto	u477_21
  5064  0584  2D86               	goto	u477_20
  5065  0585                     u477_21:
  5066  0585  2DA4               	goto	i1l3707
  5067  0586                     u477_20:
  5068  0586                     i1l3705:
  5069                           
  5070                           ;Scheduler.c: 177:                     SSD_Display(0, ((uint8) Settemp) / 10);
  5071  0586  300A               	movlw	10
  5072  0587  00F0               	movwf	___awdiv@divisor
  5073  0588  3000               	movlw	0
  5074  0589  00F1               	movwf	___awdiv@divisor+1
  5075  058A  1683               	bsf	3,5	;RP0=1, select bank1
  5076  058B  1303               	bcf	3,6	;RP1=0, select bank1
  5077  058C  0830               	movf	_Settemp^(0+128),w
  5078  058D  1283               	bcf	3,5	;RP0=0, select bank0
  5079  058E  1303               	bcf	3,6	;RP1=0, select bank0
  5080  058F  00C6               	movwf	??_Sch_UpdateTick_Handler
  5081  0590  01C7               	clrf	??_Sch_UpdateTick_Handler+1
  5082  0591  0846               	movf	??_Sch_UpdateTick_Handler,w
  5083  0592  00F2               	movwf	___awdiv@dividend
  5084  0593  0847               	movf	??_Sch_UpdateTick_Handler+1,w
  5085  0594  00F3               	movwf	___awdiv@dividend+1
  5086  0595  160A  118A  26AF  120A  118A  	fcall	___awdiv
  5087  059A  0870               	movf	?___awdiv,w
  5088  059B  00FF               	movwf	btemp+1
  5089  059C  087F               	movf	btemp+1,w
  5090  059D  00F8               	movwf	SSD_Display@number
  5091  059E  3000               	movlw	0
  5092  059F  120A  158A  2542  120A  118A  	fcall	_SSD_Display
  5093  05A4                     i1l3707:
  5094                           
  5095                           ;Scheduler.c: 179:                 if (u32TickCount % 10 == 0) {
  5096  05A4  3000               	movlw	0
  5097  05A5  00F3               	movwf	___llmod@divisor+3
  5098  05A6  3000               	movlw	0
  5099  05A7  00F2               	movwf	___llmod@divisor+2
  5100  05A8  3000               	movlw	0
  5101  05A9  00F1               	movwf	___llmod@divisor+1
  5102  05AA  300A               	movlw	10
  5103  05AB  00F0               	movwf	___llmod@divisor
  5104  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  5105  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  5106  05AE  085F               	movf	_u32TickCount+3,w
  5107  05AF  00F7               	movwf	___llmod@dividend+3
  5108  05B0  085E               	movf	_u32TickCount+2,w
  5109  05B1  00F6               	movwf	___llmod@dividend+2
  5110  05B2  085D               	movf	_u32TickCount+1,w
  5111  05B3  00F5               	movwf	___llmod@dividend+1
  5112  05B4  085C               	movf	_u32TickCount,w
  5113  05B5  00F4               	movwf	___llmod@dividend
  5114  05B6  160A  118A  2602  120A  118A  	fcall	___llmod
  5115  05BB  0873               	movf	?___llmod+3,w
  5116  05BC  0472               	iorwf	?___llmod+2,w
  5117  05BD  0471               	iorwf	?___llmod+1,w
  5118  05BE  0470               	iorwf	?___llmod,w
  5119  05BF  1D03               	skipz
  5120  05C0  2DC2               	goto	u478_21
  5121  05C1  2DC3               	goto	u478_20
  5122  05C2                     u478_21:
  5123  05C2  2DFC               	goto	i1l413
  5124  05C3                     u478_20:
  5125  05C3                     i1l3709:
  5126                           
  5127                           ;Scheduler.c: 180:                     SSD_Display(1, ((uint8) Settemp) % 10);
  5128  05C3  300A               	movlw	10
  5129  05C4  00F0               	movwf	___awmod@divisor
  5130  05C5  3000               	movlw	0
  5131  05C6  00F1               	movwf	___awmod@divisor+1
  5132  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  5133  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  5134  05C9  0830               	movf	_Settemp^(0+128),w
  5135  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  5136  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  5137  05CC  00C6               	movwf	??_Sch_UpdateTick_Handler
  5138  05CD  01C7               	clrf	??_Sch_UpdateTick_Handler+1
  5139  05CE  0846               	movf	??_Sch_UpdateTick_Handler,w
  5140  05CF  00F2               	movwf	___awmod@dividend
  5141  05D0  0847               	movf	??_Sch_UpdateTick_Handler+1,w
  5142  05D1  00F3               	movwf	___awmod@dividend+1
  5143  05D2  160A  118A  2656  120A  118A  	fcall	___awmod
  5144  05D7  0870               	movf	?___awmod,w
  5145  05D8  00FF               	movwf	btemp+1
  5146  05D9  087F               	movf	btemp+1,w
  5147  05DA  00F8               	movwf	SSD_Display@number
  5148  05DB  3001               	movlw	1
  5149  05DC  120A  158A  2542  120A  118A  	fcall	_SSD_Display
  5150  05E1  2DFC               	goto	i1l413
  5151  05E2                     i1l3711:
  5152                           
  5153                           ;Scheduler.c: 183:                 SSD_OFF();
  5154  05E2  160A  118A  22E2  120A  118A  	fcall	i1_SSD_OFF
  5155  05E7  2DFC               	goto	i1l413
  5156  05E8                     i1l3715:
  5157  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  5158  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  5159  05EA  082E               	movf	_state^(0+128),w
  5160  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  5161  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  5162  05ED  00C6               	movwf	??_Sch_UpdateTick_Handler
  5163  05EE  01C7               	clrf	??_Sch_UpdateTick_Handler+1
  5164                           
  5165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5166                           ; Switch size 1, requested type "simple"
  5167                           ; Number of cases is 1, Range of values is 0 to 0
  5168                           ; switch strategies available:
  5169                           ; Name         Instructions Cycles
  5170                           ; simple_byte            4     3 (average)
  5171                           ; direct_byte           11     8 (fixed)
  5172                           ; jumptable            260     6 (fixed)
  5173                           ;	Chosen strategy is simple_byte
  5174  05EF  0847               	movf	??_Sch_UpdateTick_Handler+1,w
  5175  05F0  3A00               	xorlw	0	; case 0
  5176  05F1  1903               	skipnz
  5177  05F2  2DF4               	goto	i1l4099
  5178  05F3  2DFC               	goto	i1l413
  5179  05F4                     i1l4099:
  5180                           
  5181                           ; Switch size 1, requested type "simple"
  5182                           ; Number of cases is 2, Range of values is 1 to 2
  5183                           ; switch strategies available:
  5184                           ; Name         Instructions Cycles
  5185                           ; simple_byte            7     4 (average)
  5186                           ; direct_byte           17    11 (fixed)
  5187                           ; jumptable            263     9 (fixed)
  5188                           ;	Chosen strategy is simple_byte
  5189  05F4  0846               	movf	??_Sch_UpdateTick_Handler,w
  5190  05F5  3A01               	xorlw	1	; case 1
  5191  05F6  1903               	skipnz
  5192  05F7  2CB8               	goto	i1l3691
  5193  05F8  3A03               	xorlw	3	; case 2
  5194  05F9  1903               	skipnz
  5195  05FA  2D2E               	goto	i1l3699
  5196  05FB  2DFC               	goto	i1l413
  5197  05FC                     i1l413:
  5198  05FC  0008               	return
  5199  05FD                     __end_of_Sch_UpdateTick_Handler:
  5200                           
  5201                           	psect	text28
  5202  12E2                     __ptext28:	
  5203 ;; *************** function i1_SSD_OFF *****************
  5204 ;; Defined at:
  5205 ;;		line 98 in file "SSD.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5219 ;;      Params:         0       0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0
  5222 ;;      Totals:         0       0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    1
  5226 ;; This function calls:
  5227 ;;		i1_DIO_voidWritePinValue
  5228 ;;		i1_DIO_voidWritePortValue
  5229 ;; This function is called by:
  5230 ;;		_Sch_UpdateTick_Handler
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           
  5235                           ;psect for function i1_SSD_OFF
  5236  12E2                     i1_SSD_OFF:
  5237  12E2                     i1l3473:	
  5238                           ;incstack = 0
  5239                           ; Regs used in i1_SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5240                           
  5241                           
  5242                           ;SSD.c: 99:     DIO_voidWritePinValue(4, 0);
  5243  12E2  01F0               	clrf	i1DIO_voidWritePinValue@value
  5244  12E3  3004               	movlw	4
  5245  12E4  120A  158A  2157  160A  118A  	fcall	i1_DIO_voidWritePinValue
  5246                           
  5247                           ;SSD.c: 100:     DIO_voidWritePinValue(5, 0);
  5248  12E9  01F0               	clrf	i1DIO_voidWritePinValue@value
  5249  12EA  3005               	movlw	5
  5250  12EB  120A  158A  2157  160A  118A  	fcall	i1_DIO_voidWritePinValue
  5251  12F0                     i1l3475:
  5252                           
  5253                           ;SSD.c: 101:     DIO_voidWritePortValue(3, 0x00);
  5254  12F0  01F0               	clrf	i1DIO_voidWritePortValue@value
  5255  12F1  3003               	movlw	3
  5256  12F2  160A  118A  24B6  160A  118A  	fcall	i1_DIO_voidWritePortValue
  5257  12F7                     i1l322:
  5258  12F7  0008               	return
  5259  12F8                     __end_ofi1_SSD_OFF:
  5260                           
  5261                           	psect	text29
  5262  05FD                     __ptext29:	
  5263 ;; *************** function _sw_voidtask *****************
  5264 ;; Defined at:
  5265 ;;		line 32 in file "SWITCH.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5279 ;;      Params:         0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0
  5281 ;;      Temps:          2       0       0       0       0
  5282 ;;      Totals:         2       0       0       0       0
  5283 ;;Total ram usage:        2 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    1
  5286 ;; This function calls:
  5287 ;;		_DIO_U8ReadPinValue
  5288 ;; This function is called by:
  5289 ;;		_Sch_UpdateTick_Handler
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           
  5294                           ;psect for function _sw_voidtask
  5295  05FD                     _sw_voidtask:
  5296  05FD                     i1l3151:	
  5297                           ;incstack = 0
  5298                           ; Regs used in _sw_voidtask: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5299                           
  5300                           
  5301                           ;SWITCH.c: 34:     switch (UPstate) {
  5302  05FD  2E5F               	goto	i1l3181
  5303  05FE                     i1l3153:
  5304                           
  5305                           ;SWITCH.c: 36:             if (DIO_U8ReadPinValue(10) == 0) {
  5306  05FE  300A               	movlw	10
  5307  05FF  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5308  0604  3A00               	xorlw	0
  5309  0605  1D03               	skipz
  5310  0606  2E08               	goto	u412_21
  5311  0607  2E09               	goto	u412_20
  5312  0608                     u412_21:
  5313  0608  2ED8               	goto	i1l3211
  5314  0609                     u412_20:
  5315  0609                     i1l3155:
  5316                           
  5317                           ;SWITCH.c: 37:                 UPstate = 1;
  5318  0609  1283               	bcf	3,5	;RP0=0, select bank0
  5319  060A  1303               	bcf	3,6	;RP1=0, select bank0
  5320  060B  01E5               	clrf	_UPstate
  5321  060C  0AE5               	incf	_UPstate,f
  5322  060D  2ED8               	goto	i1l3211
  5323  060E                     i1l3157:
  5324                           
  5325                           ;SWITCH.c: 42:             if (DIO_U8ReadPinValue(10) == 0) {
  5326  060E  300A               	movlw	10
  5327  060F  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5328  0614  3A00               	xorlw	0
  5329  0615  1D03               	skipz
  5330  0616  2E18               	goto	u413_21
  5331  0617  2E19               	goto	u413_20
  5332  0618                     u413_21:
  5333  0618  2E1F               	goto	i1l3161
  5334  0619                     u413_20:
  5335  0619                     i1l3159:
  5336                           
  5337                           ;SWITCH.c: 43:                 SWcounter++;
  5338  0619  3001               	movlw	1
  5339  061A  00FF               	movwf	btemp+1
  5340  061B  087F               	movf	btemp+1,w
  5341  061C  1283               	bcf	3,5	;RP0=0, select bank0
  5342  061D  1303               	bcf	3,6	;RP1=0, select bank0
  5343  061E  07E2               	addwf	_SWcounter,f
  5344  061F                     i1l3161:
  5345                           
  5346                           ;SWITCH.c: 45:             if (SWcounter >= 4) {
  5347  061F  3004               	movlw	4
  5348  0620  1283               	bcf	3,5	;RP0=0, select bank0
  5349  0621  1303               	bcf	3,6	;RP1=0, select bank0
  5350  0622  0262               	subwf	_SWcounter,w
  5351  0623  1C03               	skipc
  5352  0624  2E26               	goto	u414_21
  5353  0625  2E27               	goto	u414_20
  5354  0626                     u414_21:
  5355  0626  2ED8               	goto	i1l3211
  5356  0627                     u414_20:
  5357  0627                     i1l3163:
  5358                           
  5359                           ;SWITCH.c: 46:                 SWcounter = 0;
  5360  0627  01E2               	clrf	_SWcounter
  5361  0628                     i1l3165:
  5362                           
  5363                           ;SWITCH.c: 47:                 UPstate = 2;
  5364  0628  3002               	movlw	2
  5365  0629  00FF               	movwf	btemp+1
  5366  062A  087F               	movf	btemp+1,w
  5367  062B  00E5               	movwf	_UPstate
  5368  062C  2ED8               	goto	i1l3211
  5369  062D                     i1l179:	
  5370                           ;SWITCH.c: 50:         case 2:
  5371                           
  5372                           
  5373                           ;SWITCH.c: 51:             UPpushed_flag = 1;
  5374  062D  1683               	bsf	3,5	;RP0=1, select bank1
  5375  062E  1303               	bcf	3,6	;RP1=0, select bank1
  5376  062F  01B3               	clrf	_UPpushed_flag^(0+128)
  5377  0630  0AB3               	incf	_UPpushed_flag^(0+128),f
  5378  0631                     i1l3167:
  5379                           
  5380                           ;SWITCH.c: 52:             if (DIO_U8ReadPinValue(10) == 1) {
  5381  0631  300A               	movlw	10
  5382  0632  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5383  0637  3A01               	xorlw	1
  5384  0638  1D03               	skipz
  5385  0639  2E3B               	goto	u415_21
  5386  063A  2E3C               	goto	u415_20
  5387  063B                     u415_21:
  5388  063B  2ED8               	goto	i1l3211
  5389  063C                     u415_20:
  5390  063C                     i1l3169:
  5391                           
  5392                           ;SWITCH.c: 53:                 UPstate = 3;
  5393  063C  3003               	movlw	3
  5394  063D  00FF               	movwf	btemp+1
  5395  063E  087F               	movf	btemp+1,w
  5396  063F  1283               	bcf	3,5	;RP0=0, select bank0
  5397  0640  1303               	bcf	3,6	;RP1=0, select bank0
  5398  0641  00E5               	movwf	_UPstate
  5399  0642  2ED8               	goto	i1l3211
  5400  0643                     i1l3171:
  5401                           
  5402                           ;SWITCH.c: 57:             if (DIO_U8ReadPinValue(10) == 1) {
  5403  0643  300A               	movlw	10
  5404  0644  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5405  0649  3A01               	xorlw	1
  5406  064A  1D03               	skipz
  5407  064B  2E4D               	goto	u416_21
  5408  064C  2E4E               	goto	u416_20
  5409  064D                     u416_21:
  5410  064D  2E54               	goto	i1l3175
  5411  064E                     u416_20:
  5412  064E                     i1l3173:
  5413                           
  5414                           ;SWITCH.c: 58:                 SWcounter++;
  5415  064E  3001               	movlw	1
  5416  064F  00FF               	movwf	btemp+1
  5417  0650  087F               	movf	btemp+1,w
  5418  0651  1283               	bcf	3,5	;RP0=0, select bank0
  5419  0652  1303               	bcf	3,6	;RP1=0, select bank0
  5420  0653  07E2               	addwf	_SWcounter,f
  5421  0654                     i1l3175:
  5422                           
  5423                           ;SWITCH.c: 60:             if (SWcounter >= 4) {
  5424  0654  3004               	movlw	4
  5425  0655  1283               	bcf	3,5	;RP0=0, select bank0
  5426  0656  1303               	bcf	3,6	;RP1=0, select bank0
  5427  0657  0262               	subwf	_SWcounter,w
  5428  0658  1C03               	skipc
  5429  0659  2E5B               	goto	u417_21
  5430  065A  2E5C               	goto	u417_20
  5431  065B                     u417_21:
  5432  065B  2ED8               	goto	i1l3211
  5433  065C                     u417_20:
  5434  065C                     i1l3177:
  5435                           
  5436                           ;SWITCH.c: 61:                 SWcounter = 0;
  5437  065C  01E2               	clrf	_SWcounter
  5438                           
  5439                           ;SWITCH.c: 62:                 UPstate = 0;
  5440  065D  01E5               	clrf	_UPstate
  5441  065E  2ED8               	goto	i1l3211
  5442  065F                     i1l3181:
  5443  065F  1283               	bcf	3,5	;RP0=0, select bank0
  5444  0660  1303               	bcf	3,6	;RP1=0, select bank0
  5445  0661  0865               	movf	_UPstate,w
  5446  0662  00F3               	movwf	??_sw_voidtask
  5447  0663  01F4               	clrf	??_sw_voidtask+1
  5448                           
  5449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5450                           ; Switch size 1, requested type "simple"
  5451                           ; Number of cases is 1, Range of values is 0 to 0
  5452                           ; switch strategies available:
  5453                           ; Name         Instructions Cycles
  5454                           ; simple_byte            4     3 (average)
  5455                           ; direct_byte           11     8 (fixed)
  5456                           ; jumptable            260     6 (fixed)
  5457                           ;	Chosen strategy is simple_byte
  5458  0664  0874               	movf	??_sw_voidtask+1,w
  5459  0665  3A00               	xorlw	0	; case 0
  5460  0666  1903               	skipnz
  5461  0667  2E69               	goto	i1l4101
  5462  0668  2ED8               	goto	i1l3211
  5463  0669                     i1l4101:
  5464                           
  5465                           ; Switch size 1, requested type "simple"
  5466                           ; Number of cases is 4, Range of values is 0 to 3
  5467                           ; switch strategies available:
  5468                           ; Name         Instructions Cycles
  5469                           ; simple_byte           13     7 (average)
  5470                           ; direct_byte           20     8 (fixed)
  5471                           ; jumptable            260     6 (fixed)
  5472                           ;	Chosen strategy is simple_byte
  5473  0669  0873               	movf	??_sw_voidtask,w
  5474  066A  3A00               	xorlw	0	; case 0
  5475  066B  1903               	skipnz
  5476  066C  2DFE               	goto	i1l3153
  5477  066D  3A01               	xorlw	1	; case 1
  5478  066E  1903               	skipnz
  5479  066F  2E0E               	goto	i1l3157
  5480  0670  3A03               	xorlw	3	; case 2
  5481  0671  1903               	skipnz
  5482  0672  2E2D               	goto	i1l179
  5483  0673  3A01               	xorlw	1	; case 3
  5484  0674  1903               	skipnz
  5485  0675  2E43               	goto	i1l3171
  5486  0676  2ED8               	goto	i1l3211
  5487  0677                     i1l3183:
  5488                           
  5489                           ;SWITCH.c: 69:             if (DIO_U8ReadPinValue(8) == 0) {
  5490  0677  3008               	movlw	8
  5491  0678  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5492  067D  3A00               	xorlw	0
  5493  067E  1D03               	skipz
  5494  067F  2E81               	goto	u418_21
  5495  0680  2E82               	goto	u418_20
  5496  0681                     u418_21:
  5497  0681  2F51               	goto	i1l3241
  5498  0682                     u418_20:
  5499  0682                     i1l3185:
  5500                           
  5501                           ;SWITCH.c: 70:                 DOWNstate = 1;
  5502  0682  1283               	bcf	3,5	;RP0=0, select bank0
  5503  0683  1303               	bcf	3,6	;RP1=0, select bank0
  5504  0684  01E4               	clrf	_DOWNstate
  5505  0685  0AE4               	incf	_DOWNstate,f
  5506  0686  2F51               	goto	i1l3241
  5507  0687                     i1l3187:
  5508                           
  5509                           ;SWITCH.c: 75:             if (DIO_U8ReadPinValue(8) == 0) {
  5510  0687  3008               	movlw	8
  5511  0688  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5512  068D  3A00               	xorlw	0
  5513  068E  1D03               	skipz
  5514  068F  2E91               	goto	u419_21
  5515  0690  2E92               	goto	u419_20
  5516  0691                     u419_21:
  5517  0691  2E98               	goto	i1l3191
  5518  0692                     u419_20:
  5519  0692                     i1l3189:
  5520                           
  5521                           ;SWITCH.c: 76:                 SWcounter++;
  5522  0692  3001               	movlw	1
  5523  0693  00FF               	movwf	btemp+1
  5524  0694  087F               	movf	btemp+1,w
  5525  0695  1283               	bcf	3,5	;RP0=0, select bank0
  5526  0696  1303               	bcf	3,6	;RP1=0, select bank0
  5527  0697  07E2               	addwf	_SWcounter,f
  5528  0698                     i1l3191:
  5529                           
  5530                           ;SWITCH.c: 78:             if (SWcounter >= 4) {
  5531  0698  3004               	movlw	4
  5532  0699  1283               	bcf	3,5	;RP0=0, select bank0
  5533  069A  1303               	bcf	3,6	;RP1=0, select bank0
  5534  069B  0262               	subwf	_SWcounter,w
  5535  069C  1C03               	skipc
  5536  069D  2E9F               	goto	u420_21
  5537  069E  2EA0               	goto	u420_20
  5538  069F                     u420_21:
  5539  069F  2F51               	goto	i1l3241
  5540  06A0                     u420_20:
  5541  06A0                     i1l3193:
  5542                           
  5543                           ;SWITCH.c: 79:                 SWcounter = 0;
  5544  06A0  01E2               	clrf	_SWcounter
  5545  06A1                     i1l3195:
  5546                           
  5547                           ;SWITCH.c: 80:                 DOWNstate = 2;
  5548  06A1  3002               	movlw	2
  5549  06A2  00FF               	movwf	btemp+1
  5550  06A3  087F               	movf	btemp+1,w
  5551  06A4  00E4               	movwf	_DOWNstate
  5552  06A5  2F51               	goto	i1l3241
  5553  06A6                     i1l191:	
  5554                           ;SWITCH.c: 83:         case 2:
  5555                           
  5556                           
  5557                           ;SWITCH.c: 84:             DOWNpushed_flag = 1;
  5558  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  5559  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  5560  06A8  01B2               	clrf	_DOWNpushed_flag^(0+128)
  5561  06A9  0AB2               	incf	_DOWNpushed_flag^(0+128),f
  5562  06AA                     i1l3197:
  5563                           
  5564                           ;SWITCH.c: 85:             if (DIO_U8ReadPinValue(8) == 1) {
  5565  06AA  3008               	movlw	8
  5566  06AB  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5567  06B0  3A01               	xorlw	1
  5568  06B1  1D03               	skipz
  5569  06B2  2EB4               	goto	u421_21
  5570  06B3  2EB5               	goto	u421_20
  5571  06B4                     u421_21:
  5572  06B4  2F51               	goto	i1l3241
  5573  06B5                     u421_20:
  5574  06B5                     i1l3199:
  5575                           
  5576                           ;SWITCH.c: 86:                 DOWNstate = 3;
  5577  06B5  3003               	movlw	3
  5578  06B6  00FF               	movwf	btemp+1
  5579  06B7  087F               	movf	btemp+1,w
  5580  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  5581  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  5582  06BA  00E4               	movwf	_DOWNstate
  5583  06BB  2F51               	goto	i1l3241
  5584  06BC                     i1l3201:
  5585                           
  5586                           ;SWITCH.c: 90:             if (DIO_U8ReadPinValue(8) == 1) {
  5587  06BC  3008               	movlw	8
  5588  06BD  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5589  06C2  3A01               	xorlw	1
  5590  06C3  1D03               	skipz
  5591  06C4  2EC6               	goto	u422_21
  5592  06C5  2EC7               	goto	u422_20
  5593  06C6                     u422_21:
  5594  06C6  2ECD               	goto	i1l3205
  5595  06C7                     u422_20:
  5596  06C7                     i1l3203:
  5597                           
  5598                           ;SWITCH.c: 91:                 SWcounter++;
  5599  06C7  3001               	movlw	1
  5600  06C8  00FF               	movwf	btemp+1
  5601  06C9  087F               	movf	btemp+1,w
  5602  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  5603  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  5604  06CC  07E2               	addwf	_SWcounter,f
  5605  06CD                     i1l3205:
  5606                           
  5607                           ;SWITCH.c: 93:             if (SWcounter >= 4) {
  5608  06CD  3004               	movlw	4
  5609  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  5610  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  5611  06D0  0262               	subwf	_SWcounter,w
  5612  06D1  1C03               	skipc
  5613  06D2  2ED4               	goto	u423_21
  5614  06D3  2ED5               	goto	u423_20
  5615  06D4                     u423_21:
  5616  06D4  2F51               	goto	i1l3241
  5617  06D5                     u423_20:
  5618  06D5                     i1l3207:
  5619                           
  5620                           ;SWITCH.c: 94:                 SWcounter = 0;
  5621  06D5  01E2               	clrf	_SWcounter
  5622                           
  5623                           ;SWITCH.c: 95:                 DOWNstate = 0;
  5624  06D6  01E4               	clrf	_DOWNstate
  5625  06D7  2F51               	goto	i1l3241
  5626  06D8                     i1l3211:
  5627  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  5628  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  5629  06DA  0864               	movf	_DOWNstate,w
  5630  06DB  00F3               	movwf	??_sw_voidtask
  5631  06DC  01F4               	clrf	??_sw_voidtask+1
  5632                           
  5633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5634                           ; Switch size 1, requested type "simple"
  5635                           ; Number of cases is 1, Range of values is 0 to 0
  5636                           ; switch strategies available:
  5637                           ; Name         Instructions Cycles
  5638                           ; simple_byte            4     3 (average)
  5639                           ; direct_byte           11     8 (fixed)
  5640                           ; jumptable            260     6 (fixed)
  5641                           ;	Chosen strategy is simple_byte
  5642  06DD  0874               	movf	??_sw_voidtask+1,w
  5643  06DE  3A00               	xorlw	0	; case 0
  5644  06DF  1903               	skipnz
  5645  06E0  2EE2               	goto	i1l4103
  5646  06E1  2F51               	goto	i1l3241
  5647  06E2                     i1l4103:
  5648                           
  5649                           ; Switch size 1, requested type "simple"
  5650                           ; Number of cases is 4, Range of values is 0 to 3
  5651                           ; switch strategies available:
  5652                           ; Name         Instructions Cycles
  5653                           ; simple_byte           13     7 (average)
  5654                           ; direct_byte           20     8 (fixed)
  5655                           ; jumptable            260     6 (fixed)
  5656                           ;	Chosen strategy is simple_byte
  5657  06E2  0873               	movf	??_sw_voidtask,w
  5658  06E3  3A00               	xorlw	0	; case 0
  5659  06E4  1903               	skipnz
  5660  06E5  2E77               	goto	i1l3183
  5661  06E6  3A01               	xorlw	1	; case 1
  5662  06E7  1903               	skipnz
  5663  06E8  2E87               	goto	i1l3187
  5664  06E9  3A03               	xorlw	3	; case 2
  5665  06EA  1903               	skipnz
  5666  06EB  2EA6               	goto	i1l191
  5667  06EC  3A01               	xorlw	1	; case 3
  5668  06ED  1903               	skipnz
  5669  06EE  2EBC               	goto	i1l3201
  5670  06EF  2F51               	goto	i1l3241
  5671  06F0                     i1l3213:
  5672                           
  5673                           ;SWITCH.c: 102:             if (DIO_U8ReadPinValue(9) == 0) {
  5674  06F0  3009               	movlw	9
  5675  06F1  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5676  06F6  3A00               	xorlw	0
  5677  06F7  1D03               	skipz
  5678  06F8  2EFA               	goto	u424_21
  5679  06F9  2EFB               	goto	u424_20
  5680  06FA                     u424_21:
  5681  06FA  2F69               	goto	i1l208
  5682  06FB                     u424_20:
  5683  06FB                     i1l3215:
  5684                           
  5685                           ;SWITCH.c: 103:                 ON_OFFstate = 1;
  5686  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  5687  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  5688  06FD  01E3               	clrf	_ON_OFFstate
  5689  06FE  0AE3               	incf	_ON_OFFstate,f
  5690  06FF  2F69               	goto	i1l208
  5691  0700                     i1l3217:
  5692                           
  5693                           ;SWITCH.c: 108:             if (DIO_U8ReadPinValue(9) == 0) {
  5694  0700  3009               	movlw	9
  5695  0701  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5696  0706  3A00               	xorlw	0
  5697  0707  1D03               	skipz
  5698  0708  2F0A               	goto	u425_21
  5699  0709  2F0B               	goto	u425_20
  5700  070A                     u425_21:
  5701  070A  2F11               	goto	i1l3221
  5702  070B                     u425_20:
  5703  070B                     i1l3219:
  5704                           
  5705                           ;SWITCH.c: 109:                 SWcounter++;
  5706  070B  3001               	movlw	1
  5707  070C  00FF               	movwf	btemp+1
  5708  070D  087F               	movf	btemp+1,w
  5709  070E  1283               	bcf	3,5	;RP0=0, select bank0
  5710  070F  1303               	bcf	3,6	;RP1=0, select bank0
  5711  0710  07E2               	addwf	_SWcounter,f
  5712  0711                     i1l3221:
  5713                           
  5714                           ;SWITCH.c: 111:             if (SWcounter >= 4) {
  5715  0711  3004               	movlw	4
  5716  0712  1283               	bcf	3,5	;RP0=0, select bank0
  5717  0713  1303               	bcf	3,6	;RP1=0, select bank0
  5718  0714  0262               	subwf	_SWcounter,w
  5719  0715  1C03               	skipc
  5720  0716  2F18               	goto	u426_21
  5721  0717  2F19               	goto	u426_20
  5722  0718                     u426_21:
  5723  0718  2F69               	goto	i1l208
  5724  0719                     u426_20:
  5725  0719                     i1l3223:
  5726                           
  5727                           ;SWITCH.c: 112:                 SWcounter = 0;
  5728  0719  01E2               	clrf	_SWcounter
  5729  071A                     i1l3225:
  5730                           
  5731                           ;SWITCH.c: 113:                 ON_OFFstate = 2;
  5732  071A  3002               	movlw	2
  5733  071B  00FF               	movwf	btemp+1
  5734  071C  087F               	movf	btemp+1,w
  5735  071D  00E3               	movwf	_ON_OFFstate
  5736  071E  2F69               	goto	i1l208
  5737  071F                     i1l203:	
  5738                           ;SWITCH.c: 116:         case 2:
  5739                           
  5740                           
  5741                           ;SWITCH.c: 117:             ON_OFFpushed_flag = 1;
  5742  071F  1683               	bsf	3,5	;RP0=1, select bank1
  5743  0720  1303               	bcf	3,6	;RP1=0, select bank1
  5744  0721  01B1               	clrf	_ON_OFFpushed_flag^(0+128)
  5745  0722  0AB1               	incf	_ON_OFFpushed_flag^(0+128),f
  5746  0723                     i1l3227:
  5747                           
  5748                           ;SWITCH.c: 118:             if (DIO_U8ReadPinValue(9) == 1) {
  5749  0723  3009               	movlw	9
  5750  0724  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5751  0729  3A01               	xorlw	1
  5752  072A  1D03               	skipz
  5753  072B  2F2D               	goto	u427_21
  5754  072C  2F2E               	goto	u427_20
  5755  072D                     u427_21:
  5756  072D  2F69               	goto	i1l208
  5757  072E                     u427_20:
  5758  072E                     i1l3229:
  5759                           
  5760                           ;SWITCH.c: 119:                 ON_OFFstate = 3;
  5761  072E  3003               	movlw	3
  5762  072F  00FF               	movwf	btemp+1
  5763  0730  087F               	movf	btemp+1,w
  5764  0731  1283               	bcf	3,5	;RP0=0, select bank0
  5765  0732  1303               	bcf	3,6	;RP1=0, select bank0
  5766  0733  00E3               	movwf	_ON_OFFstate
  5767  0734  2F69               	goto	i1l208
  5768  0735                     i1l3231:
  5769                           
  5770                           ;SWITCH.c: 123:             if (DIO_U8ReadPinValue(9) == 1) {
  5771  0735  3009               	movlw	9
  5772  0736  120A  118A  276A  120A  118A  	fcall	_DIO_U8ReadPinValue
  5773  073B  3A01               	xorlw	1
  5774  073C  1D03               	skipz
  5775  073D  2F3F               	goto	u428_21
  5776  073E  2F40               	goto	u428_20
  5777  073F                     u428_21:
  5778  073F  2F46               	goto	i1l3235
  5779  0740                     u428_20:
  5780  0740                     i1l3233:
  5781                           
  5782                           ;SWITCH.c: 124:                 SWcounter++;
  5783  0740  3001               	movlw	1
  5784  0741  00FF               	movwf	btemp+1
  5785  0742  087F               	movf	btemp+1,w
  5786  0743  1283               	bcf	3,5	;RP0=0, select bank0
  5787  0744  1303               	bcf	3,6	;RP1=0, select bank0
  5788  0745  07E2               	addwf	_SWcounter,f
  5789  0746                     i1l3235:
  5790                           
  5791                           ;SWITCH.c: 126:             if (SWcounter >= 4) {
  5792  0746  3004               	movlw	4
  5793  0747  1283               	bcf	3,5	;RP0=0, select bank0
  5794  0748  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0749  0262               	subwf	_SWcounter,w
  5796  074A  1C03               	skipc
  5797  074B  2F4D               	goto	u429_21
  5798  074C  2F4E               	goto	u429_20
  5799  074D                     u429_21:
  5800  074D  2F69               	goto	i1l208
  5801  074E                     u429_20:
  5802  074E                     i1l3237:
  5803                           
  5804                           ;SWITCH.c: 127:                 SWcounter = 0;
  5805  074E  01E2               	clrf	_SWcounter
  5806                           
  5807                           ;SWITCH.c: 128:                 ON_OFFstate = 0;
  5808  074F  01E3               	clrf	_ON_OFFstate
  5809  0750  2F69               	goto	i1l208
  5810  0751                     i1l3241:
  5811  0751  1283               	bcf	3,5	;RP0=0, select bank0
  5812  0752  1303               	bcf	3,6	;RP1=0, select bank0
  5813  0753  0863               	movf	_ON_OFFstate,w
  5814  0754  00F3               	movwf	??_sw_voidtask
  5815  0755  01F4               	clrf	??_sw_voidtask+1
  5816                           
  5817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5818                           ; Switch size 1, requested type "simple"
  5819                           ; Number of cases is 1, Range of values is 0 to 0
  5820                           ; switch strategies available:
  5821                           ; Name         Instructions Cycles
  5822                           ; simple_byte            4     3 (average)
  5823                           ; direct_byte           11     8 (fixed)
  5824                           ; jumptable            260     6 (fixed)
  5825                           ;	Chosen strategy is simple_byte
  5826  0756  0874               	movf	??_sw_voidtask+1,w
  5827  0757  3A00               	xorlw	0	; case 0
  5828  0758  1903               	skipnz
  5829  0759  2F5B               	goto	i1l4105
  5830  075A  2F69               	goto	i1l208
  5831  075B                     i1l4105:
  5832                           
  5833                           ; Switch size 1, requested type "simple"
  5834                           ; Number of cases is 4, Range of values is 0 to 3
  5835                           ; switch strategies available:
  5836                           ; Name         Instructions Cycles
  5837                           ; simple_byte           13     7 (average)
  5838                           ; direct_byte           20     8 (fixed)
  5839                           ; jumptable            260     6 (fixed)
  5840                           ;	Chosen strategy is simple_byte
  5841  075B  0873               	movf	??_sw_voidtask,w
  5842  075C  3A00               	xorlw	0	; case 0
  5843  075D  1903               	skipnz
  5844  075E  2EF0               	goto	i1l3213
  5845  075F  3A01               	xorlw	1	; case 1
  5846  0760  1903               	skipnz
  5847  0761  2F00               	goto	i1l3217
  5848  0762  3A03               	xorlw	3	; case 2
  5849  0763  1903               	skipnz
  5850  0764  2F1F               	goto	i1l203
  5851  0765  3A01               	xorlw	1	; case 3
  5852  0766  1903               	skipnz
  5853  0767  2F35               	goto	i1l3231
  5854  0768  2F69               	goto	i1l208
  5855  0769                     i1l208:
  5856  0769  0008               	return
  5857  076A                     __end_of_sw_voidtask:
  5858                           
  5859                           	psect	text30
  5860  076A                     __ptext30:	
  5861 ;; *************** function _DIO_U8ReadPinValue *****************
  5862 ;; Defined at:
  5863 ;;		line 165 in file "DIO.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  pin_num         1    wreg     unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  pin_num         1    2[COMMON] unsigned char 
  5868 ;;  pin             1    1[COMMON] unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      unsigned char 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0, btemp+1
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5878 ;;      Params:         0       0       0       0       0
  5879 ;;      Locals:         2       0       0       0       0
  5880 ;;      Temps:          1       0       0       0       0
  5881 ;;      Totals:         3       0       0       0       0
  5882 ;;Total ram usage:        3 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_sw_voidtask
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _DIO_U8ReadPinValue
  5893  076A                     _DIO_U8ReadPinValue:
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in _DIO_U8ReadPinValue: [wreg+status,2+status,0+btemp+1]
  5897                           ;DIO_U8ReadPinValue@pin_num stored from wreg
  5898  076A  00F2               	movwf	DIO_U8ReadPinValue@pin_num
  5899  076B                     i1l2629:
  5900                           
  5901                           ;DIO.c: 166:     uint8 pin;;DIO.c: 167:     if ((pin_num >= 0)&&(pin_num < 8)) {
  5902  076B  3008               	movlw	8
  5903  076C  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  5904  076D  1803               	skipnc
  5905  076E  2F70               	goto	u273_21
  5906  076F  2F71               	goto	u273_20
  5907  0770                     u273_21:
  5908  0770  2F83               	goto	i1l2633
  5909  0771                     u273_20:
  5910  0771                     i1l2631:
  5911                           
  5912                           ;DIO.c: 168:         pin = (((*((uint8*)(0x05)) >> pin_num % 8) & (1)));
  5913  0771  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0772  1303               	bcf	3,6	;RP1=0, select bank0
  5915  0773  0805               	movf	5,w
  5916  0774  00F0               	movwf	??_DIO_U8ReadPinValue
  5917  0775  0872               	movf	DIO_U8ReadPinValue@pin_num,w
  5918  0776  3907               	andlw	7
  5919  0777  3E01               	addlw	1
  5920  0778  2F7B               	goto	u274_24
  5921  0779                     u274_25:
  5922  0779  1003               	clrc
  5923  077A  0CF0               	rrf	??_DIO_U8ReadPinValue,f
  5924  077B                     u274_24:
  5925  077B  3EFF               	addlw	-1
  5926  077C  1D03               	skipz
  5927  077D  2F79               	goto	u274_25
  5928  077E  0870               	movf	??_DIO_U8ReadPinValue,w
  5929  077F  3901               	andlw	1
  5930  0780  00FF               	movwf	btemp+1
  5931  0781  087F               	movf	btemp+1,w
  5932  0782  00F1               	movwf	DIO_U8ReadPinValue@pin
  5933  0783                     i1l2633:
  5934                           
  5935                           ;DIO.c: 170:     if ((pin_num >= 8)&&(pin_num < 16)) {
  5936  0783  3008               	movlw	8
  5937  0784  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  5938  0785  1C03               	skipc
  5939  0786  2F88               	goto	u275_21
  5940  0787  2F89               	goto	u275_20
  5941  0788                     u275_21:
  5942  0788  2FA1               	goto	i1l2639
  5943  0789                     u275_20:
  5944  0789                     i1l2635:
  5945  0789  3010               	movlw	16
  5946  078A  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  5947  078B  1803               	skipnc
  5948  078C  2F8E               	goto	u276_21
  5949  078D  2F8F               	goto	u276_20
  5950  078E                     u276_21:
  5951  078E  2FA1               	goto	i1l2639
  5952  078F                     u276_20:
  5953  078F                     i1l2637:
  5954                           
  5955                           ;DIO.c: 171:         pin = (((*((uint8*)(0x06)) >> pin_num % 8) & (1)));
  5956  078F  1283               	bcf	3,5	;RP0=0, select bank0
  5957  0790  1303               	bcf	3,6	;RP1=0, select bank0
  5958  0791  0806               	movf	6,w
  5959  0792  00F0               	movwf	??_DIO_U8ReadPinValue
  5960  0793  0872               	movf	DIO_U8ReadPinValue@pin_num,w
  5961  0794  3907               	andlw	7
  5962  0795  3E01               	addlw	1
  5963  0796  2F99               	goto	u277_24
  5964  0797                     u277_25:
  5965  0797  1003               	clrc
  5966  0798  0CF0               	rrf	??_DIO_U8ReadPinValue,f
  5967  0799                     u277_24:
  5968  0799  3EFF               	addlw	-1
  5969  079A  1D03               	skipz
  5970  079B  2F97               	goto	u277_25
  5971  079C  0870               	movf	??_DIO_U8ReadPinValue,w
  5972  079D  3901               	andlw	1
  5973  079E  00FF               	movwf	btemp+1
  5974  079F  087F               	movf	btemp+1,w
  5975  07A0  00F1               	movwf	DIO_U8ReadPinValue@pin
  5976  07A1                     i1l2639:
  5977                           
  5978                           ;DIO.c: 173:     if ((pin_num >= 16)&&(pin_num < 24)) {
  5979  07A1  3010               	movlw	16
  5980  07A2  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  5981  07A3  1C03               	skipc
  5982  07A4  2FA6               	goto	u278_21
  5983  07A5  2FA7               	goto	u278_20
  5984  07A6                     u278_21:
  5985  07A6  2FBF               	goto	i1l2645
  5986  07A7                     u278_20:
  5987  07A7                     i1l2641:
  5988  07A7  3018               	movlw	24
  5989  07A8  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  5990  07A9  1803               	skipnc
  5991  07AA  2FAC               	goto	u279_21
  5992  07AB  2FAD               	goto	u279_20
  5993  07AC                     u279_21:
  5994  07AC  2FBF               	goto	i1l2645
  5995  07AD                     u279_20:
  5996  07AD                     i1l2643:
  5997                           
  5998                           ;DIO.c: 174:         pin = (((*((uint8*)(0x07)) >> pin_num % 8) & (1)));
  5999  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  6000  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  6001  07AF  0807               	movf	7,w
  6002  07B0  00F0               	movwf	??_DIO_U8ReadPinValue
  6003  07B1  0872               	movf	DIO_U8ReadPinValue@pin_num,w
  6004  07B2  3907               	andlw	7
  6005  07B3  3E01               	addlw	1
  6006  07B4  2FB7               	goto	u280_24
  6007  07B5                     u280_25:
  6008  07B5  1003               	clrc
  6009  07B6  0CF0               	rrf	??_DIO_U8ReadPinValue,f
  6010  07B7                     u280_24:
  6011  07B7  3EFF               	addlw	-1
  6012  07B8  1D03               	skipz
  6013  07B9  2FB5               	goto	u280_25
  6014  07BA  0870               	movf	??_DIO_U8ReadPinValue,w
  6015  07BB  3901               	andlw	1
  6016  07BC  00FF               	movwf	btemp+1
  6017  07BD  087F               	movf	btemp+1,w
  6018  07BE  00F1               	movwf	DIO_U8ReadPinValue@pin
  6019  07BF                     i1l2645:
  6020                           
  6021                           ;DIO.c: 176:     if ((pin_num >= 24)&&(pin_num < 32)) {
  6022  07BF  3018               	movlw	24
  6023  07C0  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  6024  07C1  1C03               	skipc
  6025  07C2  2FC4               	goto	u281_21
  6026  07C3  2FC5               	goto	u281_20
  6027  07C4                     u281_21:
  6028  07C4  2FDD               	goto	i1l2651
  6029  07C5                     u281_20:
  6030  07C5                     i1l2647:
  6031  07C5  3020               	movlw	32
  6032  07C6  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  6033  07C7  1803               	skipnc
  6034  07C8  2FCA               	goto	u282_21
  6035  07C9  2FCB               	goto	u282_20
  6036  07CA                     u282_21:
  6037  07CA  2FDD               	goto	i1l2651
  6038  07CB                     u282_20:
  6039  07CB                     i1l2649:
  6040                           
  6041                           ;DIO.c: 177:         pin = (((*((uint8*)(0x08)) >> pin_num % 8) & (1)));
  6042  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  6043  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  6044  07CD  0808               	movf	8,w
  6045  07CE  00F0               	movwf	??_DIO_U8ReadPinValue
  6046  07CF  0872               	movf	DIO_U8ReadPinValue@pin_num,w
  6047  07D0  3907               	andlw	7
  6048  07D1  3E01               	addlw	1
  6049  07D2  2FD5               	goto	u283_24
  6050  07D3                     u283_25:
  6051  07D3  1003               	clrc
  6052  07D4  0CF0               	rrf	??_DIO_U8ReadPinValue,f
  6053  07D5                     u283_24:
  6054  07D5  3EFF               	addlw	-1
  6055  07D6  1D03               	skipz
  6056  07D7  2FD3               	goto	u283_25
  6057  07D8  0870               	movf	??_DIO_U8ReadPinValue,w
  6058  07D9  3901               	andlw	1
  6059  07DA  00FF               	movwf	btemp+1
  6060  07DB  087F               	movf	btemp+1,w
  6061  07DC  00F1               	movwf	DIO_U8ReadPinValue@pin
  6062  07DD                     i1l2651:
  6063                           
  6064                           ;DIO.c: 179:     if ((pin_num >= 32)&&(pin_num <= 34)) {
  6065  07DD  3020               	movlw	32
  6066  07DE  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  6067  07DF  1C03               	skipc
  6068  07E0  2FE2               	goto	u284_21
  6069  07E1  2FE3               	goto	u284_20
  6070  07E2                     u284_21:
  6071  07E2  2FFB               	goto	i1l2657
  6072  07E3                     u284_20:
  6073  07E3                     i1l2653:
  6074  07E3  3023               	movlw	35
  6075  07E4  0272               	subwf	DIO_U8ReadPinValue@pin_num,w
  6076  07E5  1803               	skipnc
  6077  07E6  2FE8               	goto	u285_21
  6078  07E7  2FE9               	goto	u285_20
  6079  07E8                     u285_21:
  6080  07E8  2FFB               	goto	i1l2657
  6081  07E9                     u285_20:
  6082  07E9                     i1l2655:
  6083                           
  6084                           ;DIO.c: 180:         pin = (((*((uint8*)(0x09)) >> pin_num % 8) & (1)));
  6085  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  6086  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  6087  07EB  0809               	movf	9,w
  6088  07EC  00F0               	movwf	??_DIO_U8ReadPinValue
  6089  07ED  0872               	movf	DIO_U8ReadPinValue@pin_num,w
  6090  07EE  3907               	andlw	7
  6091  07EF  3E01               	addlw	1
  6092  07F0  2FF3               	goto	u286_24
  6093  07F1                     u286_25:
  6094  07F1  1003               	clrc
  6095  07F2  0CF0               	rrf	??_DIO_U8ReadPinValue,f
  6096  07F3                     u286_24:
  6097  07F3  3EFF               	addlw	-1
  6098  07F4  1D03               	skipz
  6099  07F5  2FF1               	goto	u286_25
  6100  07F6  0870               	movf	??_DIO_U8ReadPinValue,w
  6101  07F7  3901               	andlw	1
  6102  07F8  00FF               	movwf	btemp+1
  6103  07F9  087F               	movf	btemp+1,w
  6104  07FA  00F1               	movwf	DIO_U8ReadPinValue@pin
  6105  07FB                     i1l2657:
  6106                           
  6107                           ;DIO.c: 182:     return pin;
  6108  07FB  0871               	movf	DIO_U8ReadPinValue@pin,w
  6109  07FC                     i1l73:
  6110  07FC  0008               	return
  6111  07FD                     __end_of_DIO_U8ReadPinValue:
  6112                           
  6113                           	psect	text31
  6114  1602                     __ptext31:	
  6115 ;; *************** function ___llmod *****************
  6116 ;; Defined at:
  6117 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  divisor         4    0[COMMON] unsigned long 
  6120 ;;  dividend        4    4[COMMON] unsigned long 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  counter         1    9[COMMON] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  4    0[COMMON] unsigned long 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0, btemp+1
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6132 ;;      Params:         8       0       0       0       0
  6133 ;;      Locals:         1       0       0       0       0
  6134 ;;      Temps:          1       0       0       0       0
  6135 ;;      Totals:        10       0       0       0       0
  6136 ;;Total ram usage:       10 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_Sch_UpdateTick_Handler
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           
  6146                           ;psect for function ___llmod
  6147  1602                     ___llmod:
  6148  1602                     i1l3451:	
  6149                           ;incstack = 0
  6150                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  6151                           
  6152  1602  0873               	movf	___llmod@divisor+3,w
  6153  1603  0472               	iorwf	___llmod@divisor+2,w
  6154  1604  0471               	iorwf	___llmod@divisor+1,w
  6155  1605  0470               	iorwf	___llmod@divisor,w
  6156  1606  1903               	skipnz
  6157  1607  2E09               	goto	u451_21
  6158  1608  2E0A               	goto	u451_20
  6159  1609                     u451_21:
  6160  1609  2E4D               	goto	i1l3469
  6161  160A                     u451_20:
  6162  160A                     i1l3453:
  6163  160A  01F9               	clrf	___llmod@counter
  6164  160B  0AF9               	incf	___llmod@counter,f
  6165  160C  2E1A               	goto	i1l3459
  6166  160D                     i1l3455:
  6167  160D  3001               	movlw	1
  6168  160E  00F8               	movwf	??___llmod
  6169  160F                     u452_25:
  6170  160F  1003               	clrc
  6171  1610  0DF0               	rlf	___llmod@divisor,f
  6172  1611  0DF1               	rlf	___llmod@divisor+1,f
  6173  1612  0DF2               	rlf	___llmod@divisor+2,f
  6174  1613  0DF3               	rlf	___llmod@divisor+3,f
  6175  1614  0BF8               	decfsz	??___llmod,f
  6176  1615  2E0F               	goto	u452_25
  6177  1616                     i1l3457:
  6178  1616  3001               	movlw	1
  6179  1617  00FF               	movwf	btemp+1
  6180  1618  087F               	movf	btemp+1,w
  6181  1619  07F9               	addwf	___llmod@counter,f
  6182  161A                     i1l3459:
  6183  161A  1FF3               	btfss	___llmod@divisor+3,7
  6184  161B  2E1D               	goto	u453_21
  6185  161C  2E1E               	goto	u453_20
  6186  161D                     u453_21:
  6187  161D  2E0D               	goto	i1l3455
  6188  161E                     u453_20:
  6189  161E                     i1l3461:
  6190  161E  0873               	movf	___llmod@divisor+3,w
  6191  161F  0277               	subwf	___llmod@dividend+3,w
  6192  1620  1D03               	skipz
  6193  1621  2E2C               	goto	u454_25
  6194  1622  0872               	movf	___llmod@divisor+2,w
  6195  1623  0276               	subwf	___llmod@dividend+2,w
  6196  1624  1D03               	skipz
  6197  1625  2E2C               	goto	u454_25
  6198  1626  0871               	movf	___llmod@divisor+1,w
  6199  1627  0275               	subwf	___llmod@dividend+1,w
  6200  1628  1D03               	skipz
  6201  1629  2E2C               	goto	u454_25
  6202  162A  0870               	movf	___llmod@divisor,w
  6203  162B  0274               	subwf	___llmod@dividend,w
  6204  162C                     u454_25:
  6205  162C  1C03               	skipc
  6206  162D  2E2F               	goto	u454_21
  6207  162E  2E30               	goto	u454_20
  6208  162F                     u454_21:
  6209  162F  2E3E               	goto	i1l3465
  6210  1630                     u454_20:
  6211  1630                     i1l3463:
  6212  1630  0870               	movf	___llmod@divisor,w
  6213  1631  02F4               	subwf	___llmod@dividend,f
  6214  1632  0871               	movf	___llmod@divisor+1,w
  6215  1633  1C03               	skipc
  6216  1634  0F71               	incfsz	___llmod@divisor+1,w
  6217  1635  02F5               	subwf	___llmod@dividend+1,f
  6218  1636  0872               	movf	___llmod@divisor+2,w
  6219  1637  1C03               	skipc
  6220  1638  0F72               	incfsz	___llmod@divisor+2,w
  6221  1639  02F6               	subwf	___llmod@dividend+2,f
  6222  163A  0873               	movf	___llmod@divisor+3,w
  6223  163B  1C03               	skipc
  6224  163C  0F73               	incfsz	___llmod@divisor+3,w
  6225  163D  02F7               	subwf	___llmod@dividend+3,f
  6226  163E                     i1l3465:
  6227  163E  3001               	movlw	1
  6228  163F                     u455_25:
  6229  163F  1003               	clrc
  6230  1640  0CF3               	rrf	___llmod@divisor+3,f
  6231  1641  0CF2               	rrf	___llmod@divisor+2,f
  6232  1642  0CF1               	rrf	___llmod@divisor+1,f
  6233  1643  0CF0               	rrf	___llmod@divisor,f
  6234  1644  3EFF               	addlw	-1
  6235  1645  1D03               	skipz
  6236  1646  2E3F               	goto	u455_25
  6237  1647                     i1l3467:
  6238  1647  3001               	movlw	1
  6239  1648  02F9               	subwf	___llmod@counter,f
  6240  1649  1D03               	btfss	3,2
  6241  164A  2E4C               	goto	u456_21
  6242  164B  2E4D               	goto	u456_20
  6243  164C                     u456_21:
  6244  164C  2E1E               	goto	i1l3461
  6245  164D                     u456_20:
  6246  164D                     i1l3469:
  6247  164D  0877               	movf	___llmod@dividend+3,w
  6248  164E  00F3               	movwf	?___llmod+3
  6249  164F  0876               	movf	___llmod@dividend+2,w
  6250  1650  00F2               	movwf	?___llmod+2
  6251  1651  0875               	movf	___llmod@dividend+1,w
  6252  1652  00F1               	movwf	?___llmod+1
  6253  1653  0874               	movf	___llmod@dividend,w
  6254  1654  00F0               	movwf	?___llmod
  6255  1655                     i1l721:
  6256  1655  0008               	return
  6257  1656                     __end_of___llmod:
  6258                           
  6259                           	psect	text32
  6260  1656                     __ptext32:	
  6261 ;; *************** function ___awmod *****************
  6262 ;; Defined at:
  6263 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  divisor         2    0[COMMON] int 
  6266 ;;  dividend        2    2[COMMON] int 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  sign            1    5[COMMON] unsigned char 
  6269 ;;  counter         1    4[COMMON] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  2    0[COMMON] int 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0, btemp+1
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6279 ;;      Params:         4       0       0       0       0
  6280 ;;      Locals:         2       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0
  6282 ;;      Totals:         6       0       0       0       0
  6283 ;;Total ram usage:        6 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_Sch_UpdateTick_Handler
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function ___awmod
  6294  1656                     ___awmod:
  6295  1656                     i1l3413:	
  6296                           ;incstack = 0
  6297                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  6298                           
  6299  1656  01F5               	clrf	___awmod@sign
  6300  1657                     i1l3415:
  6301  1657  1FF3               	btfss	___awmod@dividend+1,7
  6302  1658  2E5A               	goto	u442_21
  6303  1659  2E5B               	goto	u442_20
  6304  165A                     u442_21:
  6305  165A  2E62               	goto	i1l3421
  6306  165B                     u442_20:
  6307  165B                     i1l3417:
  6308  165B  09F2               	comf	___awmod@dividend,f
  6309  165C  09F3               	comf	___awmod@dividend+1,f
  6310  165D  0AF2               	incf	___awmod@dividend,f
  6311  165E  1903               	skipnz
  6312  165F  0AF3               	incf	___awmod@dividend+1,f
  6313  1660                     i1l3419:
  6314  1660  01F5               	clrf	___awmod@sign
  6315  1661  0AF5               	incf	___awmod@sign,f
  6316  1662                     i1l3421:
  6317  1662  1FF1               	btfss	___awmod@divisor+1,7
  6318  1663  2E65               	goto	u443_21
  6319  1664  2E66               	goto	u443_20
  6320  1665                     u443_21:
  6321  1665  2E6B               	goto	i1l3425
  6322  1666                     u443_20:
  6323  1666                     i1l3423:
  6324  1666  09F0               	comf	___awmod@divisor,f
  6325  1667  09F1               	comf	___awmod@divisor+1,f
  6326  1668  0AF0               	incf	___awmod@divisor,f
  6327  1669  1903               	skipnz
  6328  166A  0AF1               	incf	___awmod@divisor+1,f
  6329  166B                     i1l3425:
  6330  166B  0870               	movf	___awmod@divisor,w
  6331  166C  0471               	iorwf	___awmod@divisor+1,w
  6332  166D  1903               	btfsc	3,2
  6333  166E  2E70               	goto	u444_21
  6334  166F  2E71               	goto	u444_20
  6335  1670                     u444_21:
  6336  1670  2EA0               	goto	i1l3443
  6337  1671                     u444_20:
  6338  1671                     i1l3427:
  6339  1671  01F4               	clrf	___awmod@counter
  6340  1672  0AF4               	incf	___awmod@counter,f
  6341  1673  2E7F               	goto	i1l3433
  6342  1674                     i1l3429:
  6343  1674  3001               	movlw	1
  6344  1675                     u445_25:
  6345  1675  1003               	clrc
  6346  1676  0DF0               	rlf	___awmod@divisor,f
  6347  1677  0DF1               	rlf	___awmod@divisor+1,f
  6348  1678  3EFF               	addlw	-1
  6349  1679  1D03               	skipz
  6350  167A  2E75               	goto	u445_25
  6351  167B                     i1l3431:
  6352  167B  3001               	movlw	1
  6353  167C  00FF               	movwf	btemp+1
  6354  167D  087F               	movf	btemp+1,w
  6355  167E  07F4               	addwf	___awmod@counter,f
  6356  167F                     i1l3433:
  6357  167F  1FF1               	btfss	___awmod@divisor+1,7
  6358  1680  2E82               	goto	u446_21
  6359  1681  2E83               	goto	u446_20
  6360  1682                     u446_21:
  6361  1682  2E74               	goto	i1l3429
  6362  1683                     u446_20:
  6363  1683                     i1l3435:
  6364  1683  0871               	movf	___awmod@divisor+1,w
  6365  1684  0273               	subwf	___awmod@dividend+1,w
  6366  1685  1D03               	skipz
  6367  1686  2E89               	goto	u447_25
  6368  1687  0870               	movf	___awmod@divisor,w
  6369  1688  0272               	subwf	___awmod@dividend,w
  6370  1689                     u447_25:
  6371  1689  1C03               	skipc
  6372  168A  2E8C               	goto	u447_21
  6373  168B  2E8D               	goto	u447_20
  6374  168C                     u447_21:
  6375  168C  2E93               	goto	i1l3439
  6376  168D                     u447_20:
  6377  168D                     i1l3437:
  6378  168D  0870               	movf	___awmod@divisor,w
  6379  168E  02F2               	subwf	___awmod@dividend,f
  6380  168F  0871               	movf	___awmod@divisor+1,w
  6381  1690  1C03               	skipc
  6382  1691  03F3               	decf	___awmod@dividend+1,f
  6383  1692  02F3               	subwf	___awmod@dividend+1,f
  6384  1693                     i1l3439:
  6385  1693  3001               	movlw	1
  6386  1694                     u448_25:
  6387  1694  1003               	clrc
  6388  1695  0CF1               	rrf	___awmod@divisor+1,f
  6389  1696  0CF0               	rrf	___awmod@divisor,f
  6390  1697  3EFF               	addlw	-1
  6391  1698  1D03               	skipz
  6392  1699  2E94               	goto	u448_25
  6393  169A                     i1l3441:
  6394  169A  3001               	movlw	1
  6395  169B  02F4               	subwf	___awmod@counter,f
  6396  169C  1D03               	btfss	3,2
  6397  169D  2E9F               	goto	u449_21
  6398  169E  2EA0               	goto	u449_20
  6399  169F                     u449_21:
  6400  169F  2E83               	goto	i1l3435
  6401  16A0                     u449_20:
  6402  16A0                     i1l3443:
  6403  16A0  0875               	movf	___awmod@sign,w
  6404  16A1  1903               	btfsc	3,2
  6405  16A2  2EA4               	goto	u450_21
  6406  16A3  2EA5               	goto	u450_20
  6407  16A4                     u450_21:
  6408  16A4  2EAA               	goto	i1l3447
  6409  16A5                     u450_20:
  6410  16A5                     i1l3445:
  6411  16A5  09F2               	comf	___awmod@dividend,f
  6412  16A6  09F3               	comf	___awmod@dividend+1,f
  6413  16A7  0AF2               	incf	___awmod@dividend,f
  6414  16A8  1903               	skipnz
  6415  16A9  0AF3               	incf	___awmod@dividend+1,f
  6416  16AA                     i1l3447:
  6417  16AA  0873               	movf	___awmod@dividend+1,w
  6418  16AB  00F1               	movwf	?___awmod+1
  6419  16AC  0872               	movf	___awmod@dividend,w
  6420  16AD  00F0               	movwf	?___awmod
  6421  16AE                     i1l665:
  6422  16AE  0008               	return
  6423  16AF                     __end_of___awmod:
  6424                           
  6425                           	psect	text33
  6426  16AF                     __ptext33:	
  6427 ;; *************** function ___awdiv *****************
  6428 ;; Defined at:
  6429 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  divisor         2    0[COMMON] int 
  6432 ;;  dividend        2    2[COMMON] int 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  quotient        2    6[COMMON] int 
  6435 ;;  sign            1    5[COMMON] unsigned char 
  6436 ;;  counter         1    4[COMMON] unsigned char 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  2    0[COMMON] int 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0, btemp+1
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6446 ;;      Params:         4       0       0       0       0
  6447 ;;      Locals:         4       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0
  6449 ;;      Totals:         8       0       0       0       0
  6450 ;;Total ram usage:        8 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_Sch_UpdateTick_Handler
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function ___awdiv
  6461  16AF                     ___awdiv:
  6462  16AF                     i1l3369:	
  6463                           ;incstack = 0
  6464                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  6465                           
  6466  16AF  01F5               	clrf	___awdiv@sign
  6467  16B0                     i1l3371:
  6468  16B0  1FF1               	btfss	___awdiv@divisor+1,7
  6469  16B1  2EB3               	goto	u432_21
  6470  16B2  2EB4               	goto	u432_20
  6471  16B3                     u432_21:
  6472  16B3  2EBB               	goto	i1l3377
  6473  16B4                     u432_20:
  6474  16B4                     i1l3373:
  6475  16B4  09F0               	comf	___awdiv@divisor,f
  6476  16B5  09F1               	comf	___awdiv@divisor+1,f
  6477  16B6  0AF0               	incf	___awdiv@divisor,f
  6478  16B7  1903               	skipnz
  6479  16B8  0AF1               	incf	___awdiv@divisor+1,f
  6480  16B9                     i1l3375:
  6481  16B9  01F5               	clrf	___awdiv@sign
  6482  16BA  0AF5               	incf	___awdiv@sign,f
  6483  16BB                     i1l3377:
  6484  16BB  1FF3               	btfss	___awdiv@dividend+1,7
  6485  16BC  2EBE               	goto	u433_21
  6486  16BD  2EBF               	goto	u433_20
  6487  16BE                     u433_21:
  6488  16BE  2EC8               	goto	i1l3383
  6489  16BF                     u433_20:
  6490  16BF                     i1l3379:
  6491  16BF  09F2               	comf	___awdiv@dividend,f
  6492  16C0  09F3               	comf	___awdiv@dividend+1,f
  6493  16C1  0AF2               	incf	___awdiv@dividend,f
  6494  16C2  1903               	skipnz
  6495  16C3  0AF3               	incf	___awdiv@dividend+1,f
  6496  16C4                     i1l3381:
  6497  16C4  3001               	movlw	1
  6498  16C5  00FF               	movwf	btemp+1
  6499  16C6  087F               	movf	btemp+1,w
  6500  16C7  06F5               	xorwf	___awdiv@sign,f
  6501  16C8                     i1l3383:
  6502  16C8  01F6               	clrf	___awdiv@quotient
  6503  16C9  01F7               	clrf	___awdiv@quotient+1
  6504  16CA                     i1l3385:
  6505  16CA  0870               	movf	___awdiv@divisor,w
  6506  16CB  0471               	iorwf	___awdiv@divisor+1,w
  6507  16CC  1903               	btfsc	3,2
  6508  16CD  2ECF               	goto	u434_21
  6509  16CE  2ED0               	goto	u434_20
  6510  16CF                     u434_21:
  6511  16CF  2F07               	goto	i1l3405
  6512  16D0                     u434_20:
  6513  16D0                     i1l3387:
  6514  16D0  01F4               	clrf	___awdiv@counter
  6515  16D1  0AF4               	incf	___awdiv@counter,f
  6516  16D2  2EDE               	goto	i1l3393
  6517  16D3                     i1l3389:
  6518  16D3  3001               	movlw	1
  6519  16D4                     u435_25:
  6520  16D4  1003               	clrc
  6521  16D5  0DF0               	rlf	___awdiv@divisor,f
  6522  16D6  0DF1               	rlf	___awdiv@divisor+1,f
  6523  16D7  3EFF               	addlw	-1
  6524  16D8  1D03               	skipz
  6525  16D9  2ED4               	goto	u435_25
  6526  16DA                     i1l3391:
  6527  16DA  3001               	movlw	1
  6528  16DB  00FF               	movwf	btemp+1
  6529  16DC  087F               	movf	btemp+1,w
  6530  16DD  07F4               	addwf	___awdiv@counter,f
  6531  16DE                     i1l3393:
  6532  16DE  1FF1               	btfss	___awdiv@divisor+1,7
  6533  16DF  2EE1               	goto	u436_21
  6534  16E0  2EE2               	goto	u436_20
  6535  16E1                     u436_21:
  6536  16E1  2ED3               	goto	i1l3389
  6537  16E2                     u436_20:
  6538  16E2                     i1l3395:
  6539  16E2  3001               	movlw	1
  6540  16E3                     u437_25:
  6541  16E3  1003               	clrc
  6542  16E4  0DF6               	rlf	___awdiv@quotient,f
  6543  16E5  0DF7               	rlf	___awdiv@quotient+1,f
  6544  16E6  3EFF               	addlw	-1
  6545  16E7  1D03               	skipz
  6546  16E8  2EE3               	goto	u437_25
  6547  16E9  0871               	movf	___awdiv@divisor+1,w
  6548  16EA  0273               	subwf	___awdiv@dividend+1,w
  6549  16EB  1D03               	skipz
  6550  16EC  2EEF               	goto	u438_25
  6551  16ED  0870               	movf	___awdiv@divisor,w
  6552  16EE  0272               	subwf	___awdiv@dividend,w
  6553  16EF                     u438_25:
  6554  16EF  1C03               	skipc
  6555  16F0  2EF2               	goto	u438_21
  6556  16F1  2EF3               	goto	u438_20
  6557  16F2                     u438_21:
  6558  16F2  2EFA               	goto	i1l3401
  6559  16F3                     u438_20:
  6560  16F3                     i1l3397:
  6561  16F3  0870               	movf	___awdiv@divisor,w
  6562  16F4  02F2               	subwf	___awdiv@dividend,f
  6563  16F5  0871               	movf	___awdiv@divisor+1,w
  6564  16F6  1C03               	skipc
  6565  16F7  03F3               	decf	___awdiv@dividend+1,f
  6566  16F8  02F3               	subwf	___awdiv@dividend+1,f
  6567  16F9                     i1l3399:
  6568  16F9  1476               	bsf	___awdiv@quotient,0
  6569  16FA                     i1l3401:
  6570  16FA  3001               	movlw	1
  6571  16FB                     u439_25:
  6572  16FB  1003               	clrc
  6573  16FC  0CF1               	rrf	___awdiv@divisor+1,f
  6574  16FD  0CF0               	rrf	___awdiv@divisor,f
  6575  16FE  3EFF               	addlw	-1
  6576  16FF  1D03               	skipz
  6577  1700  2EFB               	goto	u439_25
  6578  1701                     i1l3403:
  6579  1701  3001               	movlw	1
  6580  1702  02F4               	subwf	___awdiv@counter,f
  6581  1703  1D03               	btfss	3,2
  6582  1704  2F06               	goto	u440_21
  6583  1705  2F07               	goto	u440_20
  6584  1706                     u440_21:
  6585  1706  2EE2               	goto	i1l3395
  6586  1707                     u440_20:
  6587  1707                     i1l3405:
  6588  1707  0875               	movf	___awdiv@sign,w
  6589  1708  1903               	btfsc	3,2
  6590  1709  2F0B               	goto	u441_21
  6591  170A  2F0C               	goto	u441_20
  6592  170B                     u441_21:
  6593  170B  2F11               	goto	i1l3409
  6594  170C                     u441_20:
  6595  170C                     i1l3407:
  6596  170C  09F6               	comf	___awdiv@quotient,f
  6597  170D  09F7               	comf	___awdiv@quotient+1,f
  6598  170E  0AF6               	incf	___awdiv@quotient,f
  6599  170F  1903               	skipnz
  6600  1710  0AF7               	incf	___awdiv@quotient+1,f
  6601  1711                     i1l3409:
  6602  1711  0877               	movf	___awdiv@quotient+1,w
  6603  1712  00F1               	movwf	?___awdiv+1
  6604  1713  0876               	movf	___awdiv@quotient,w
  6605  1714  00F0               	movwf	?___awdiv
  6606  1715                     i1l652:
  6607  1715  0008               	return
  6608  1716                     __end_of___awdiv:
  6609                           
  6610                           	psect	text34
  6611  15BD                     __ptext34:	
  6612 ;; *************** function _UPDATE_TEMP *****************
  6613 ;; Defined at:
  6614 ;;		line 17 in file "TEMP.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;		None
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  val             2   36[BANK0 ] unsigned short 
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  1    wreg      void 
  6621 ;; Registers used:
  6622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6628 ;;      Params:         0       0       0       0       0
  6629 ;;      Locals:         0       2       0       0       0
  6630 ;;      Temps:          0       0       0       0       0
  6631 ;;      Totals:         0       2       0       0       0
  6632 ;;Total ram usage:        2 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:    2
  6635 ;; This function calls:
  6636 ;;		_ADC_Read
  6637 ;;		___flmul
  6638 ;;		___fltol
  6639 ;;		___xxtofl
  6640 ;; This function is called by:
  6641 ;;		_Sch_UpdateTick_Handler
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           
  6646                           ;psect for function _UPDATE_TEMP
  6647  15BD                     _UPDATE_TEMP:
  6648  15BD                     i1l3255:	
  6649                           ;incstack = 0
  6650 ;; hardware stack exceeded
  6651                           ; Regs used in _UPDATE_TEMP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6652                           
  6653  15BD                     i1l3257:
  6654                           
  6655                           ;TEMP.c: 19:     val=ADC_Read(2);
  6656  15BD  3002               	movlw	2
  6657  15BE  120A  158A  231B  160A  118A  	fcall	_ADC_Read
  6658  15C3  0871               	movf	?_ADC_Read+1,w
  6659  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  6660  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  6661  15C6  00C5               	movwf	UPDATE_TEMP@val+1
  6662  15C7  0870               	movf	?_ADC_Read,w
  6663  15C8  00C4               	movwf	UPDATE_TEMP@val
  6664  15C9                     i1l3259:
  6665                           
  6666                           ;TEMP.c: 20:     temp=(uint8)(val*(500.0/1024.0));
  6667  15C9  0844               	movf	UPDATE_TEMP@val,w
  6668  15CA  00F0               	movwf	___xxtofl@val
  6669  15CB  0845               	movf	UPDATE_TEMP@val+1,w
  6670  15CC  00F1               	movwf	___xxtofl@val+1
  6671  15CD  01F2               	clrf	___xxtofl@val+2
  6672  15CE  01F3               	clrf	___xxtofl@val+3
  6673  15CF  3000               	movlw	0
  6674  15D0  120A  158A  209D  160A  118A  	fcall	___xxtofl
  6675  15D5  0873               	movf	?___xxtofl+3,w
  6676  15D6  1283               	bcf	3,5	;RP0=0, select bank0
  6677  15D7  1303               	bcf	3,6	;RP1=0, select bank0
  6678  15D8  00A7               	movwf	___flmul@a+3
  6679  15D9  0872               	movf	?___xxtofl+2,w
  6680  15DA  00A6               	movwf	___flmul@a+2
  6681  15DB  0871               	movf	?___xxtofl+1,w
  6682  15DC  00A5               	movwf	___flmul@a+1
  6683  15DD  0870               	movf	?___xxtofl,w
  6684  15DE  00A4               	movwf	___flmul@a
  6685  15DF  303E               	movlw	62
  6686  15E0  00A3               	movwf	___flmul@b+3
  6687  15E1  30FA               	movlw	250
  6688  15E2  00A2               	movwf	___flmul@b+2
  6689  15E3  3000               	movlw	0
  6690  15E4  00A1               	movwf	___flmul@b+1
  6691  15E5  3000               	movlw	0
  6692  15E6  00A0               	movwf	___flmul@b
  6693  15E7  120A  118A  2034  160A  118A  	fcall	___flmul
  6694  15EC  1283               	bcf	3,5	;RP0=0, select bank0
  6695  15ED  1303               	bcf	3,6	;RP1=0, select bank0
  6696  15EE  0823               	movf	?___flmul+3,w
  6697  15EF  00BD               	movwf	___fltol@f1+3
  6698  15F0  0822               	movf	?___flmul+2,w
  6699  15F1  00BC               	movwf	___fltol@f1+2
  6700  15F2  0821               	movf	?___flmul+1,w
  6701  15F3  00BB               	movwf	___fltol@f1+1
  6702  15F4  0820               	movf	?___flmul,w
  6703  15F5  00BA               	movwf	___fltol@f1
  6704  15F6  160A  118A  2784  160A  118A  	fcall	___fltol
  6705  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  6706  15FC  1303               	bcf	3,6	;RP1=0, select bank0
  6707  15FD  083A               	movf	?___fltol,w
  6708  15FE  00FF               	movwf	btemp+1
  6709  15FF  087F               	movf	btemp+1,w
  6710  1600  00E1               	movwf	_temp
  6711  1601                     i1l215:
  6712  1601  0008               	return
  6713  1602                     __end_of_UPDATE_TEMP:
  6714                           
  6715                           	psect	text35
  6716  089D                     __ptext35:	
  6717 ;; *************** function ___xxtofl *****************
  6718 ;; Defined at:
  6719 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  sign            1    wreg     unsigned char 
  6722 ;;  val             4    0[COMMON] long 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  sign            1    8[COMMON] unsigned char 
  6725 ;;  arg             4   10[COMMON] unsigned long 
  6726 ;;  exp             1    9[COMMON] unsigned char 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  4    0[COMMON] unsigned char 
  6729 ;; Registers used:
  6730 ;;		wreg, status,2, status,0, btemp+1
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6736 ;;      Params:         4       0       0       0       0
  6737 ;;      Locals:         6       0       0       0       0
  6738 ;;      Temps:          4       0       0       0       0
  6739 ;;      Totals:        14       0       0       0       0
  6740 ;;Total ram usage:       14 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_UPDATE_TEMP
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           
  6750                           ;psect for function ___xxtofl
  6751  089D                     ___xxtofl:
  6752                           
  6753                           ;incstack = 0
  6754                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6755                           ;___xxtofl@sign stored from wreg
  6756  089D  00F8               	movwf	___xxtofl@sign
  6757  089E                     i1l2935:
  6758  089E  0878               	movf	___xxtofl@sign,w
  6759  089F  1903               	btfsc	3,2
  6760  08A0  28A2               	goto	u341_21
  6761  08A1  28A3               	goto	u341_20
  6762  08A2                     u341_21:
  6763  08A2  28B7               	goto	i1l2941
  6764  08A3                     u341_20:
  6765  08A3                     i1l2937:
  6766  08A3  1FF3               	btfss	___xxtofl@val+3,7
  6767  08A4  28A6               	goto	u342_21
  6768  08A5  28A7               	goto	u342_20
  6769  08A6                     u342_21:
  6770  08A6  28B7               	goto	i1l2941
  6771  08A7                     u342_20:
  6772  08A7                     i1l2939:
  6773  08A7  0970               	comf	___xxtofl@val,w
  6774  08A8  00FA               	movwf	___xxtofl@arg
  6775  08A9  0971               	comf	___xxtofl@val+1,w
  6776  08AA  00FB               	movwf	___xxtofl@arg+1
  6777  08AB  0972               	comf	___xxtofl@val+2,w
  6778  08AC  00FC               	movwf	___xxtofl@arg+2
  6779  08AD  0973               	comf	___xxtofl@val+3,w
  6780  08AE  00FD               	movwf	___xxtofl@arg+3
  6781  08AF  0AFA               	incf	___xxtofl@arg,f
  6782  08B0  1903               	skipnz
  6783  08B1  0AFB               	incf	___xxtofl@arg+1,f
  6784  08B2  1903               	skipnz
  6785  08B3  0AFC               	incf	___xxtofl@arg+2,f
  6786  08B4  1903               	skipnz
  6787  08B5  0AFD               	incf	___xxtofl@arg+3,f
  6788  08B6  28BF               	goto	i1l932
  6789  08B7                     i1l2941:
  6790  08B7  0873               	movf	___xxtofl@val+3,w
  6791  08B8  00FD               	movwf	___xxtofl@arg+3
  6792  08B9  0872               	movf	___xxtofl@val+2,w
  6793  08BA  00FC               	movwf	___xxtofl@arg+2
  6794  08BB  0871               	movf	___xxtofl@val+1,w
  6795  08BC  00FB               	movwf	___xxtofl@arg+1
  6796  08BD  0870               	movf	___xxtofl@val,w
  6797  08BE  00FA               	movwf	___xxtofl@arg
  6798  08BF                     i1l932:
  6799  08BF  0873               	movf	___xxtofl@val+3,w
  6800  08C0  0472               	iorwf	___xxtofl@val+2,w
  6801  08C1  0471               	iorwf	___xxtofl@val+1,w
  6802  08C2  0470               	iorwf	___xxtofl@val,w
  6803  08C3  1D03               	skipz
  6804  08C4  28C6               	goto	u343_21
  6805  08C5  28C7               	goto	u343_20
  6806  08C6                     u343_21:
  6807  08C6  28D0               	goto	i1l2947
  6808  08C7                     u343_20:
  6809  08C7                     i1l2943:
  6810  08C7  3000               	movlw	0
  6811  08C8  00F3               	movwf	?___xxtofl+3
  6812  08C9  3000               	movlw	0
  6813  08CA  00F2               	movwf	?___xxtofl+2
  6814  08CB  3000               	movlw	0
  6815  08CC  00F1               	movwf	?___xxtofl+1
  6816  08CD  3000               	movlw	0
  6817  08CE  00F0               	movwf	?___xxtofl
  6818  08CF  2956               	goto	i1l934
  6819  08D0                     i1l2947:
  6820  08D0  3096               	movlw	150
  6821  08D1  00FF               	movwf	btemp+1
  6822  08D2  087F               	movf	btemp+1,w
  6823  08D3  00F9               	movwf	___xxtofl@exp
  6824  08D4  28E2               	goto	i1l2953
  6825  08D5                     i1l2949:
  6826  08D5  3001               	movlw	1
  6827  08D6  00FF               	movwf	btemp+1
  6828  08D7  087F               	movf	btemp+1,w
  6829  08D8  07F9               	addwf	___xxtofl@exp,f
  6830  08D9                     i1l2951:
  6831  08D9  3001               	movlw	1
  6832  08DA                     u344_25:
  6833  08DA  1003               	clrc
  6834  08DB  0CFD               	rrf	___xxtofl@arg+3,f
  6835  08DC  0CFC               	rrf	___xxtofl@arg+2,f
  6836  08DD  0CFB               	rrf	___xxtofl@arg+1,f
  6837  08DE  0CFA               	rrf	___xxtofl@arg,f
  6838  08DF  3EFF               	addlw	-1
  6839  08E0  1D03               	skipz
  6840  08E1  28DA               	goto	u344_25
  6841  08E2                     i1l2953:
  6842  08E2  30FE               	movlw	254
  6843  08E3  057D               	andwf	___xxtofl@arg+3,w
  6844  08E4  1D03               	btfss	3,2
  6845  08E5  28E7               	goto	u345_21
  6846  08E6  28E8               	goto	u345_20
  6847  08E7                     u345_21:
  6848  08E7  28D5               	goto	i1l2949
  6849  08E8                     u345_20:
  6850  08E8  2904               	goto	i1l2961
  6851  08E9                     i1l2955:
  6852  08E9  3001               	movlw	1
  6853  08EA  00FF               	movwf	btemp+1
  6854  08EB  087F               	movf	btemp+1,w
  6855  08EC  07F9               	addwf	___xxtofl@exp,f
  6856  08ED                     i1l2957:
  6857  08ED  3001               	movlw	1
  6858  08EE  07FA               	addwf	___xxtofl@arg,f
  6859  08EF  3000               	movlw	0
  6860  08F0  1803               	skipnc
  6861  08F1  3001               	movlw	1
  6862  08F2  07FB               	addwf	___xxtofl@arg+1,f
  6863  08F3  3000               	movlw	0
  6864  08F4  1803               	skipnc
  6865  08F5  3001               	movlw	1
  6866  08F6  07FC               	addwf	___xxtofl@arg+2,f
  6867  08F7  3000               	movlw	0
  6868  08F8  1803               	skipnc
  6869  08F9  3001               	movlw	1
  6870  08FA  07FD               	addwf	___xxtofl@arg+3,f
  6871  08FB                     i1l2959:
  6872  08FB  3001               	movlw	1
  6873  08FC                     u346_25:
  6874  08FC  1003               	clrc
  6875  08FD  0CFD               	rrf	___xxtofl@arg+3,f
  6876  08FE  0CFC               	rrf	___xxtofl@arg+2,f
  6877  08FF  0CFB               	rrf	___xxtofl@arg+1,f
  6878  0900  0CFA               	rrf	___xxtofl@arg,f
  6879  0901  3EFF               	addlw	-1
  6880  0902  1D03               	skipz
  6881  0903  28FC               	goto	u346_25
  6882  0904                     i1l2961:
  6883  0904  30FF               	movlw	255
  6884  0905  057D               	andwf	___xxtofl@arg+3,w
  6885  0906  1D03               	btfss	3,2
  6886  0907  2909               	goto	u347_21
  6887  0908  290A               	goto	u347_20
  6888  0909                     u347_21:
  6889  0909  28E9               	goto	i1l2955
  6890  090A                     u347_20:
  6891  090A  2916               	goto	i1l2965
  6892  090B                     i1l2963:
  6893  090B  3001               	movlw	1
  6894  090C  02F9               	subwf	___xxtofl@exp,f
  6895  090D  3001               	movlw	1
  6896  090E  00F4               	movwf	??___xxtofl
  6897  090F                     u348_25:
  6898  090F  1003               	clrc
  6899  0910  0DFA               	rlf	___xxtofl@arg,f
  6900  0911  0DFB               	rlf	___xxtofl@arg+1,f
  6901  0912  0DFC               	rlf	___xxtofl@arg+2,f
  6902  0913  0DFD               	rlf	___xxtofl@arg+3,f
  6903  0914  0BF4               	decfsz	??___xxtofl,f
  6904  0915  290F               	goto	u348_25
  6905  0916                     i1l2965:
  6906  0916  1BFC               	btfsc	___xxtofl@arg+2,7
  6907  0917  2919               	goto	u349_21
  6908  0918  291A               	goto	u349_20
  6909  0919                     u349_21:
  6910  0919  2920               	goto	i1l945
  6911  091A                     u349_20:
  6912  091A                     i1l2967:
  6913  091A  3002               	movlw	2
  6914  091B  0279               	subwf	___xxtofl@exp,w
  6915  091C  1803               	skipnc
  6916  091D  291F               	goto	u350_21
  6917  091E  2920               	goto	u350_20
  6918  091F                     u350_21:
  6919  091F  290B               	goto	i1l2963
  6920  0920                     u350_20:
  6921  0920                     i1l945:
  6922  0920  1879               	btfsc	___xxtofl@exp,0
  6923  0921  2923               	goto	u351_21
  6924  0922  2924               	goto	u351_20
  6925  0923                     u351_21:
  6926  0923  292C               	goto	i1l946
  6927  0924                     u351_20:
  6928  0924                     i1l2969:
  6929  0924  30FF               	movlw	255
  6930  0925  05FA               	andwf	___xxtofl@arg,f
  6931  0926  30FF               	movlw	255
  6932  0927  05FB               	andwf	___xxtofl@arg+1,f
  6933  0928  307F               	movlw	127
  6934  0929  05FC               	andwf	___xxtofl@arg+2,f
  6935  092A  30FF               	movlw	255
  6936  092B  05FD               	andwf	___xxtofl@arg+3,f
  6937  092C                     i1l946:
  6938  092C  1003               	clrc
  6939  092D  0CF9               	rrf	___xxtofl@exp,f
  6940  092E                     i1l2971:
  6941  092E  0879               	movf	___xxtofl@exp,w
  6942  092F  00F4               	movwf	??___xxtofl
  6943  0930  01F5               	clrf	??___xxtofl+1
  6944  0931  01F6               	clrf	??___xxtofl+2
  6945  0932  01F7               	clrf	??___xxtofl+3
  6946  0933  3018               	movlw	24
  6947  0934                     u352_25:
  6948  0934  1003               	clrc
  6949  0935  0DF4               	rlf	??___xxtofl,f
  6950  0936  0DF5               	rlf	??___xxtofl+1,f
  6951  0937  0DF6               	rlf	??___xxtofl+2,f
  6952  0938  0DF7               	rlf	??___xxtofl+3,f
  6953  0939                     u352_20:
  6954  0939  3EFF               	addlw	-1
  6955  093A  1D03               	skipz
  6956  093B  2934               	goto	u352_25
  6957  093C  0874               	movf	??___xxtofl,w
  6958  093D  04FA               	iorwf	___xxtofl@arg,f
  6959  093E  0875               	movf	??___xxtofl+1,w
  6960  093F  04FB               	iorwf	___xxtofl@arg+1,f
  6961  0940  0876               	movf	??___xxtofl+2,w
  6962  0941  04FC               	iorwf	___xxtofl@arg+2,f
  6963  0942  0877               	movf	??___xxtofl+3,w
  6964  0943  04FD               	iorwf	___xxtofl@arg+3,f
  6965  0944                     i1l2973:
  6966  0944  0878               	movf	___xxtofl@sign,w
  6967  0945  1903               	btfsc	3,2
  6968  0946  2948               	goto	u353_21
  6969  0947  2949               	goto	u353_20
  6970  0948                     u353_21:
  6971  0948  294E               	goto	i1l2979
  6972  0949                     u353_20:
  6973  0949                     i1l2975:
  6974  0949  1FF3               	btfss	___xxtofl@val+3,7
  6975  094A  294C               	goto	u354_21
  6976  094B  294D               	goto	u354_20
  6977  094C                     u354_21:
  6978  094C  294E               	goto	i1l2979
  6979  094D                     u354_20:
  6980  094D                     i1l2977:
  6981  094D  17FD               	bsf	___xxtofl@arg+3,7
  6982  094E                     i1l2979:
  6983  094E  087D               	movf	___xxtofl@arg+3,w
  6984  094F  00F3               	movwf	?___xxtofl+3
  6985  0950  087C               	movf	___xxtofl@arg+2,w
  6986  0951  00F2               	movwf	?___xxtofl+2
  6987  0952  087B               	movf	___xxtofl@arg+1,w
  6988  0953  00F1               	movwf	?___xxtofl+1
  6989  0954  087A               	movf	___xxtofl@arg,w
  6990  0955  00F0               	movwf	?___xxtofl
  6991  0956                     i1l934:
  6992  0956  0008               	return
  6993  0957                     __end_of___xxtofl:
  6994                           
  6995                           	psect	text36
  6996  1784                     __ptext36:	
  6997 ;; *************** function ___fltol *****************
  6998 ;; Defined at:
  6999 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  f1              4   26[BANK0 ] unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  exp1            1   35[BANK0 ] unsigned char 
  7004 ;;  sign1           1   34[BANK0 ] unsigned char 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  4   26[BANK0 ] long 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0, btemp+1
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7014 ;;      Params:         0       4       0       0       0
  7015 ;;      Locals:         0       2       0       0       0
  7016 ;;      Temps:          0       4       0       0       0
  7017 ;;      Totals:         0      10       0       0       0
  7018 ;;Total ram usage:       10 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_UPDATE_TEMP
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           
  7028                           ;psect for function ___fltol
  7029  1784                     ___fltol:
  7030  1784                     i1l2755:	
  7031                           ;incstack = 0
  7032                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7033                           
  7034  1784  1003               	clrc
  7035  1785  1283               	bcf	3,5	;RP0=0, select bank0
  7036  1786  1303               	bcf	3,6	;RP1=0, select bank0
  7037  1787  0D3C               	rlf	___fltol@f1+2,w
  7038  1788  0D3D               	rlf	___fltol@f1+3,w
  7039  1789  00FF               	movwf	btemp+1
  7040  178A  087F               	movf	btemp+1,w
  7041  178B  00C3               	movwf	___fltol@exp1
  7042  178C  0843               	movf	___fltol@exp1,w
  7043  178D  1D03               	btfss	3,2
  7044  178E  2F90               	goto	u294_21
  7045  178F  2F91               	goto	u294_20
  7046  1790                     u294_21:
  7047  1790  2F9A               	goto	i1l2761
  7048  1791                     u294_20:
  7049  1791                     i1l2757:
  7050  1791  3000               	movlw	0
  7051  1792  00BD               	movwf	?___fltol+3
  7052  1793  3000               	movlw	0
  7053  1794  00BC               	movwf	?___fltol+2
  7054  1795  3000               	movlw	0
  7055  1796  00BB               	movwf	?___fltol+1
  7056  1797  3000               	movlw	0
  7057  1798  00BA               	movwf	?___fltol
  7058  1799  2FFF               	goto	i1l685
  7059  179A                     i1l2761:
  7060  179A  083A               	movf	___fltol@f1,w
  7061  179B  00BE               	movwf	??___fltol
  7062  179C  083B               	movf	___fltol@f1+1,w
  7063  179D  00BF               	movwf	??___fltol+1
  7064  179E  083C               	movf	___fltol@f1+2,w
  7065  179F  00C0               	movwf	??___fltol+2
  7066  17A0  083D               	movf	___fltol@f1+3,w
  7067  17A1  00C1               	movwf	??___fltol+3
  7068  17A2  301F               	movlw	31
  7069  17A3                     u295_25:
  7070  17A3  1003               	clrc
  7071  17A4  0CC1               	rrf	??___fltol+3,f
  7072  17A5  0CC0               	rrf	??___fltol+2,f
  7073  17A6  0CBF               	rrf	??___fltol+1,f
  7074  17A7  0CBE               	rrf	??___fltol,f
  7075  17A8                     u295_20:
  7076  17A8  3EFF               	addlw	-1
  7077  17A9  1D03               	skipz
  7078  17AA  2FA3               	goto	u295_25
  7079  17AB  083E               	movf	??___fltol,w
  7080  17AC  00FF               	movwf	btemp+1
  7081  17AD  087F               	movf	btemp+1,w
  7082  17AE  00C2               	movwf	___fltol@sign1
  7083  17AF                     i1l2763:
  7084  17AF  17BC               	bsf	___fltol@f1+2,7
  7085  17B0                     i1l2765:
  7086  17B0  30FF               	movlw	255
  7087  17B1  05BA               	andwf	___fltol@f1,f
  7088  17B2  30FF               	movlw	255
  7089  17B3  05BB               	andwf	___fltol@f1+1,f
  7090  17B4  30FF               	movlw	255
  7091  17B5  05BC               	andwf	___fltol@f1+2,f
  7092  17B6  3000               	movlw	0
  7093  17B7  05BD               	andwf	___fltol@f1+3,f
  7094  17B8                     i1l2767:
  7095  17B8  3096               	movlw	150
  7096  17B9  02C3               	subwf	___fltol@exp1,f
  7097  17BA                     i1l2769:
  7098  17BA  1FC3               	btfss	___fltol@exp1,7
  7099  17BB  2FBD               	goto	u296_21
  7100  17BC  2FBE               	goto	u296_20
  7101  17BD                     u296_21:
  7102  17BD  2FD8               	goto	i1l2781
  7103  17BE                     u296_20:
  7104  17BE                     i1l2771:
  7105  17BE  0843               	movf	___fltol@exp1,w
  7106  17BF  3A80               	xorlw	128
  7107  17C0  3E97               	addlw	151
  7108  17C1  1803               	skipnc
  7109  17C2  2FC4               	goto	u297_21
  7110  17C3  2FC5               	goto	u297_20
  7111  17C4                     u297_21:
  7112  17C4  2FC6               	goto	i1l2777
  7113  17C5                     u297_20:
  7114  17C5  2F91               	goto	i1l2757
  7115  17C6                     i1l2777:
  7116  17C6  3001               	movlw	1
  7117  17C7                     u298_25:
  7118  17C7  1003               	clrc
  7119  17C8  0CBD               	rrf	___fltol@f1+3,f
  7120  17C9  0CBC               	rrf	___fltol@f1+2,f
  7121  17CA  0CBB               	rrf	___fltol@f1+1,f
  7122  17CB  0CBA               	rrf	___fltol@f1,f
  7123  17CC  3EFF               	addlw	-1
  7124  17CD  1D03               	skipz
  7125  17CE  2FC7               	goto	u298_25
  7126  17CF                     i1l2779:
  7127  17CF  3001               	movlw	1
  7128  17D0  00FF               	movwf	btemp+1
  7129  17D1  087F               	movf	btemp+1,w
  7130  17D2  07C3               	addwf	___fltol@exp1,f
  7131  17D3  1D03               	btfss	3,2
  7132  17D4  2FD6               	goto	u299_21
  7133  17D5  2FD7               	goto	u299_20
  7134  17D6                     u299_21:
  7135  17D6  2FC6               	goto	i1l2777
  7136  17D7                     u299_20:
  7137  17D7  2FEF               	goto	i1l2789
  7138  17D8                     i1l2781:
  7139  17D8  3020               	movlw	32
  7140  17D9  0243               	subwf	___fltol@exp1,w
  7141  17DA  1C03               	skipc
  7142  17DB  2FDD               	goto	u300_21
  7143  17DC  2FDE               	goto	u300_20
  7144  17DD                     u300_21:
  7145  17DD  2FEA               	goto	i1l692
  7146  17DE                     u300_20:
  7147  17DE  2F91               	goto	i1l2757
  7148  17DF                     i1l2787:
  7149  17DF  3001               	movlw	1
  7150  17E0  00BE               	movwf	??___fltol
  7151  17E1                     u301_25:
  7152  17E1  1003               	clrc
  7153  17E2  0DBA               	rlf	___fltol@f1,f
  7154  17E3  0DBB               	rlf	___fltol@f1+1,f
  7155  17E4  0DBC               	rlf	___fltol@f1+2,f
  7156  17E5  0DBD               	rlf	___fltol@f1+3,f
  7157  17E6  0BBE               	decfsz	??___fltol,f
  7158  17E7  2FE1               	goto	u301_25
  7159  17E8  3001               	movlw	1
  7160  17E9  02C3               	subwf	___fltol@exp1,f
  7161  17EA                     i1l692:
  7162  17EA  0843               	movf	___fltol@exp1,w
  7163  17EB  1D03               	btfss	3,2
  7164  17EC  2FEE               	goto	u302_21
  7165  17ED  2FEF               	goto	u302_20
  7166  17EE                     u302_21:
  7167  17EE  2FDF               	goto	i1l2787
  7168  17EF                     u302_20:
  7169  17EF                     i1l2789:
  7170  17EF  0842               	movf	___fltol@sign1,w
  7171  17F0  1903               	btfsc	3,2
  7172  17F1  2FF3               	goto	u303_21
  7173  17F2  2FF4               	goto	u303_20
  7174  17F3                     u303_21:
  7175  17F3  2FFF               	goto	i1l695
  7176  17F4                     u303_20:
  7177  17F4                     i1l2791:
  7178  17F4  09BA               	comf	___fltol@f1,f
  7179  17F5  09BB               	comf	___fltol@f1+1,f
  7180  17F6  09BC               	comf	___fltol@f1+2,f
  7181  17F7  09BD               	comf	___fltol@f1+3,f
  7182  17F8  0ABA               	incf	___fltol@f1,f
  7183  17F9  1903               	skipnz
  7184  17FA  0ABB               	incf	___fltol@f1+1,f
  7185  17FB  1903               	skipnz
  7186  17FC  0ABC               	incf	___fltol@f1+2,f
  7187  17FD  1903               	skipnz
  7188  17FE  0ABD               	incf	___fltol@f1+3,f
  7189  17FF                     i1l695:
  7190  17FF                     i1l685:
  7191  17FF  0008               	return
  7192  1800                     __end_of___fltol:
  7193                           
  7194                           	psect	text37
  7195  0034                     __ptext37:	
  7196 ;; *************** function ___flmul *****************
  7197 ;; Defined at:
  7198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  b               4    0[BANK0 ] long 
  7201 ;;  a               4    4[BANK0 ] long 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  prod            4   20[BANK0 ] struct .
  7204 ;;  grs             4   14[BANK0 ] unsigned long 
  7205 ;;  temp            2   24[BANK0 ] struct .
  7206 ;;  bexp            1   19[BANK0 ] unsigned char 
  7207 ;;  aexp            1   18[BANK0 ] unsigned char 
  7208 ;;  sign            1   13[BANK0 ] unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  4    0[BANK0 ] unsigned char 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7218 ;;      Params:         0       8       0       0       0
  7219 ;;      Locals:         0      13       0       0       0
  7220 ;;      Temps:          0       5       0       0       0
  7221 ;;      Totals:         0      26       0       0       0
  7222 ;;Total ram usage:       26 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    1
  7225 ;; This function calls:
  7226 ;;		__Umul8_16
  7227 ;; This function is called by:
  7228 ;;		_UPDATE_TEMP
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           
  7233                           ;psect for function ___flmul
  7234  0034                     ___flmul:
  7235  0034                     i1l2793:	
  7236                           ;incstack = 0
  7237 ;; hardware stack exceeded
  7238                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7239                           
  7240  0034  1283               	bcf	3,5	;RP0=0, select bank0
  7241  0035  1303               	bcf	3,6	;RP1=0, select bank0
  7242  0036  0823               	movf	___flmul@b+3,w
  7243  0037  3980               	andlw	128
  7244  0038  00FF               	movwf	btemp+1
  7245  0039  087F               	movf	btemp+1,w
  7246  003A  00AD               	movwf	___flmul@sign
  7247  003B                     i1l2795:
  7248  003B  0823               	movf	___flmul@b+3,w
  7249  003C  00A8               	movwf	??___flmul
  7250  003D  0728               	addwf	??___flmul,w
  7251  003E  00FF               	movwf	btemp+1
  7252  003F  087F               	movf	btemp+1,w
  7253  0040  00B3               	movwf	___flmul@bexp
  7254  0041                     i1l2797:
  7255  0041  1FA2               	btfss	___flmul@b+2,7
  7256  0042  2844               	goto	u304_21
  7257  0043  2845               	goto	u304_20
  7258  0044                     u304_21:
  7259  0044  2846               	goto	i1l2801
  7260  0045                     u304_20:
  7261  0045                     i1l2799:
  7262  0045  1433               	bsf	___flmul@bexp,0
  7263  0046                     i1l2801:
  7264  0046  0833               	movf	___flmul@bexp,w
  7265  0047  1903               	btfsc	3,2
  7266  0048  284A               	goto	u305_21
  7267  0049  284B               	goto	u305_20
  7268  004A                     u305_21:
  7269  004A  285A               	goto	i1l2809
  7270  004B                     u305_20:
  7271  004B                     i1l2803:
  7272  004B  0A33               	incf	___flmul@bexp,w
  7273  004C  1D03               	btfss	3,2
  7274  004D  284F               	goto	u306_21
  7275  004E  2850               	goto	u306_20
  7276  004F                     u306_21:
  7277  004F  2858               	goto	i1l2807
  7278  0050                     u306_20:
  7279  0050                     i1l2805:
  7280  0050  3000               	movlw	0
  7281  0051  00A3               	movwf	___flmul@b+3
  7282  0052  3000               	movlw	0
  7283  0053  00A2               	movwf	___flmul@b+2
  7284  0054  3000               	movlw	0
  7285  0055  00A1               	movwf	___flmul@b+1
  7286  0056  3000               	movlw	0
  7287  0057  00A0               	movwf	___flmul@b
  7288  0058                     i1l2807:
  7289  0058  17A2               	bsf	___flmul@b+2,7
  7290  0059  2862               	goto	i1l2811
  7291  005A                     i1l2809:
  7292  005A  3000               	movlw	0
  7293  005B  00A3               	movwf	___flmul@b+3
  7294  005C  3000               	movlw	0
  7295  005D  00A2               	movwf	___flmul@b+2
  7296  005E  3000               	movlw	0
  7297  005F  00A1               	movwf	___flmul@b+1
  7298  0060  3000               	movlw	0
  7299  0061  00A0               	movwf	___flmul@b
  7300  0062                     i1l2811:
  7301  0062  0827               	movf	___flmul@a+3,w
  7302  0063  3980               	andlw	128
  7303  0064  00FF               	movwf	btemp+1
  7304  0065  087F               	movf	btemp+1,w
  7305  0066  06AD               	xorwf	___flmul@sign,f
  7306  0067                     i1l2813:
  7307  0067  0827               	movf	___flmul@a+3,w
  7308  0068  00A8               	movwf	??___flmul
  7309  0069  0728               	addwf	??___flmul,w
  7310  006A  00FF               	movwf	btemp+1
  7311  006B  087F               	movf	btemp+1,w
  7312  006C  00B2               	movwf	___flmul@aexp
  7313  006D                     i1l2815:
  7314  006D  1FA6               	btfss	___flmul@a+2,7
  7315  006E  2870               	goto	u307_21
  7316  006F  2871               	goto	u307_20
  7317  0070                     u307_21:
  7318  0070  2872               	goto	i1l2819
  7319  0071                     u307_20:
  7320  0071                     i1l2817:
  7321  0071  1432               	bsf	___flmul@aexp,0
  7322  0072                     i1l2819:
  7323  0072  0832               	movf	___flmul@aexp,w
  7324  0073  1903               	btfsc	3,2
  7325  0074  2876               	goto	u308_21
  7326  0075  2877               	goto	u308_20
  7327  0076                     u308_21:
  7328  0076  2886               	goto	i1l2827
  7329  0077                     u308_20:
  7330  0077                     i1l2821:
  7331  0077  0A32               	incf	___flmul@aexp,w
  7332  0078  1D03               	btfss	3,2
  7333  0079  287B               	goto	u309_21
  7334  007A  287C               	goto	u309_20
  7335  007B                     u309_21:
  7336  007B  2884               	goto	i1l2825
  7337  007C                     u309_20:
  7338  007C                     i1l2823:
  7339  007C  3000               	movlw	0
  7340  007D  00A7               	movwf	___flmul@a+3
  7341  007E  3000               	movlw	0
  7342  007F  00A6               	movwf	___flmul@a+2
  7343  0080  3000               	movlw	0
  7344  0081  00A5               	movwf	___flmul@a+1
  7345  0082  3000               	movlw	0
  7346  0083  00A4               	movwf	___flmul@a
  7347  0084                     i1l2825:
  7348  0084  17A6               	bsf	___flmul@a+2,7
  7349  0085  288E               	goto	i1l2829
  7350  0086                     i1l2827:
  7351  0086  3000               	movlw	0
  7352  0087  00A7               	movwf	___flmul@a+3
  7353  0088  3000               	movlw	0
  7354  0089  00A6               	movwf	___flmul@a+2
  7355  008A  3000               	movlw	0
  7356  008B  00A5               	movwf	___flmul@a+1
  7357  008C  3000               	movlw	0
  7358  008D  00A4               	movwf	___flmul@a
  7359  008E                     i1l2829:
  7360  008E  0832               	movf	___flmul@aexp,w
  7361  008F  1903               	btfsc	3,2
  7362  0090  2892               	goto	u310_21
  7363  0091  2893               	goto	u310_20
  7364  0092                     u310_21:
  7365  0092  2898               	goto	i1l2833
  7366  0093                     u310_20:
  7367  0093                     i1l2831:
  7368  0093  0833               	movf	___flmul@bexp,w
  7369  0094  1D03               	btfss	3,2
  7370  0095  2897               	goto	u311_21
  7371  0096  2898               	goto	u311_20
  7372  0097                     u311_21:
  7373  0097  28A1               	goto	i1l2837
  7374  0098                     u311_20:
  7375  0098                     i1l2833:
  7376  0098  3000               	movlw	0
  7377  0099  00A3               	movwf	?___flmul+3
  7378  009A  3000               	movlw	0
  7379  009B  00A2               	movwf	?___flmul+2
  7380  009C  3000               	movlw	0
  7381  009D  00A1               	movwf	?___flmul+1
  7382  009E  3000               	movlw	0
  7383  009F  00A0               	movwf	?___flmul
  7384  00A0  2B94               	goto	i1l888
  7385  00A1                     i1l2837:
  7386  00A1  0820               	movf	___flmul@b,w
  7387  00A2  00FF               	movwf	btemp+1
  7388  00A3  087F               	movf	btemp+1,w
  7389  00A4  00F0               	movwf	__Umul8_16@multiplicand
  7390  00A5  0826               	movf	___flmul@a+2,w
  7391  00A6  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7392  00AB  0871               	movf	?__Umul8_16+1,w
  7393  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  7394  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  7395  00AE  00B9               	movwf	___flmul@temp+1
  7396  00AF  0870               	movf	?__Umul8_16,w
  7397  00B0  00B8               	movwf	___flmul@temp
  7398  00B1                     i1l2839:
  7399  00B1  0838               	movf	___flmul@temp,w
  7400  00B2  00A8               	movwf	??___flmul
  7401  00B3  01A9               	clrf	??___flmul+1
  7402  00B4  01AA               	clrf	??___flmul+2
  7403  00B5  01AB               	clrf	??___flmul+3
  7404  00B6  082B               	movf	??___flmul+3,w
  7405  00B7  00B1               	movwf	___flmul@grs+3
  7406  00B8  082A               	movf	??___flmul+2,w
  7407  00B9  00B0               	movwf	___flmul@grs+2
  7408  00BA  0829               	movf	??___flmul+1,w
  7409  00BB  00AF               	movwf	___flmul@grs+1
  7410  00BC  0828               	movf	??___flmul,w
  7411  00BD  00AE               	movwf	___flmul@grs
  7412  00BE                     i1l2841:
  7413  00BE  0839               	movf	___flmul@temp+1,w
  7414  00BF  00A8               	movwf	??___flmul
  7415  00C0  01A9               	clrf	??___flmul+1
  7416  00C1  01AA               	clrf	??___flmul+2
  7417  00C2  01AB               	clrf	??___flmul+3
  7418  00C3  082B               	movf	??___flmul+3,w
  7419  00C4  00B7               	movwf	___flmul@prod+3
  7420  00C5  082A               	movf	??___flmul+2,w
  7421  00C6  00B6               	movwf	___flmul@prod+2
  7422  00C7  0829               	movf	??___flmul+1,w
  7423  00C8  00B5               	movwf	___flmul@prod+1
  7424  00C9  0828               	movf	??___flmul,w
  7425  00CA  00B4               	movwf	___flmul@prod
  7426  00CB  0821               	movf	___flmul@b+1,w
  7427  00CC  00FF               	movwf	btemp+1
  7428  00CD  087F               	movf	btemp+1,w
  7429  00CE  00F0               	movwf	__Umul8_16@multiplicand
  7430  00CF  0825               	movf	___flmul@a+1,w
  7431  00D0  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7432  00D5  0871               	movf	?__Umul8_16+1,w
  7433  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  7434  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  7435  00D8  00B9               	movwf	___flmul@temp+1
  7436  00D9  0870               	movf	?__Umul8_16,w
  7437  00DA  00B8               	movwf	___flmul@temp
  7438  00DB                     i1l2843:
  7439  00DB  0838               	movf	___flmul@temp,w
  7440  00DC  00A8               	movwf	??___flmul
  7441  00DD  01A9               	clrf	??___flmul+1
  7442  00DE  01AA               	clrf	??___flmul+2
  7443  00DF  01AB               	clrf	??___flmul+3
  7444  00E0  0828               	movf	??___flmul,w
  7445  00E1  07AE               	addwf	___flmul@grs,f
  7446  00E2  0829               	movf	??___flmul+1,w
  7447  00E3  1103               	clrz
  7448  00E4  1803               	skipnc
  7449  00E5  3E01               	addlw	1
  7450  00E6  1903               	skipnz
  7451  00E7  28E9               	goto	u312_21
  7452  00E8  07AF               	addwf	___flmul@grs+1,f
  7453  00E9                     u312_21:
  7454  00E9  082A               	movf	??___flmul+2,w
  7455  00EA  1103               	clrz
  7456  00EB  1803               	skipnc
  7457  00EC  3E01               	addlw	1
  7458  00ED  1903               	skipnz
  7459  00EE  28F0               	goto	u312_22
  7460  00EF  07B0               	addwf	___flmul@grs+2,f
  7461  00F0                     u312_22:
  7462  00F0  082B               	movf	??___flmul+3,w
  7463  00F1  1103               	clrz
  7464  00F2  1803               	skipnc
  7465  00F3  3E01               	addlw	1
  7466  00F4  1903               	skipnz
  7467  00F5  28F7               	goto	u312_23
  7468  00F6  07B1               	addwf	___flmul@grs+3,f
  7469  00F7                     u312_23:
  7470  00F7                     i1l2845:
  7471  00F7  0839               	movf	___flmul@temp+1,w
  7472  00F8  00A8               	movwf	??___flmul
  7473  00F9  01A9               	clrf	??___flmul+1
  7474  00FA  01AA               	clrf	??___flmul+2
  7475  00FB  01AB               	clrf	??___flmul+3
  7476  00FC  0828               	movf	??___flmul,w
  7477  00FD  07B4               	addwf	___flmul@prod,f
  7478  00FE  0829               	movf	??___flmul+1,w
  7479  00FF  1103               	clrz
  7480  0100  1803               	skipnc
  7481  0101  3E01               	addlw	1
  7482  0102  1903               	skipnz
  7483  0103  2905               	goto	u313_21
  7484  0104  07B5               	addwf	___flmul@prod+1,f
  7485  0105                     u313_21:
  7486  0105  082A               	movf	??___flmul+2,w
  7487  0106  1103               	clrz
  7488  0107  1803               	skipnc
  7489  0108  3E01               	addlw	1
  7490  0109  1903               	skipnz
  7491  010A  290C               	goto	u313_22
  7492  010B  07B6               	addwf	___flmul@prod+2,f
  7493  010C                     u313_22:
  7494  010C  082B               	movf	??___flmul+3,w
  7495  010D  1103               	clrz
  7496  010E  1803               	skipnc
  7497  010F  3E01               	addlw	1
  7498  0110  1903               	skipnz
  7499  0111  2913               	goto	u313_23
  7500  0112  07B7               	addwf	___flmul@prod+3,f
  7501  0113                     u313_23:
  7502  0113  0822               	movf	___flmul@b+2,w
  7503  0114  00FF               	movwf	btemp+1
  7504  0115  087F               	movf	btemp+1,w
  7505  0116  00F0               	movwf	__Umul8_16@multiplicand
  7506  0117  0824               	movf	___flmul@a,w
  7507  0118  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7508  011D  0871               	movf	?__Umul8_16+1,w
  7509  011E  1283               	bcf	3,5	;RP0=0, select bank0
  7510  011F  1303               	bcf	3,6	;RP1=0, select bank0
  7511  0120  00B9               	movwf	___flmul@temp+1
  7512  0121  0870               	movf	?__Umul8_16,w
  7513  0122  00B8               	movwf	___flmul@temp
  7514  0123                     i1l2847:
  7515  0123  0838               	movf	___flmul@temp,w
  7516  0124  00A8               	movwf	??___flmul
  7517  0125  01A9               	clrf	??___flmul+1
  7518  0126  01AA               	clrf	??___flmul+2
  7519  0127  01AB               	clrf	??___flmul+3
  7520  0128  0828               	movf	??___flmul,w
  7521  0129  07AE               	addwf	___flmul@grs,f
  7522  012A  0829               	movf	??___flmul+1,w
  7523  012B  1103               	clrz
  7524  012C  1803               	skipnc
  7525  012D  3E01               	addlw	1
  7526  012E  1903               	skipnz
  7527  012F  2931               	goto	u314_21
  7528  0130  07AF               	addwf	___flmul@grs+1,f
  7529  0131                     u314_21:
  7530  0131  082A               	movf	??___flmul+2,w
  7531  0132  1103               	clrz
  7532  0133  1803               	skipnc
  7533  0134  3E01               	addlw	1
  7534  0135  1903               	skipnz
  7535  0136  2938               	goto	u314_22
  7536  0137  07B0               	addwf	___flmul@grs+2,f
  7537  0138                     u314_22:
  7538  0138  082B               	movf	??___flmul+3,w
  7539  0139  1103               	clrz
  7540  013A  1803               	skipnc
  7541  013B  3E01               	addlw	1
  7542  013C  1903               	skipnz
  7543  013D  293F               	goto	u314_23
  7544  013E  07B1               	addwf	___flmul@grs+3,f
  7545  013F                     u314_23:
  7546  013F                     i1l2849:
  7547  013F  0839               	movf	___flmul@temp+1,w
  7548  0140  00A8               	movwf	??___flmul
  7549  0141  01A9               	clrf	??___flmul+1
  7550  0142  01AA               	clrf	??___flmul+2
  7551  0143  01AB               	clrf	??___flmul+3
  7552  0144  0828               	movf	??___flmul,w
  7553  0145  07B4               	addwf	___flmul@prod,f
  7554  0146  0829               	movf	??___flmul+1,w
  7555  0147  1103               	clrz
  7556  0148  1803               	skipnc
  7557  0149  3E01               	addlw	1
  7558  014A  1903               	skipnz
  7559  014B  294D               	goto	u315_21
  7560  014C  07B5               	addwf	___flmul@prod+1,f
  7561  014D                     u315_21:
  7562  014D  082A               	movf	??___flmul+2,w
  7563  014E  1103               	clrz
  7564  014F  1803               	skipnc
  7565  0150  3E01               	addlw	1
  7566  0151  1903               	skipnz
  7567  0152  2954               	goto	u315_22
  7568  0153  07B6               	addwf	___flmul@prod+2,f
  7569  0154                     u315_22:
  7570  0154  082B               	movf	??___flmul+3,w
  7571  0155  1103               	clrz
  7572  0156  1803               	skipnc
  7573  0157  3E01               	addlw	1
  7574  0158  1903               	skipnz
  7575  0159  295B               	goto	u315_23
  7576  015A  07B7               	addwf	___flmul@prod+3,f
  7577  015B                     u315_23:
  7578  015B                     i1l2851:
  7579  015B  3008               	movlw	8
  7580  015C  00A8               	movwf	??___flmul
  7581  015D                     u316_25:
  7582  015D  1003               	clrc
  7583  015E  0DAE               	rlf	___flmul@grs,f
  7584  015F  0DAF               	rlf	___flmul@grs+1,f
  7585  0160  0DB0               	rlf	___flmul@grs+2,f
  7586  0161  0DB1               	rlf	___flmul@grs+3,f
  7587  0162  0BA8               	decfsz	??___flmul,f
  7588  0163  295D               	goto	u316_25
  7589  0164                     i1l2853:
  7590  0164  0821               	movf	___flmul@b+1,w
  7591  0165  00FF               	movwf	btemp+1
  7592  0166  087F               	movf	btemp+1,w
  7593  0167  00F0               	movwf	__Umul8_16@multiplicand
  7594  0168  0824               	movf	___flmul@a,w
  7595  0169  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7596  016E  0871               	movf	?__Umul8_16+1,w
  7597  016F  1283               	bcf	3,5	;RP0=0, select bank0
  7598  0170  1303               	bcf	3,6	;RP1=0, select bank0
  7599  0171  00B9               	movwf	___flmul@temp+1
  7600  0172  0870               	movf	?__Umul8_16,w
  7601  0173  00B8               	movwf	___flmul@temp
  7602  0174                     i1l2855:
  7603  0174  0838               	movf	___flmul@temp,w
  7604  0175  00A8               	movwf	??___flmul
  7605  0176  0839               	movf	___flmul@temp+1,w
  7606  0177  00A9               	movwf	??___flmul+1
  7607  0178  01AA               	clrf	??___flmul+2
  7608  0179  01AB               	clrf	??___flmul+3
  7609  017A  0828               	movf	??___flmul,w
  7610  017B  07AE               	addwf	___flmul@grs,f
  7611  017C  0829               	movf	??___flmul+1,w
  7612  017D  1103               	clrz
  7613  017E  1803               	skipnc
  7614  017F  3E01               	addlw	1
  7615  0180  1903               	skipnz
  7616  0181  2983               	goto	u317_21
  7617  0182  07AF               	addwf	___flmul@grs+1,f
  7618  0183                     u317_21:
  7619  0183  082A               	movf	??___flmul+2,w
  7620  0184  1103               	clrz
  7621  0185  1803               	skipnc
  7622  0186  3E01               	addlw	1
  7623  0187  1903               	skipnz
  7624  0188  298A               	goto	u317_22
  7625  0189  07B0               	addwf	___flmul@grs+2,f
  7626  018A                     u317_22:
  7627  018A  082B               	movf	??___flmul+3,w
  7628  018B  1103               	clrz
  7629  018C  1803               	skipnc
  7630  018D  3E01               	addlw	1
  7631  018E  1903               	skipnz
  7632  018F  2991               	goto	u317_23
  7633  0190  07B1               	addwf	___flmul@grs+3,f
  7634  0191                     u317_23:
  7635  0191                     i1l2857:
  7636  0191  0820               	movf	___flmul@b,w
  7637  0192  00FF               	movwf	btemp+1
  7638  0193  087F               	movf	btemp+1,w
  7639  0194  00F0               	movwf	__Umul8_16@multiplicand
  7640  0195  0825               	movf	___flmul@a+1,w
  7641  0196  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7642  019B  0871               	movf	?__Umul8_16+1,w
  7643  019C  1283               	bcf	3,5	;RP0=0, select bank0
  7644  019D  1303               	bcf	3,6	;RP1=0, select bank0
  7645  019E  00B9               	movwf	___flmul@temp+1
  7646  019F  0870               	movf	?__Umul8_16,w
  7647  01A0  00B8               	movwf	___flmul@temp
  7648  01A1                     i1l2859:
  7649  01A1  0838               	movf	___flmul@temp,w
  7650  01A2  00A8               	movwf	??___flmul
  7651  01A3  0839               	movf	___flmul@temp+1,w
  7652  01A4  00A9               	movwf	??___flmul+1
  7653  01A5  01AA               	clrf	??___flmul+2
  7654  01A6  01AB               	clrf	??___flmul+3
  7655  01A7  0828               	movf	??___flmul,w
  7656  01A8  07AE               	addwf	___flmul@grs,f
  7657  01A9  0829               	movf	??___flmul+1,w
  7658  01AA  1103               	clrz
  7659  01AB  1803               	skipnc
  7660  01AC  3E01               	addlw	1
  7661  01AD  1903               	skipnz
  7662  01AE  29B0               	goto	u318_21
  7663  01AF  07AF               	addwf	___flmul@grs+1,f
  7664  01B0                     u318_21:
  7665  01B0  082A               	movf	??___flmul+2,w
  7666  01B1  1103               	clrz
  7667  01B2  1803               	skipnc
  7668  01B3  3E01               	addlw	1
  7669  01B4  1903               	skipnz
  7670  01B5  29B7               	goto	u318_22
  7671  01B6  07B0               	addwf	___flmul@grs+2,f
  7672  01B7                     u318_22:
  7673  01B7  082B               	movf	??___flmul+3,w
  7674  01B8  1103               	clrz
  7675  01B9  1803               	skipnc
  7676  01BA  3E01               	addlw	1
  7677  01BB  1903               	skipnz
  7678  01BC  29BE               	goto	u318_23
  7679  01BD  07B1               	addwf	___flmul@grs+3,f
  7680  01BE                     u318_23:
  7681  01BE                     i1l2861:
  7682  01BE  3008               	movlw	8
  7683  01BF  00A8               	movwf	??___flmul
  7684  01C0                     u319_25:
  7685  01C0  1003               	clrc
  7686  01C1  0DAE               	rlf	___flmul@grs,f
  7687  01C2  0DAF               	rlf	___flmul@grs+1,f
  7688  01C3  0DB0               	rlf	___flmul@grs+2,f
  7689  01C4  0DB1               	rlf	___flmul@grs+3,f
  7690  01C5  0BA8               	decfsz	??___flmul,f
  7691  01C6  29C0               	goto	u319_25
  7692  01C7  0820               	movf	___flmul@b,w
  7693  01C8  00FF               	movwf	btemp+1
  7694  01C9  087F               	movf	btemp+1,w
  7695  01CA  00F0               	movwf	__Umul8_16@multiplicand
  7696  01CB  0824               	movf	___flmul@a,w
  7697  01CC  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7698  01D1  0871               	movf	?__Umul8_16+1,w
  7699  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  7700  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  7701  01D4  00B9               	movwf	___flmul@temp+1
  7702  01D5  0870               	movf	?__Umul8_16,w
  7703  01D6  00B8               	movwf	___flmul@temp
  7704  01D7                     i1l2863:
  7705  01D7  0838               	movf	___flmul@temp,w
  7706  01D8  00A8               	movwf	??___flmul
  7707  01D9  0839               	movf	___flmul@temp+1,w
  7708  01DA  00A9               	movwf	??___flmul+1
  7709  01DB  01AA               	clrf	??___flmul+2
  7710  01DC  01AB               	clrf	??___flmul+3
  7711  01DD  0828               	movf	??___flmul,w
  7712  01DE  07AE               	addwf	___flmul@grs,f
  7713  01DF  0829               	movf	??___flmul+1,w
  7714  01E0  1103               	clrz
  7715  01E1  1803               	skipnc
  7716  01E2  3E01               	addlw	1
  7717  01E3  1903               	skipnz
  7718  01E4  29E6               	goto	u320_21
  7719  01E5  07AF               	addwf	___flmul@grs+1,f
  7720  01E6                     u320_21:
  7721  01E6  082A               	movf	??___flmul+2,w
  7722  01E7  1103               	clrz
  7723  01E8  1803               	skipnc
  7724  01E9  3E01               	addlw	1
  7725  01EA  1903               	skipnz
  7726  01EB  29ED               	goto	u320_22
  7727  01EC  07B0               	addwf	___flmul@grs+2,f
  7728  01ED                     u320_22:
  7729  01ED  082B               	movf	??___flmul+3,w
  7730  01EE  1103               	clrz
  7731  01EF  1803               	skipnc
  7732  01F0  3E01               	addlw	1
  7733  01F1  1903               	skipnz
  7734  01F2  29F4               	goto	u320_23
  7735  01F3  07B1               	addwf	___flmul@grs+3,f
  7736  01F4                     u320_23:
  7737  01F4                     i1l2865:
  7738  01F4  0821               	movf	___flmul@b+1,w
  7739  01F5  00FF               	movwf	btemp+1
  7740  01F6  087F               	movf	btemp+1,w
  7741  01F7  00F0               	movwf	__Umul8_16@multiplicand
  7742  01F8  0826               	movf	___flmul@a+2,w
  7743  01F9  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7744  01FE  0871               	movf	?__Umul8_16+1,w
  7745  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  7746  0200  1303               	bcf	3,6	;RP1=0, select bank0
  7747  0201  00B9               	movwf	___flmul@temp+1
  7748  0202  0870               	movf	?__Umul8_16,w
  7749  0203  00B8               	movwf	___flmul@temp
  7750  0204  0838               	movf	___flmul@temp,w
  7751  0205  00A8               	movwf	??___flmul
  7752  0206  0839               	movf	___flmul@temp+1,w
  7753  0207  00A9               	movwf	??___flmul+1
  7754  0208  01AA               	clrf	??___flmul+2
  7755  0209  01AB               	clrf	??___flmul+3
  7756  020A  0828               	movf	??___flmul,w
  7757  020B  07B4               	addwf	___flmul@prod,f
  7758  020C  0829               	movf	??___flmul+1,w
  7759  020D  1103               	clrz
  7760  020E  1803               	skipnc
  7761  020F  3E01               	addlw	1
  7762  0210  1903               	skipnz
  7763  0211  2A13               	goto	u321_21
  7764  0212  07B5               	addwf	___flmul@prod+1,f
  7765  0213                     u321_21:
  7766  0213  082A               	movf	??___flmul+2,w
  7767  0214  1103               	clrz
  7768  0215  1803               	skipnc
  7769  0216  3E01               	addlw	1
  7770  0217  1903               	skipnz
  7771  0218  2A1A               	goto	u321_22
  7772  0219  07B6               	addwf	___flmul@prod+2,f
  7773  021A                     u321_22:
  7774  021A  082B               	movf	??___flmul+3,w
  7775  021B  1103               	clrz
  7776  021C  1803               	skipnc
  7777  021D  3E01               	addlw	1
  7778  021E  1903               	skipnz
  7779  021F  2A21               	goto	u321_23
  7780  0220  07B7               	addwf	___flmul@prod+3,f
  7781  0221                     u321_23:
  7782  0221                     i1l2867:
  7783  0221  0822               	movf	___flmul@b+2,w
  7784  0222  00FF               	movwf	btemp+1
  7785  0223  087F               	movf	btemp+1,w
  7786  0224  00F0               	movwf	__Umul8_16@multiplicand
  7787  0225  0825               	movf	___flmul@a+1,w
  7788  0226  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7789  022B  0871               	movf	?__Umul8_16+1,w
  7790  022C  1283               	bcf	3,5	;RP0=0, select bank0
  7791  022D  1303               	bcf	3,6	;RP1=0, select bank0
  7792  022E  00B9               	movwf	___flmul@temp+1
  7793  022F  0870               	movf	?__Umul8_16,w
  7794  0230  00B8               	movwf	___flmul@temp
  7795  0231                     i1l2869:
  7796  0231  0838               	movf	___flmul@temp,w
  7797  0232  00A8               	movwf	??___flmul
  7798  0233  0839               	movf	___flmul@temp+1,w
  7799  0234  00A9               	movwf	??___flmul+1
  7800  0235  01AA               	clrf	??___flmul+2
  7801  0236  01AB               	clrf	??___flmul+3
  7802  0237  0828               	movf	??___flmul,w
  7803  0238  07B4               	addwf	___flmul@prod,f
  7804  0239  0829               	movf	??___flmul+1,w
  7805  023A  1103               	clrz
  7806  023B  1803               	skipnc
  7807  023C  3E01               	addlw	1
  7808  023D  1903               	skipnz
  7809  023E  2A40               	goto	u322_21
  7810  023F  07B5               	addwf	___flmul@prod+1,f
  7811  0240                     u322_21:
  7812  0240  082A               	movf	??___flmul+2,w
  7813  0241  1103               	clrz
  7814  0242  1803               	skipnc
  7815  0243  3E01               	addlw	1
  7816  0244  1903               	skipnz
  7817  0245  2A47               	goto	u322_22
  7818  0246  07B6               	addwf	___flmul@prod+2,f
  7819  0247                     u322_22:
  7820  0247  082B               	movf	??___flmul+3,w
  7821  0248  1103               	clrz
  7822  0249  1803               	skipnc
  7823  024A  3E01               	addlw	1
  7824  024B  1903               	skipnz
  7825  024C  2A4E               	goto	u322_23
  7826  024D  07B7               	addwf	___flmul@prod+3,f
  7827  024E                     u322_23:
  7828  024E  0822               	movf	___flmul@b+2,w
  7829  024F  00FF               	movwf	btemp+1
  7830  0250  087F               	movf	btemp+1,w
  7831  0251  00F0               	movwf	__Umul8_16@multiplicand
  7832  0252  0826               	movf	___flmul@a+2,w
  7833  0253  160A  118A  23C8  120A  118A  	fcall	__Umul8_16
  7834  0258  0871               	movf	?__Umul8_16+1,w
  7835  0259  1283               	bcf	3,5	;RP0=0, select bank0
  7836  025A  1303               	bcf	3,6	;RP1=0, select bank0
  7837  025B  00B9               	movwf	___flmul@temp+1
  7838  025C  0870               	movf	?__Umul8_16,w
  7839  025D  00B8               	movwf	___flmul@temp
  7840  025E                     i1l2871:
  7841  025E  0838               	movf	___flmul@temp,w
  7842  025F  00A8               	movwf	??___flmul
  7843  0260  0839               	movf	___flmul@temp+1,w
  7844  0261  00A9               	movwf	??___flmul+1
  7845  0262  01AA               	clrf	??___flmul+2
  7846  0263  01AB               	clrf	??___flmul+3
  7847  0264  3008               	movlw	8
  7848  0265                     u323_25:
  7849  0265  1003               	clrc
  7850  0266  0DA8               	rlf	??___flmul,f
  7851  0267  0DA9               	rlf	??___flmul+1,f
  7852  0268  0DAA               	rlf	??___flmul+2,f
  7853  0269  0DAB               	rlf	??___flmul+3,f
  7854  026A                     u323_20:
  7855  026A  3EFF               	addlw	-1
  7856  026B  1D03               	skipz
  7857  026C  2A65               	goto	u323_25
  7858  026D  0828               	movf	??___flmul,w
  7859  026E  07B4               	addwf	___flmul@prod,f
  7860  026F  0829               	movf	??___flmul+1,w
  7861  0270  1103               	clrz
  7862  0271  1803               	skipnc
  7863  0272  3E01               	addlw	1
  7864  0273  1903               	skipnz
  7865  0274  2A76               	goto	u324_21
  7866  0275  07B5               	addwf	___flmul@prod+1,f
  7867  0276                     u324_21:
  7868  0276  082A               	movf	??___flmul+2,w
  7869  0277  1103               	clrz
  7870  0278  1803               	skipnc
  7871  0279  3E01               	addlw	1
  7872  027A  1903               	skipnz
  7873  027B  2A7D               	goto	u324_22
  7874  027C  07B6               	addwf	___flmul@prod+2,f
  7875  027D                     u324_22:
  7876  027D  082B               	movf	??___flmul+3,w
  7877  027E  1103               	clrz
  7878  027F  1803               	skipnc
  7879  0280  3E01               	addlw	1
  7880  0281  1903               	skipnz
  7881  0282  2A84               	goto	u324_23
  7882  0283  07B7               	addwf	___flmul@prod+3,f
  7883  0284                     u324_23:
  7884  0284                     i1l2873:
  7885  0284  082E               	movf	___flmul@grs,w
  7886  0285  00A8               	movwf	??___flmul
  7887  0286  082F               	movf	___flmul@grs+1,w
  7888  0287  00A9               	movwf	??___flmul+1
  7889  0288  0830               	movf	___flmul@grs+2,w
  7890  0289  00AA               	movwf	??___flmul+2
  7891  028A  0831               	movf	___flmul@grs+3,w
  7892  028B  00AB               	movwf	??___flmul+3
  7893  028C  3018               	movlw	24
  7894  028D                     u325_25:
  7895  028D  1003               	clrc
  7896  028E  0CAB               	rrf	??___flmul+3,f
  7897  028F  0CAA               	rrf	??___flmul+2,f
  7898  0290  0CA9               	rrf	??___flmul+1,f
  7899  0291  0CA8               	rrf	??___flmul,f
  7900  0292                     u325_20:
  7901  0292  3EFF               	addlw	-1
  7902  0293  1D03               	skipz
  7903  0294  2A8D               	goto	u325_25
  7904  0295  0828               	movf	??___flmul,w
  7905  0296  07B4               	addwf	___flmul@prod,f
  7906  0297  0829               	movf	??___flmul+1,w
  7907  0298  1103               	clrz
  7908  0299  1803               	skipnc
  7909  029A  3E01               	addlw	1
  7910  029B  1903               	skipnz
  7911  029C  2A9E               	goto	u326_21
  7912  029D  07B5               	addwf	___flmul@prod+1,f
  7913  029E                     u326_21:
  7914  029E  082A               	movf	??___flmul+2,w
  7915  029F  1103               	clrz
  7916  02A0  1803               	skipnc
  7917  02A1  3E01               	addlw	1
  7918  02A2  1903               	skipnz
  7919  02A3  2AA5               	goto	u326_22
  7920  02A4  07B6               	addwf	___flmul@prod+2,f
  7921  02A5                     u326_22:
  7922  02A5  082B               	movf	??___flmul+3,w
  7923  02A6  1103               	clrz
  7924  02A7  1803               	skipnc
  7925  02A8  3E01               	addlw	1
  7926  02A9  1903               	skipnz
  7927  02AA  2AAC               	goto	u326_23
  7928  02AB  07B7               	addwf	___flmul@prod+3,f
  7929  02AC                     u326_23:
  7930  02AC                     i1l2875:
  7931  02AC  3008               	movlw	8
  7932  02AD  00A8               	movwf	??___flmul
  7933  02AE                     u327_25:
  7934  02AE  1003               	clrc
  7935  02AF  0DAE               	rlf	___flmul@grs,f
  7936  02B0  0DAF               	rlf	___flmul@grs+1,f
  7937  02B1  0DB0               	rlf	___flmul@grs+2,f
  7938  02B2  0DB1               	rlf	___flmul@grs+3,f
  7939  02B3  0BA8               	decfsz	??___flmul,f
  7940  02B4  2AAE               	goto	u327_25
  7941  02B5                     i1l2877:
  7942  02B5  0833               	movf	___flmul@bexp,w
  7943  02B6  0732               	addwf	___flmul@aexp,w
  7944  02B7  00A8               	movwf	??___flmul
  7945  02B8  01A9               	clrf	??___flmul+1
  7946  02B9  0DA9               	rlf	??___flmul+1,f
  7947  02BA  0828               	movf	??___flmul,w
  7948  02BB  3E82               	addlw	130
  7949  02BC  00B8               	movwf	___flmul@temp
  7950  02BD  0829               	movf	??___flmul+1,w
  7951  02BE  1803               	skipnc
  7952  02BF  3E01               	addlw	1
  7953  02C0  3EFF               	addlw	255
  7954  02C1  00B9               	movwf	___flmul@temp+1
  7955  02C2  2AE0               	goto	i1l2889
  7956  02C3                     i1l2879:
  7957  02C3  3001               	movlw	1
  7958  02C4  00A8               	movwf	??___flmul
  7959  02C5                     u328_25:
  7960  02C5  1003               	clrc
  7961  02C6  0DB4               	rlf	___flmul@prod,f
  7962  02C7  0DB5               	rlf	___flmul@prod+1,f
  7963  02C8  0DB6               	rlf	___flmul@prod+2,f
  7964  02C9  0DB7               	rlf	___flmul@prod+3,f
  7965  02CA  0BA8               	decfsz	??___flmul,f
  7966  02CB  2AC5               	goto	u328_25
  7967  02CC                     i1l2881:
  7968  02CC  1FB1               	btfss	___flmul@grs+3,7
  7969  02CD  2ACF               	goto	u329_21
  7970  02CE  2AD0               	goto	u329_20
  7971  02CF                     u329_21:
  7972  02CF  2AD1               	goto	i1l2885
  7973  02D0                     u329_20:
  7974  02D0                     i1l2883:
  7975  02D0  1434               	bsf	___flmul@prod,0
  7976  02D1                     i1l2885:
  7977  02D1  3001               	movlw	1
  7978  02D2  00A8               	movwf	??___flmul
  7979  02D3                     u330_25:
  7980  02D3  1003               	clrc
  7981  02D4  0DAE               	rlf	___flmul@grs,f
  7982  02D5  0DAF               	rlf	___flmul@grs+1,f
  7983  02D6  0DB0               	rlf	___flmul@grs+2,f
  7984  02D7  0DB1               	rlf	___flmul@grs+3,f
  7985  02D8  0BA8               	decfsz	??___flmul,f
  7986  02D9  2AD3               	goto	u330_25
  7987  02DA                     i1l2887:
  7988  02DA  30FF               	movlw	255
  7989  02DB  07B8               	addwf	___flmul@temp,f
  7990  02DC  1803               	skipnc
  7991  02DD  0AB9               	incf	___flmul@temp+1,f
  7992  02DE  30FF               	movlw	255
  7993  02DF  07B9               	addwf	___flmul@temp+1,f
  7994  02E0                     i1l2889:
  7995  02E0  1FB6               	btfss	___flmul@prod+2,7
  7996  02E1  2AE3               	goto	u331_21
  7997  02E2  2AE4               	goto	u331_20
  7998  02E3                     u331_21:
  7999  02E3  2AC3               	goto	i1l2879
  8000  02E4                     u331_20:
  8001  02E4                     i1l2891:
  8002  02E4  01B2               	clrf	___flmul@aexp
  8003  02E5                     i1l2893:
  8004  02E5  1FB1               	btfss	___flmul@grs+3,7
  8005  02E6  2AE8               	goto	u332_21
  8006  02E7  2AE9               	goto	u332_20
  8007  02E8                     u332_21:
  8008  02E8  2B05               	goto	i1l2901
  8009  02E9                     u332_20:
  8010  02E9                     i1l2895:
  8011  02E9  30FF               	movlw	255
  8012  02EA  052E               	andwf	___flmul@grs,w
  8013  02EB  00A8               	movwf	??___flmul
  8014  02EC  30FF               	movlw	255
  8015  02ED  052F               	andwf	___flmul@grs+1,w
  8016  02EE  00A9               	movwf	??___flmul+1
  8017  02EF  30FF               	movlw	255
  8018  02F0  0530               	andwf	___flmul@grs+2,w
  8019  02F1  00AA               	movwf	??___flmul+2
  8020  02F2  307F               	movlw	127
  8021  02F3  0531               	andwf	___flmul@grs+3,w
  8022  02F4  00AB               	movwf	??___flmul+3
  8023  02F5  082B               	movf	??___flmul+3,w
  8024  02F6  042A               	iorwf	??___flmul+2,w
  8025  02F7  0429               	iorwf	??___flmul+1,w
  8026  02F8  0428               	iorwf	??___flmul,w
  8027  02F9  1903               	skipnz
  8028  02FA  2AFC               	goto	u333_21
  8029  02FB  2AFD               	goto	u333_20
  8030  02FC                     u333_21:
  8031  02FC  2B00               	goto	i1l894
  8032  02FD                     u333_20:
  8033  02FD                     i1l2897:
  8034  02FD  01B2               	clrf	___flmul@aexp
  8035  02FE  0AB2               	incf	___flmul@aexp,f
  8036  02FF  2B05               	goto	i1l2901
  8037  0300                     i1l894:
  8038  0300  1C34               	btfss	___flmul@prod,0
  8039  0301  2B03               	goto	u334_21
  8040  0302  2B04               	goto	u334_20
  8041  0303                     u334_21:
  8042  0303  2B05               	goto	i1l2901
  8043  0304                     u334_20:
  8044  0304  2AFD               	goto	i1l2897
  8045  0305                     i1l2901:
  8046  0305  0832               	movf	___flmul@aexp,w
  8047  0306  1903               	btfsc	3,2
  8048  0307  2B09               	goto	u335_21
  8049  0308  2B0A               	goto	u335_20
  8050  0309                     u335_21:
  8051  0309  2B3B               	goto	i1l2911
  8052  030A                     u335_20:
  8053  030A                     i1l2903:
  8054  030A  3001               	movlw	1
  8055  030B  07B4               	addwf	___flmul@prod,f
  8056  030C  3000               	movlw	0
  8057  030D  1803               	skipnc
  8058  030E  3001               	movlw	1
  8059  030F  07B5               	addwf	___flmul@prod+1,f
  8060  0310  3000               	movlw	0
  8061  0311  1803               	skipnc
  8062  0312  3001               	movlw	1
  8063  0313  07B6               	addwf	___flmul@prod+2,f
  8064  0314  3000               	movlw	0
  8065  0315  1803               	skipnc
  8066  0316  3001               	movlw	1
  8067  0317  07B7               	addwf	___flmul@prod+3,f
  8068  0318                     i1l2905:
  8069  0318  1C37               	btfss	___flmul@prod+3,0
  8070  0319  2B1B               	goto	u336_21
  8071  031A  2B1C               	goto	u336_20
  8072  031B                     u336_21:
  8073  031B  2B3B               	goto	i1l2911
  8074  031C                     u336_20:
  8075  031C                     i1l2907:
  8076  031C  0834               	movf	___flmul@prod,w
  8077  031D  00A8               	movwf	??___flmul
  8078  031E  0835               	movf	___flmul@prod+1,w
  8079  031F  00A9               	movwf	??___flmul+1
  8080  0320  0836               	movf	___flmul@prod+2,w
  8081  0321  00AA               	movwf	??___flmul+2
  8082  0322  0837               	movf	___flmul@prod+3,w
  8083  0323  00AB               	movwf	??___flmul+3
  8084  0324  3001               	movlw	1
  8085  0325  00AC               	movwf	??___flmul+4
  8086  0326                     u337_25:
  8087  0326  0D2B               	rlf	??___flmul+3,w
  8088  0327  0CAB               	rrf	??___flmul+3,f
  8089  0328  0CAA               	rrf	??___flmul+2,f
  8090  0329  0CA9               	rrf	??___flmul+1,f
  8091  032A  0CA8               	rrf	??___flmul,f
  8092  032B                     u337_20:
  8093  032B  0BAC               	decfsz	??___flmul+4,f
  8094  032C  2B26               	goto	u337_25
  8095  032D  082B               	movf	??___flmul+3,w
  8096  032E  00B7               	movwf	___flmul@prod+3
  8097  032F  082A               	movf	??___flmul+2,w
  8098  0330  00B6               	movwf	___flmul@prod+2
  8099  0331  0829               	movf	??___flmul+1,w
  8100  0332  00B5               	movwf	___flmul@prod+1
  8101  0333  0828               	movf	??___flmul,w
  8102  0334  00B4               	movwf	___flmul@prod
  8103  0335                     i1l2909:
  8104  0335  3001               	movlw	1
  8105  0336  07B8               	addwf	___flmul@temp,f
  8106  0337  1803               	skipnc
  8107  0338  0AB9               	incf	___flmul@temp+1,f
  8108  0339  3000               	movlw	0
  8109  033A  07B9               	addwf	___flmul@temp+1,f
  8110  033B                     i1l2911:
  8111  033B  0839               	movf	___flmul@temp+1,w
  8112  033C  3A80               	xorlw	128
  8113  033D  00FF               	movwf	btemp+1
  8114  033E  3080               	movlw	128
  8115  033F  027F               	subwf	btemp+1,w
  8116  0340  1D03               	skipz
  8117  0341  2B44               	goto	u338_25
  8118  0342  30FF               	movlw	255
  8119  0343  0238               	subwf	___flmul@temp,w
  8120  0344                     u338_25:
  8121  0344  1C03               	skipc
  8122  0345  2B47               	goto	u338_21
  8123  0346  2B48               	goto	u338_20
  8124  0347                     u338_21:
  8125  0347  2B53               	goto	i1l2915
  8126  0348                     u338_20:
  8127  0348                     i1l2913:
  8128  0348  307F               	movlw	127
  8129  0349  1283               	bcf	3,5	;RP0=0, select bank0
  8130  034A  1303               	bcf	3,6	;RP1=0, select bank0
  8131  034B  00B7               	movwf	___flmul@prod+3
  8132  034C  3080               	movlw	128
  8133  034D  00B6               	movwf	___flmul@prod+2
  8134  034E  3000               	movlw	0
  8135  034F  00B5               	movwf	___flmul@prod+1
  8136  0350  3000               	movlw	0
  8137  0351  00B4               	movwf	___flmul@prod
  8138  0352  2B88               	goto	i1l900
  8139  0353                     i1l2915:
  8140  0353  1283               	bcf	3,5	;RP0=0, select bank0
  8141  0354  1303               	bcf	3,6	;RP1=0, select bank0
  8142  0355  0839               	movf	___flmul@temp+1,w
  8143  0356  3A80               	xorlw	128
  8144  0357  00FF               	movwf	btemp+1
  8145  0358  3080               	movlw	128
  8146  0359  027F               	subwf	btemp+1,w
  8147  035A  1D03               	skipz
  8148  035B  2B5E               	goto	u339_25
  8149  035C  3001               	movlw	1
  8150  035D  0238               	subwf	___flmul@temp,w
  8151  035E                     u339_25:
  8152  035E  1803               	skipnc
  8153  035F  2B61               	goto	u339_21
  8154  0360  2B62               	goto	u339_20
  8155  0361                     u339_21:
  8156  0361  2B6E               	goto	i1l2921
  8157  0362                     u339_20:
  8158  0362                     i1l2917:
  8159  0362  3000               	movlw	0
  8160  0363  1283               	bcf	3,5	;RP0=0, select bank0
  8161  0364  1303               	bcf	3,6	;RP1=0, select bank0
  8162  0365  00B7               	movwf	___flmul@prod+3
  8163  0366  3000               	movlw	0
  8164  0367  00B6               	movwf	___flmul@prod+2
  8165  0368  3000               	movlw	0
  8166  0369  00B5               	movwf	___flmul@prod+1
  8167  036A  3000               	movlw	0
  8168  036B  00B4               	movwf	___flmul@prod
  8169  036C                     i1l2919:
  8170  036C  01AD               	clrf	___flmul@sign
  8171  036D  2B88               	goto	i1l900
  8172  036E                     i1l2921:
  8173  036E  1283               	bcf	3,5	;RP0=0, select bank0
  8174  036F  1303               	bcf	3,6	;RP1=0, select bank0
  8175  0370  0838               	movf	___flmul@temp,w
  8176  0371  00FF               	movwf	btemp+1
  8177  0372  087F               	movf	btemp+1,w
  8178  0373  00B3               	movwf	___flmul@bexp
  8179  0374                     i1l2923:
  8180  0374  30FF               	movlw	255
  8181  0375  05B4               	andwf	___flmul@prod,f
  8182  0376  30FF               	movlw	255
  8183  0377  05B5               	andwf	___flmul@prod+1,f
  8184  0378  307F               	movlw	127
  8185  0379  05B6               	andwf	___flmul@prod+2,f
  8186  037A  3000               	movlw	0
  8187  037B  05B7               	andwf	___flmul@prod+3,f
  8188  037C                     i1l2925:
  8189  037C  1C33               	btfss	___flmul@bexp,0
  8190  037D  2B7F               	goto	u340_21
  8191  037E  2B80               	goto	u340_20
  8192  037F                     u340_21:
  8193  037F  2B81               	goto	i1l2929
  8194  0380                     u340_20:
  8195  0380                     i1l2927:
  8196  0380  17B6               	bsf	___flmul@prod+2,7
  8197  0381                     i1l2929:
  8198  0381  0833               	movf	___flmul@bexp,w
  8199  0382  00A8               	movwf	??___flmul
  8200  0383  1003               	clrc
  8201  0384  0C28               	rrf	??___flmul,w
  8202  0385  00FF               	movwf	btemp+1
  8203  0386  087F               	movf	btemp+1,w
  8204  0387  00B7               	movwf	___flmul@prod+3
  8205  0388                     i1l900:
  8206  0388  082D               	movf	___flmul@sign,w
  8207  0389  00FF               	movwf	btemp+1
  8208  038A  087F               	movf	btemp+1,w
  8209  038B  04B7               	iorwf	___flmul@prod+3,f
  8210  038C                     i1l2931:
  8211  038C  0837               	movf	___flmul@prod+3,w
  8212  038D  00A3               	movwf	?___flmul+3
  8213  038E  0836               	movf	___flmul@prod+2,w
  8214  038F  00A2               	movwf	?___flmul+2
  8215  0390  0835               	movf	___flmul@prod+1,w
  8216  0391  00A1               	movwf	?___flmul+1
  8217  0392  0834               	movf	___flmul@prod,w
  8218  0393  00A0               	movwf	?___flmul
  8219  0394                     i1l888:
  8220  0394  0008               	return
  8221  0395                     __end_of___flmul:
  8222                           
  8223                           	psect	text38
  8224  13C8                     __ptext38:	
  8225 ;; *************** function __Umul8_16 *****************
  8226 ;; Defined at:
  8227 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  multiplier      1    wreg     unsigned char 
  8230 ;;  multiplicand    1    0[COMMON] unsigned char 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  multiplier      1    8[COMMON] unsigned char 
  8233 ;;  word_mpld       2    6[COMMON] unsigned int 
  8234 ;;  product         2    4[COMMON] unsigned int 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  2    0[COMMON] unsigned int 
  8237 ;; Registers used:
  8238 ;;		wreg, status,2, status,0
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8244 ;;      Params:         2       0       0       0       0
  8245 ;;      Locals:         5       0       0       0       0
  8246 ;;      Temps:          2       0       0       0       0
  8247 ;;      Totals:         9       0       0       0       0
  8248 ;;Total ram usage:        9 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		___flmul
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           
  8258                           ;psect for function __Umul8_16
  8259  13C8                     __Umul8_16:
  8260                           
  8261                           ;incstack = 0
  8262 ;; hardware stack exceeded
  8263                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8264                           ;__Umul8_16@multiplier stored from wreg
  8265  13C8  00F8               	movwf	__Umul8_16@multiplier
  8266  13C9                     i1l2565:
  8267  13C9  01F4               	clrf	__Umul8_16@product
  8268  13CA  01F5               	clrf	__Umul8_16@product+1
  8269  13CB                     i1l2567:
  8270  13CB  0870               	movf	__Umul8_16@multiplicand,w
  8271  13CC  00F2               	movwf	??__Umul8_16
  8272  13CD  01F3               	clrf	??__Umul8_16+1
  8273  13CE  0872               	movf	??__Umul8_16,w
  8274  13CF  00F6               	movwf	__Umul8_16@word_mpld
  8275  13D0  0873               	movf	??__Umul8_16+1,w
  8276  13D1  00F7               	movwf	__Umul8_16@word_mpld+1
  8277  13D2                     i1l2569:
  8278  13D2  1C78               	btfss	__Umul8_16@multiplier,0
  8279  13D3  2BD5               	goto	u251_21
  8280  13D4  2BD6               	goto	u251_20
  8281  13D5                     u251_21:
  8282  13D5  2BDC               	goto	i1l907
  8283  13D6                     u251_20:
  8284  13D6                     i1l2571:
  8285  13D6  0876               	movf	__Umul8_16@word_mpld,w
  8286  13D7  07F4               	addwf	__Umul8_16@product,f
  8287  13D8  1803               	skipnc
  8288  13D9  0AF5               	incf	__Umul8_16@product+1,f
  8289  13DA  0877               	movf	__Umul8_16@word_mpld+1,w
  8290  13DB  07F5               	addwf	__Umul8_16@product+1,f
  8291  13DC                     i1l907:
  8292  13DC  3001               	movlw	1
  8293  13DD                     u252_25:
  8294  13DD  1003               	clrc
  8295  13DE  0DF6               	rlf	__Umul8_16@word_mpld,f
  8296  13DF  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8297  13E0  3EFF               	addlw	-1
  8298  13E1  1D03               	skipz
  8299  13E2  2BDD               	goto	u252_25
  8300  13E3  1003               	clrc
  8301  13E4  0CF8               	rrf	__Umul8_16@multiplier,f
  8302  13E5                     i1l2573:
  8303  13E5  0878               	movf	__Umul8_16@multiplier,w
  8304  13E6  1D03               	btfss	3,2
  8305  13E7  2BE9               	goto	u253_21
  8306  13E8  2BEA               	goto	u253_20
  8307  13E9                     u253_21:
  8308  13E9  2BD2               	goto	i1l2569
  8309  13EA                     u253_20:
  8310  13EA                     i1l2575:
  8311  13EA  0875               	movf	__Umul8_16@product+1,w
  8312  13EB  00F1               	movwf	?__Umul8_16+1
  8313  13EC  0874               	movf	__Umul8_16@product,w
  8314  13ED  00F0               	movwf	?__Umul8_16
  8315  13EE                     i1l909:
  8316  13EE  0008               	return
  8317  13EF                     __end_of__Umul8_16:
  8318                           
  8319                           	psect	text39
  8320  0B1B                     __ptext39:	
  8321 ;; *************** function _ADC_Read *****************
  8322 ;; Defined at:
  8323 ;;		line 35 in file "ADC.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  channel         1    wreg     unsigned char 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  channel         1    4[COMMON] unsigned char 
  8328 ;;  ADC_result      2    5[COMMON] unsigned short 
  8329 ;;  E               1    8[COMMON] unsigned char 
  8330 ;;  A               1    7[COMMON] unsigned char 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  2    0[COMMON] unsigned short 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8340 ;;      Params:         2       0       0       0       0
  8341 ;;      Locals:         5       0       0       0       0
  8342 ;;      Temps:          2       0       0       0       0
  8343 ;;      Totals:         9       0       0       0       0
  8344 ;;Total ram usage:        9 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; This function calls:
  8347 ;;		Nothing
  8348 ;; This function is called by:
  8349 ;;		_UPDATE_TEMP
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           
  8354                           ;psect for function _ADC_Read
  8355  0B1B                     _ADC_Read:
  8356                           
  8357                           ;incstack = 0
  8358                           ; Regs used in _ADC_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  8359                           ;ADC_Read@channel stored from wreg
  8360  0B1B  00F4               	movwf	ADC_Read@channel
  8361  0B1C                     i1l2661:
  8362                           
  8363                           ;ADC.c: 37:     uint8 A = (*((uint8*)(0x85))&0xFF);
  8364  0B1C  1683               	bsf	3,5	;RP0=1, select bank1
  8365  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  8366  0B1E  0805               	movf	5,w
  8367  0B1F  00FF               	movwf	btemp+1
  8368  0B20  087F               	movf	btemp+1,w
  8369  0B21  00F7               	movwf	ADC_Read@A
  8370                           
  8371                           ;ADC.c: 38:     uint8 E = (*((uint8*)(0x89))&0xFF);
  8372  0B22  0809               	movf	9,w
  8373  0B23  00FF               	movwf	btemp+1
  8374  0B24  087F               	movf	btemp+1,w
  8375  0B25  00F8               	movwf	ADC_Read@E
  8376  0B26                     i1l2663:
  8377  0B26                     i1l2665:
  8378                           
  8379                           ;ADC.c: 41:     (*((uint8*)(0x85))=((0xFF) | (*((uint8*)(0x85))&0x00)));
  8380  0B26  30FF               	movlw	255
  8381  0B27  00FF               	movwf	btemp+1
  8382  0B28  087F               	movf	btemp+1,w
  8383  0B29  0085               	movwf	5
  8384  0B2A                     i1l2667:
  8385                           
  8386                           ;ADC.c: 42:     (*((uint8*)(0x89))=((0xFF) | (*((uint8*)(0x89))&0x00)));
  8387  0B2A  30FF               	movlw	255
  8388  0B2B  00FF               	movwf	btemp+1
  8389  0B2C  087F               	movf	btemp+1,w
  8390  0B2D  0089               	movwf	9
  8391  0B2E                     i1l2669:
  8392                           
  8393                           ;ADC.c: 45:     (*((uint8*)(0x1E))&=0x00);
  8394  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  8395  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  8396  0B30  019E               	clrf	30
  8397  0B31                     i1l2671:
  8398                           
  8399                           ;ADC.c: 46:     (*((uint8*)(0x9E))&=0x00);
  8400  0B31  1683               	bsf	3,5	;RP0=1, select bank1
  8401  0B32  1303               	bcf	3,6	;RP1=0, select bank1
  8402  0B33  019E               	clrf	30
  8403                           
  8404                           ;ADC.c: 48:     switch (channel) {
  8405  0B34  2BD1               	goto	i1l2691
  8406  0B35                     i1l2673:
  8407                           
  8408                           ;ADC.c: 50:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (3))))|(
      +                          0 << 3)));
  8409  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  8410  0B36  1303               	bcf	3,6	;RP1=0, select bank0
  8411  0B37  081F               	movf	31,w
  8412  0B38  39F7               	andlw	247
  8413  0B39  00FF               	movwf	btemp+1
  8414  0B3A  087F               	movf	btemp+1,w
  8415  0B3B  009F               	movwf	31
  8416                           
  8417                           ;ADC.c: 51:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (4))))|(
      +                          0 << 4)));
  8418  0B3C  081F               	movf	31,w
  8419  0B3D  39EF               	andlw	239
  8420  0B3E  00FF               	movwf	btemp+1
  8421  0B3F  087F               	movf	btemp+1,w
  8422  0B40  009F               	movwf	31
  8423                           
  8424                           ;ADC.c: 52:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (5))))|(
      +                          0 << 5)));
  8425  0B41  081F               	movf	31,w
  8426  0B42  39DF               	andlw	223
  8427  0B43  00FF               	movwf	btemp+1
  8428  0B44  087F               	movf	btemp+1,w
  8429  0B45  009F               	movwf	31
  8430                           
  8431                           ;ADC.c: 53:             break;
  8432  0B46  2BF3               	goto	i1l137
  8433  0B47                     i1l2675:
  8434                           
  8435                           ;ADC.c: 55:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (3))))|(
      +                          1 << 3)));
  8436  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  8437  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  8438  0B49  081F               	movf	31,w
  8439  0B4A  39F7               	andlw	247
  8440  0B4B  3808               	iorlw	8
  8441  0B4C  00FF               	movwf	btemp+1
  8442  0B4D  087F               	movf	btemp+1,w
  8443  0B4E  009F               	movwf	31
  8444                           
  8445                           ;ADC.c: 56:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (4))))|(
      +                          0 << 4)));
  8446  0B4F  081F               	movf	31,w
  8447  0B50  39EF               	andlw	239
  8448  0B51  00FF               	movwf	btemp+1
  8449  0B52  087F               	movf	btemp+1,w
  8450  0B53  009F               	movwf	31
  8451                           
  8452                           ;ADC.c: 57:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (5))))|(
      +                          0 << 5)));
  8453  0B54  081F               	movf	31,w
  8454  0B55  39DF               	andlw	223
  8455  0B56  00FF               	movwf	btemp+1
  8456  0B57  087F               	movf	btemp+1,w
  8457  0B58  009F               	movwf	31
  8458                           
  8459                           ;ADC.c: 58:             break;
  8460  0B59  2BF3               	goto	i1l137
  8461  0B5A                     i1l2677:
  8462                           
  8463                           ;ADC.c: 60:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (3))))|(
      +                          0 << 3)));
  8464  0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  8465  0B5B  1303               	bcf	3,6	;RP1=0, select bank0
  8466  0B5C  081F               	movf	31,w
  8467  0B5D  39F7               	andlw	247
  8468  0B5E  00FF               	movwf	btemp+1
  8469  0B5F  087F               	movf	btemp+1,w
  8470  0B60  009F               	movwf	31
  8471                           
  8472                           ;ADC.c: 61:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (4))))|(
      +                          1 << 4)));
  8473  0B61  081F               	movf	31,w
  8474  0B62  39EF               	andlw	239
  8475  0B63  3810               	iorlw	16
  8476  0B64  00FF               	movwf	btemp+1
  8477  0B65  087F               	movf	btemp+1,w
  8478  0B66  009F               	movwf	31
  8479                           
  8480                           ;ADC.c: 62:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (5))))|(
      +                          0 << 5)));
  8481  0B67  081F               	movf	31,w
  8482  0B68  39DF               	andlw	223
  8483  0B69  00FF               	movwf	btemp+1
  8484  0B6A  087F               	movf	btemp+1,w
  8485  0B6B  009F               	movwf	31
  8486                           
  8487                           ;ADC.c: 63:             break;
  8488  0B6C  2BF3               	goto	i1l137
  8489  0B6D                     i1l2679:
  8490                           
  8491                           ;ADC.c: 65:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (3))))|(
      +                          1 << 3)));
  8492  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  8493  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  8494  0B6F  081F               	movf	31,w
  8495  0B70  39F7               	andlw	247
  8496  0B71  3808               	iorlw	8
  8497  0B72  00FF               	movwf	btemp+1
  8498  0B73  087F               	movf	btemp+1,w
  8499  0B74  009F               	movwf	31
  8500                           
  8501                           ;ADC.c: 66:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (4))))|(
      +                          1 << 4)));
  8502  0B75  081F               	movf	31,w
  8503  0B76  39EF               	andlw	239
  8504  0B77  3810               	iorlw	16
  8505  0B78  00FF               	movwf	btemp+1
  8506  0B79  087F               	movf	btemp+1,w
  8507  0B7A  009F               	movwf	31
  8508                           
  8509                           ;ADC.c: 67:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (5))))|(
      +                          0 << 5)));
  8510  0B7B  081F               	movf	31,w
  8511  0B7C  39DF               	andlw	223
  8512  0B7D  00FF               	movwf	btemp+1
  8513  0B7E  087F               	movf	btemp+1,w
  8514  0B7F  009F               	movwf	31
  8515                           
  8516                           ;ADC.c: 68:             break;
  8517  0B80  2BF3               	goto	i1l137
  8518  0B81                     i1l2681:
  8519                           
  8520                           ;ADC.c: 70:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (3))))|(
      +                          0 << 3)));
  8521  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  8522  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  8523  0B83  081F               	movf	31,w
  8524  0B84  39F7               	andlw	247
  8525  0B85  00FF               	movwf	btemp+1
  8526  0B86  087F               	movf	btemp+1,w
  8527  0B87  009F               	movwf	31
  8528                           
  8529                           ;ADC.c: 71:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (4))))|(
      +                          0 << 4)));
  8530  0B88  081F               	movf	31,w
  8531  0B89  39EF               	andlw	239
  8532  0B8A  00FF               	movwf	btemp+1
  8533  0B8B  087F               	movf	btemp+1,w
  8534  0B8C  009F               	movwf	31
  8535                           
  8536                           ;ADC.c: 72:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (5))))|(
      +                          1 << 5)));
  8537  0B8D  081F               	movf	31,w
  8538  0B8E  39DF               	andlw	223
  8539  0B8F  3820               	iorlw	32
  8540  0B90  00FF               	movwf	btemp+1
  8541  0B91  087F               	movf	btemp+1,w
  8542  0B92  009F               	movwf	31
  8543                           
  8544                           ;ADC.c: 73:             break;
  8545  0B93  2BF3               	goto	i1l137
  8546  0B94                     i1l2683:
  8547                           
  8548                           ;ADC.c: 75:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (3))))|(
      +                          1 << 3)));
  8549  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  8550  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  8551  0B96  081F               	movf	31,w
  8552  0B97  39F7               	andlw	247
  8553  0B98  3808               	iorlw	8
  8554  0B99  00FF               	movwf	btemp+1
  8555  0B9A  087F               	movf	btemp+1,w
  8556  0B9B  009F               	movwf	31
  8557                           
  8558                           ;ADC.c: 76:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (4))))|(
      +                          0 << 4)));
  8559  0B9C  081F               	movf	31,w
  8560  0B9D  39EF               	andlw	239
  8561  0B9E  00FF               	movwf	btemp+1
  8562  0B9F  087F               	movf	btemp+1,w
  8563  0BA0  009F               	movwf	31
  8564                           
  8565                           ;ADC.c: 77:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (5))))|(
      +                          1 << 5)));
  8566  0BA1  081F               	movf	31,w
  8567  0BA2  39DF               	andlw	223
  8568  0BA3  3820               	iorlw	32
  8569  0BA4  00FF               	movwf	btemp+1
  8570  0BA5  087F               	movf	btemp+1,w
  8571  0BA6  009F               	movwf	31
  8572                           
  8573                           ;ADC.c: 78:             break;
  8574  0BA7  2BF3               	goto	i1l137
  8575  0BA8                     i1l2685:
  8576                           
  8577                           ;ADC.c: 80:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (3))))|(
      +                          0 << 3)));
  8578  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  8579  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  8580  0BAA  081F               	movf	31,w
  8581  0BAB  39F7               	andlw	247
  8582  0BAC  00FF               	movwf	btemp+1
  8583  0BAD  087F               	movf	btemp+1,w
  8584  0BAE  009F               	movwf	31
  8585                           
  8586                           ;ADC.c: 81:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (4))))|(
      +                          1 << 4)));
  8587  0BAF  081F               	movf	31,w
  8588  0BB0  39EF               	andlw	239
  8589  0BB1  3810               	iorlw	16
  8590  0BB2  00FF               	movwf	btemp+1
  8591  0BB3  087F               	movf	btemp+1,w
  8592  0BB4  009F               	movwf	31
  8593                           
  8594                           ;ADC.c: 82:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (5))))|(
      +                          1 << 5)));
  8595  0BB5  081F               	movf	31,w
  8596  0BB6  39DF               	andlw	223
  8597  0BB7  3820               	iorlw	32
  8598  0BB8  00FF               	movwf	btemp+1
  8599  0BB9  087F               	movf	btemp+1,w
  8600  0BBA  009F               	movwf	31
  8601                           
  8602                           ;ADC.c: 83:             break;
  8603  0BBB  2BF3               	goto	i1l137
  8604  0BBC                     i1l2687:
  8605                           
  8606                           ;ADC.c: 85:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (3))))|(
      +                          1 << 3)));
  8607  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  8608  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  8609  0BBE  081F               	movf	31,w
  8610  0BBF  39F7               	andlw	247
  8611  0BC0  3808               	iorlw	8
  8612  0BC1  00FF               	movwf	btemp+1
  8613  0BC2  087F               	movf	btemp+1,w
  8614  0BC3  009F               	movwf	31
  8615                           
  8616                           ;ADC.c: 86:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (4))))|(
      +                          1 << 4)));
  8617  0BC4  081F               	movf	31,w
  8618  0BC5  39EF               	andlw	239
  8619  0BC6  3810               	iorlw	16
  8620  0BC7  00FF               	movwf	btemp+1
  8621  0BC8  087F               	movf	btemp+1,w
  8622  0BC9  009F               	movwf	31
  8623                           
  8624                           ;ADC.c: 87:             ((*((uint8*)(0x1F))) = (((*((uint8*)(0x1F))) & ( ~(1 << (5))))|(
      +                          1 << 5)));
  8625  0BCA  081F               	movf	31,w
  8626  0BCB  39DF               	andlw	223
  8627  0BCC  3820               	iorlw	32
  8628  0BCD  00FF               	movwf	btemp+1
  8629  0BCE  087F               	movf	btemp+1,w
  8630  0BCF  009F               	movwf	31
  8631                           
  8632                           ;ADC.c: 88:             break;
  8633  0BD0  2BF3               	goto	i1l137
  8634  0BD1                     i1l2691:
  8635  0BD1  0874               	movf	ADC_Read@channel,w
  8636  0BD2  00F2               	movwf	??_ADC_Read
  8637  0BD3  01F3               	clrf	??_ADC_Read+1
  8638                           
  8639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8640                           ; Switch size 1, requested type "simple"
  8641                           ; Number of cases is 1, Range of values is 0 to 0
  8642                           ; switch strategies available:
  8643                           ; Name         Instructions Cycles
  8644                           ; simple_byte            4     3 (average)
  8645                           ; direct_byte           11     8 (fixed)
  8646                           ; jumptable            260     6 (fixed)
  8647                           ;	Chosen strategy is simple_byte
  8648  0BD4  0873               	movf	??_ADC_Read+1,w
  8649  0BD5  3A00               	xorlw	0	; case 0
  8650  0BD6  1903               	skipnz
  8651  0BD7  2BD9               	goto	i1l4107
  8652  0BD8  2BF3               	goto	i1l137
  8653  0BD9                     i1l4107:
  8654                           
  8655                           ; Switch size 1, requested type "simple"
  8656                           ; Number of cases is 8, Range of values is 0 to 7
  8657                           ; switch strategies available:
  8658                           ; Name         Instructions Cycles
  8659                           ; simple_byte           25    13 (average)
  8660                           ; direct_byte           32     8 (fixed)
  8661                           ; jumptable            260     6 (fixed)
  8662                           ;	Chosen strategy is simple_byte
  8663  0BD9  0872               	movf	??_ADC_Read,w
  8664  0BDA  3A00               	xorlw	0	; case 0
  8665  0BDB  1903               	skipnz
  8666  0BDC  2B35               	goto	i1l2673
  8667  0BDD  3A01               	xorlw	1	; case 1
  8668  0BDE  1903               	skipnz
  8669  0BDF  2B47               	goto	i1l2675
  8670  0BE0  3A03               	xorlw	3	; case 2
  8671  0BE1  1903               	skipnz
  8672  0BE2  2B5A               	goto	i1l2677
  8673  0BE3  3A01               	xorlw	1	; case 3
  8674  0BE4  1903               	skipnz
  8675  0BE5  2B6D               	goto	i1l2679
  8676  0BE6  3A07               	xorlw	7	; case 4
  8677  0BE7  1903               	skipnz
  8678  0BE8  2B81               	goto	i1l2681
  8679  0BE9  3A01               	xorlw	1	; case 5
  8680  0BEA  1903               	skipnz
  8681  0BEB  2B94               	goto	i1l2683
  8682  0BEC  3A03               	xorlw	3	; case 6
  8683  0BED  1903               	skipnz
  8684  0BEE  2BA8               	goto	i1l2685
  8685  0BEF  3A01               	xorlw	1	; case 7
  8686  0BF0  1903               	skipnz
  8687  0BF1  2BBC               	goto	i1l2687
  8688  0BF2  2BF3               	goto	i1l137
  8689  0BF3                     i1l137:
  8690                           
  8691                           ;ADC.c: 92:     ((*((uint8*)(0x1F))) |= (1 << (0)));
  8692  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  8693  0BF4  141F               	bsf	31,0
  8694                           
  8695                           ;ADC.c: 93:     ((*((uint8*)(0x1F))) |= (1 << (2)));
  8696  0BF5  151F               	bsf	31,2
  8697  0BF6                     i1l2693:	
  8698                           ;ADC.c: 96:     while (((*((uint8*)(0x1F)) >> 2) & (1)) == 1);
  8699                           
  8700  0BF6  081F               	movf	31,w
  8701  0BF7  00F2               	movwf	??_ADC_Read
  8702  0BF8  3002               	movlw	2
  8703  0BF9                     u287_25:
  8704  0BF9  1003               	clrc
  8705  0BFA  0CF2               	rrf	??_ADC_Read,f
  8706  0BFB  3EFF               	addlw	-1
  8707  0BFC  1D03               	skipz
  8708  0BFD  2BF9               	goto	u287_25
  8709  0BFE  1872               	btfsc	??_ADC_Read,0
  8710  0BFF  2C01               	goto	u288_21
  8711  0C00  2C02               	goto	u288_20
  8712  0C01                     u288_21:
  8713  0C01  2BF6               	goto	i1l2693
  8714  0C02                     u288_20:
  8715  0C02                     i1l2695:
  8716                           
  8717                           ;ADC.c: 98:     ADC_result = (*((uint8*)(0x9E))&0xFF) + (*((uint8*)(0x1E))&0xFF)*256;
  8718  0C02  081E               	movf	30,w
  8719  0C03  00F2               	movwf	??_ADC_Read
  8720  0C04  01F3               	clrf	??_ADC_Read+1
  8721  0C05  0872               	movf	??_ADC_Read,w
  8722  0C06  00F3               	movwf	??_ADC_Read+1
  8723  0C07  01F2               	clrf	??_ADC_Read
  8724  0C08  1683               	bsf	3,5	;RP0=1, select bank1
  8725  0C09  1303               	bcf	3,6	;RP1=0, select bank1
  8726  0C0A  081E               	movf	30,w
  8727  0C0B  0772               	addwf	??_ADC_Read,w
  8728  0C0C  00F5               	movwf	ADC_Read@ADC_result
  8729  0C0D  0873               	movf	??_ADC_Read+1,w
  8730  0C0E  1803               	skipnc
  8731  0C0F  0A73               	incf	??_ADC_Read+1,w
  8732  0C10  00F6               	movwf	ADC_Read@ADC_result+1
  8733                           
  8734                           ;ADC.c: 100:     (*((uint8*)(0x85))=((A) | (*((uint8*)(0x85))&0x00)));
  8735  0C11  0877               	movf	ADC_Read@A,w
  8736  0C12  00FF               	movwf	btemp+1
  8737  0C13  087F               	movf	btemp+1,w
  8738  0C14  0085               	movwf	5
  8739                           
  8740                           ;ADC.c: 101:     (*((uint8*)(0x89))=((E) | (*((uint8*)(0x89))&0x00)));
  8741  0C15  0878               	movf	ADC_Read@E,w
  8742  0C16  00FF               	movwf	btemp+1
  8743  0C17  087F               	movf	btemp+1,w
  8744  0C18  0089               	movwf	9
  8745  0C19                     i1l2697:
  8746                           
  8747                           ;ADC.c: 104:     (*((uint8*)(0x1F)) &= ~(1 << 0));
  8748  0C19  30FE               	movlw	254
  8749  0C1A  00FF               	movwf	btemp+1
  8750  0C1B  087F               	movf	btemp+1,w
  8751  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  8752  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  8753  0C1E  059F               	andwf	31,f
  8754  0C1F                     i1l2699:
  8755                           
  8756                           ;ADC.c: 106:     return ADC_result;
  8757  0C1F  0876               	movf	ADC_Read@ADC_result+1,w
  8758  0C20  00F1               	movwf	?_ADC_Read+1
  8759  0C21  0875               	movf	ADC_Read@ADC_result,w
  8760  0C22  00F0               	movwf	?_ADC_Read
  8761  0C23                     i1l148:
  8762  0C23  0008               	return
  8763  0C24                     __end_of_ADC_Read:
  8764                           
  8765                           	psect	text40
  8766  0D42                     __ptext40:	
  8767 ;; *************** function _SSD_Display *****************
  8768 ;; Defined at:
  8769 ;;		line 21 in file "SSD.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;  display_no      1    wreg     unsigned char 
  8772 ;;  number          1    8[COMMON] unsigned char 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  display_no      1   11[COMMON] unsigned char 
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  1    wreg      void 
  8777 ;; Registers used:
  8778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8784 ;;      Params:         1       0       0       0       0
  8785 ;;      Locals:         1       0       0       0       0
  8786 ;;      Temps:          2       0       0       0       0
  8787 ;;      Totals:         4       0       0       0       0
  8788 ;;Total ram usage:        4 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:    1
  8791 ;; This function calls:
  8792 ;;		i1_DIO_voidWritePinValue
  8793 ;;		i1_DIO_voidWritePortValue
  8794 ;; This function is called by:
  8795 ;;		_Sch_UpdateTick_Handler
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           
  8800                           ;psect for function _SSD_Display
  8801  0D42                     _SSD_Display:
  8802                           
  8803                           ;incstack = 0
  8804                           ; Regs used in _SSD_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8805                           ;SSD_Display@display_no stored from wreg
  8806  0D42  00FB               	movwf	SSD_Display@display_no
  8807  0D43                     i1l3293:
  8808                           
  8809                           ;SSD.c: 22:     switch (display_no) {
  8810  0D43  2E90               	goto	i1l3349
  8811  0D44                     i1l3295:
  8812                           
  8813                           ;SSD.c: 24:             DIO_voidWritePinValue(4, 1);
  8814  0D44  01F0               	clrf	i1DIO_voidWritePinValue@value
  8815  0D45  0AF0               	incf	i1DIO_voidWritePinValue@value,f
  8816  0D46  3004               	movlw	4
  8817  0D47  120A  158A  2157  120A  158A  	fcall	i1_DIO_voidWritePinValue
  8818                           
  8819                           ;SSD.c: 25:             DIO_voidWritePinValue(5, 0);
  8820  0D4C  01F0               	clrf	i1DIO_voidWritePinValue@value
  8821  0D4D  3005               	movlw	5
  8822  0D4E  120A  158A  2157  120A  158A  	fcall	i1_DIO_voidWritePinValue
  8823                           
  8824                           ;SSD.c: 26:             switch (number) {
  8825  0D53  2DC2               	goto	i1l3319
  8826  0D54                     i1l3297:
  8827                           
  8828                           ;SSD.c: 28:                     DIO_voidWritePortValue(3, 0x3F);
  8829  0D54  303F               	movlw	63
  8830  0D55  00FF               	movwf	btemp+1
  8831  0D56  087F               	movf	btemp+1,w
  8832  0D57  00F0               	movwf	i1DIO_voidWritePortValue@value
  8833  0D58  3003               	movlw	3
  8834  0D59  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8835                           
  8836                           ;SSD.c: 29:                     break;
  8837  0D5E  2EA0               	goto	i1l319
  8838  0D5F                     i1l3299:
  8839                           
  8840                           ;SSD.c: 31:                     DIO_voidWritePortValue(3, 0x06);
  8841  0D5F  3006               	movlw	6
  8842  0D60  00FF               	movwf	btemp+1
  8843  0D61  087F               	movf	btemp+1,w
  8844  0D62  00F0               	movwf	i1DIO_voidWritePortValue@value
  8845  0D63  3003               	movlw	3
  8846  0D64  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8847                           
  8848                           ;SSD.c: 32:                     break;
  8849  0D69  2EA0               	goto	i1l319
  8850  0D6A                     i1l3301:
  8851                           
  8852                           ;SSD.c: 34:                     DIO_voidWritePortValue(3, 0x5B);
  8853  0D6A  305B               	movlw	91
  8854  0D6B  00FF               	movwf	btemp+1
  8855  0D6C  087F               	movf	btemp+1,w
  8856  0D6D  00F0               	movwf	i1DIO_voidWritePortValue@value
  8857  0D6E  3003               	movlw	3
  8858  0D6F  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8859                           
  8860                           ;SSD.c: 35:                     break;
  8861  0D74  2EA0               	goto	i1l319
  8862  0D75                     i1l3303:
  8863                           
  8864                           ;SSD.c: 37:                     DIO_voidWritePortValue(3, 0x4F);
  8865  0D75  304F               	movlw	79
  8866  0D76  00FF               	movwf	btemp+1
  8867  0D77  087F               	movf	btemp+1,w
  8868  0D78  00F0               	movwf	i1DIO_voidWritePortValue@value
  8869  0D79  3003               	movlw	3
  8870  0D7A  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8871                           
  8872                           ;SSD.c: 38:                     break;
  8873  0D7F  2EA0               	goto	i1l319
  8874  0D80                     i1l3305:
  8875                           
  8876                           ;SSD.c: 40:                     DIO_voidWritePortValue(3, 0x66);
  8877  0D80  3066               	movlw	102
  8878  0D81  00FF               	movwf	btemp+1
  8879  0D82  087F               	movf	btemp+1,w
  8880  0D83  00F0               	movwf	i1DIO_voidWritePortValue@value
  8881  0D84  3003               	movlw	3
  8882  0D85  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8883                           
  8884                           ;SSD.c: 41:                     break;
  8885  0D8A  2EA0               	goto	i1l319
  8886  0D8B                     i1l3307:
  8887                           
  8888                           ;SSD.c: 43:                     DIO_voidWritePortValue(3, 0x6D);
  8889  0D8B  306D               	movlw	109
  8890  0D8C  00FF               	movwf	btemp+1
  8891  0D8D  087F               	movf	btemp+1,w
  8892  0D8E  00F0               	movwf	i1DIO_voidWritePortValue@value
  8893  0D8F  3003               	movlw	3
  8894  0D90  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8895                           
  8896                           ;SSD.c: 44:                     break;
  8897  0D95  2EA0               	goto	i1l319
  8898  0D96                     i1l3309:
  8899                           
  8900                           ;SSD.c: 46:                     DIO_voidWritePortValue(3, 0x7D);
  8901  0D96  307D               	movlw	125
  8902  0D97  00FF               	movwf	btemp+1
  8903  0D98  087F               	movf	btemp+1,w
  8904  0D99  00F0               	movwf	i1DIO_voidWritePortValue@value
  8905  0D9A  3003               	movlw	3
  8906  0D9B  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8907                           
  8908                           ;SSD.c: 47:                     break;
  8909  0DA0  2EA0               	goto	i1l319
  8910  0DA1                     i1l3311:
  8911                           
  8912                           ;SSD.c: 49:                     DIO_voidWritePortValue(3, 0x07);
  8913  0DA1  3007               	movlw	7
  8914  0DA2  00FF               	movwf	btemp+1
  8915  0DA3  087F               	movf	btemp+1,w
  8916  0DA4  00F0               	movwf	i1DIO_voidWritePortValue@value
  8917  0DA5  3003               	movlw	3
  8918  0DA6  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8919                           
  8920                           ;SSD.c: 50:                     break;
  8921  0DAB  2EA0               	goto	i1l319
  8922  0DAC                     i1l3313:
  8923                           
  8924                           ;SSD.c: 52:                     DIO_voidWritePortValue(3, 0x7F);
  8925  0DAC  307F               	movlw	127
  8926  0DAD  00FF               	movwf	btemp+1
  8927  0DAE  087F               	movf	btemp+1,w
  8928  0DAF  00F0               	movwf	i1DIO_voidWritePortValue@value
  8929  0DB0  3003               	movlw	3
  8930  0DB1  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8931                           
  8932                           ;SSD.c: 53:                     break;
  8933  0DB6  2EA0               	goto	i1l319
  8934  0DB7                     i1l3315:
  8935                           
  8936                           ;SSD.c: 55:                     DIO_voidWritePortValue(3, 0x6F);
  8937  0DB7  306F               	movlw	111
  8938  0DB8  00FF               	movwf	btemp+1
  8939  0DB9  087F               	movf	btemp+1,w
  8940  0DBA  00F0               	movwf	i1DIO_voidWritePortValue@value
  8941  0DBB  3003               	movlw	3
  8942  0DBC  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  8943                           
  8944                           ;SSD.c: 56:                     break;
  8945  0DC1  2EA0               	goto	i1l319
  8946  0DC2                     i1l3319:
  8947  0DC2  0878               	movf	SSD_Display@number,w
  8948  0DC3  00F9               	movwf	??_SSD_Display
  8949  0DC4  01FA               	clrf	??_SSD_Display+1
  8950                           
  8951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8952                           ; Switch size 1, requested type "simple"
  8953                           ; Number of cases is 1, Range of values is 0 to 0
  8954                           ; switch strategies available:
  8955                           ; Name         Instructions Cycles
  8956                           ; simple_byte            4     3 (average)
  8957                           ; direct_byte           11     8 (fixed)
  8958                           ; jumptable            260     6 (fixed)
  8959                           ;	Chosen strategy is simple_byte
  8960  0DC5  087A               	movf	??_SSD_Display+1,w
  8961  0DC6  3A00               	xorlw	0	; case 0
  8962  0DC7  1903               	skipnz
  8963  0DC8  2DCA               	goto	i1l4109
  8964  0DC9  2EA0               	goto	i1l319
  8965  0DCA                     i1l4109:
  8966                           
  8967                           ; Switch size 1, requested type "simple"
  8968                           ; Number of cases is 10, Range of values is 0 to 9
  8969                           ; switch strategies available:
  8970                           ; Name         Instructions Cycles
  8971                           ; simple_byte           31    16 (average)
  8972                           ; direct_byte           38     8 (fixed)
  8973                           ; jumptable            260     6 (fixed)
  8974                           ;	Chosen strategy is simple_byte
  8975  0DCA  0879               	movf	??_SSD_Display,w
  8976  0DCB  3A00               	xorlw	0	; case 0
  8977  0DCC  1903               	skipnz
  8978  0DCD  2D54               	goto	i1l3297
  8979  0DCE  3A01               	xorlw	1	; case 1
  8980  0DCF  1903               	skipnz
  8981  0DD0  2D5F               	goto	i1l3299
  8982  0DD1  3A03               	xorlw	3	; case 2
  8983  0DD2  1903               	skipnz
  8984  0DD3  2D6A               	goto	i1l3301
  8985  0DD4  3A01               	xorlw	1	; case 3
  8986  0DD5  1903               	skipnz
  8987  0DD6  2D75               	goto	i1l3303
  8988  0DD7  3A07               	xorlw	7	; case 4
  8989  0DD8  1903               	skipnz
  8990  0DD9  2D80               	goto	i1l3305
  8991  0DDA  3A01               	xorlw	1	; case 5
  8992  0DDB  1903               	skipnz
  8993  0DDC  2D8B               	goto	i1l3307
  8994  0DDD  3A03               	xorlw	3	; case 6
  8995  0DDE  1903               	skipnz
  8996  0DDF  2D96               	goto	i1l3309
  8997  0DE0  3A01               	xorlw	1	; case 7
  8998  0DE1  1903               	skipnz
  8999  0DE2  2DA1               	goto	i1l3311
  9000  0DE3  3A0F               	xorlw	15	; case 8
  9001  0DE4  1903               	skipnz
  9002  0DE5  2DAC               	goto	i1l3313
  9003  0DE6  3A01               	xorlw	1	; case 9
  9004  0DE7  1903               	skipnz
  9005  0DE8  2DB7               	goto	i1l3315
  9006  0DE9  2EA0               	goto	i1l319
  9007  0DEA                     i1l3321:
  9008                           
  9009                           ;SSD.c: 60:             DIO_voidWritePinValue(5, 1);
  9010  0DEA  01F0               	clrf	i1DIO_voidWritePinValue@value
  9011  0DEB  0AF0               	incf	i1DIO_voidWritePinValue@value,f
  9012  0DEC  3005               	movlw	5
  9013  0DED  120A  158A  2157  120A  158A  	fcall	i1_DIO_voidWritePinValue
  9014                           
  9015                           ;SSD.c: 61:             DIO_voidWritePinValue(4, 0);
  9016  0DF2  01F0               	clrf	i1DIO_voidWritePinValue@value
  9017  0DF3  3004               	movlw	4
  9018  0DF4  120A  158A  2157  120A  158A  	fcall	i1_DIO_voidWritePinValue
  9019                           
  9020                           ;SSD.c: 62:             switch (number) {
  9021  0DF9  2E68               	goto	i1l3345
  9022  0DFA                     i1l3323:
  9023                           
  9024                           ;SSD.c: 64:                     DIO_voidWritePortValue(3, 0x3F);
  9025  0DFA  303F               	movlw	63
  9026  0DFB  00FF               	movwf	btemp+1
  9027  0DFC  087F               	movf	btemp+1,w
  9028  0DFD  00F0               	movwf	i1DIO_voidWritePortValue@value
  9029  0DFE  3003               	movlw	3
  9030  0DFF  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9031                           
  9032                           ;SSD.c: 65:                     break;
  9033  0E04  2EA0               	goto	i1l319
  9034  0E05                     i1l3325:
  9035                           
  9036                           ;SSD.c: 67:                     DIO_voidWritePortValue(3, 0x06);
  9037  0E05  3006               	movlw	6
  9038  0E06  00FF               	movwf	btemp+1
  9039  0E07  087F               	movf	btemp+1,w
  9040  0E08  00F0               	movwf	i1DIO_voidWritePortValue@value
  9041  0E09  3003               	movlw	3
  9042  0E0A  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9043                           
  9044                           ;SSD.c: 68:                     break;
  9045  0E0F  2EA0               	goto	i1l319
  9046  0E10                     i1l3327:
  9047                           
  9048                           ;SSD.c: 70:                     DIO_voidWritePortValue(3, 0x5B);
  9049  0E10  305B               	movlw	91
  9050  0E11  00FF               	movwf	btemp+1
  9051  0E12  087F               	movf	btemp+1,w
  9052  0E13  00F0               	movwf	i1DIO_voidWritePortValue@value
  9053  0E14  3003               	movlw	3
  9054  0E15  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9055                           
  9056                           ;SSD.c: 71:                     break;
  9057  0E1A  2EA0               	goto	i1l319
  9058  0E1B                     i1l3329:
  9059                           
  9060                           ;SSD.c: 73:                     DIO_voidWritePortValue(3, 0x4F);
  9061  0E1B  304F               	movlw	79
  9062  0E1C  00FF               	movwf	btemp+1
  9063  0E1D  087F               	movf	btemp+1,w
  9064  0E1E  00F0               	movwf	i1DIO_voidWritePortValue@value
  9065  0E1F  3003               	movlw	3
  9066  0E20  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9067                           
  9068                           ;SSD.c: 74:                     break;
  9069  0E25  2EA0               	goto	i1l319
  9070  0E26                     i1l3331:
  9071                           
  9072                           ;SSD.c: 76:                     DIO_voidWritePortValue(3, 0x66);
  9073  0E26  3066               	movlw	102
  9074  0E27  00FF               	movwf	btemp+1
  9075  0E28  087F               	movf	btemp+1,w
  9076  0E29  00F0               	movwf	i1DIO_voidWritePortValue@value
  9077  0E2A  3003               	movlw	3
  9078  0E2B  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9079                           
  9080                           ;SSD.c: 77:                     break;
  9081  0E30  2EA0               	goto	i1l319
  9082  0E31                     i1l3333:
  9083                           
  9084                           ;SSD.c: 79:                     DIO_voidWritePortValue(3, 0x6D);
  9085  0E31  306D               	movlw	109
  9086  0E32  00FF               	movwf	btemp+1
  9087  0E33  087F               	movf	btemp+1,w
  9088  0E34  00F0               	movwf	i1DIO_voidWritePortValue@value
  9089  0E35  3003               	movlw	3
  9090  0E36  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9091                           
  9092                           ;SSD.c: 80:                     break;
  9093  0E3B  2EA0               	goto	i1l319
  9094  0E3C                     i1l3335:
  9095                           
  9096                           ;SSD.c: 82:                     DIO_voidWritePortValue(3, 0x7D);
  9097  0E3C  307D               	movlw	125
  9098  0E3D  00FF               	movwf	btemp+1
  9099  0E3E  087F               	movf	btemp+1,w
  9100  0E3F  00F0               	movwf	i1DIO_voidWritePortValue@value
  9101  0E40  3003               	movlw	3
  9102  0E41  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9103                           
  9104                           ;SSD.c: 83:                     break;
  9105  0E46  2EA0               	goto	i1l319
  9106  0E47                     i1l3337:
  9107                           
  9108                           ;SSD.c: 85:                     DIO_voidWritePortValue(3, 0x07);
  9109  0E47  3007               	movlw	7
  9110  0E48  00FF               	movwf	btemp+1
  9111  0E49  087F               	movf	btemp+1,w
  9112  0E4A  00F0               	movwf	i1DIO_voidWritePortValue@value
  9113  0E4B  3003               	movlw	3
  9114  0E4C  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9115                           
  9116                           ;SSD.c: 86:                     break;
  9117  0E51  2EA0               	goto	i1l319
  9118  0E52                     i1l3339:
  9119                           
  9120                           ;SSD.c: 88:                     DIO_voidWritePortValue(3, 0x7F);
  9121  0E52  307F               	movlw	127
  9122  0E53  00FF               	movwf	btemp+1
  9123  0E54  087F               	movf	btemp+1,w
  9124  0E55  00F0               	movwf	i1DIO_voidWritePortValue@value
  9125  0E56  3003               	movlw	3
  9126  0E57  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9127                           
  9128                           ;SSD.c: 89:                     break;
  9129  0E5C  2EA0               	goto	i1l319
  9130  0E5D                     i1l3341:
  9131                           
  9132                           ;SSD.c: 91:                     DIO_voidWritePortValue(3, 0x6F);
  9133  0E5D  306F               	movlw	111
  9134  0E5E  00FF               	movwf	btemp+1
  9135  0E5F  087F               	movf	btemp+1,w
  9136  0E60  00F0               	movwf	i1DIO_voidWritePortValue@value
  9137  0E61  3003               	movlw	3
  9138  0E62  160A  118A  24B6  120A  158A  	fcall	i1_DIO_voidWritePortValue
  9139                           
  9140                           ;SSD.c: 92:                     break;
  9141  0E67  2EA0               	goto	i1l319
  9142  0E68                     i1l3345:
  9143  0E68  0878               	movf	SSD_Display@number,w
  9144  0E69  00F9               	movwf	??_SSD_Display
  9145  0E6A  01FA               	clrf	??_SSD_Display+1
  9146                           
  9147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9148                           ; Switch size 1, requested type "simple"
  9149                           ; Number of cases is 1, Range of values is 0 to 0
  9150                           ; switch strategies available:
  9151                           ; Name         Instructions Cycles
  9152                           ; simple_byte            4     3 (average)
  9153                           ; direct_byte           11     8 (fixed)
  9154                           ; jumptable            260     6 (fixed)
  9155                           ;	Chosen strategy is simple_byte
  9156  0E6B  087A               	movf	??_SSD_Display+1,w
  9157  0E6C  3A00               	xorlw	0	; case 0
  9158  0E6D  1903               	skipnz
  9159  0E6E  2E70               	goto	i1l4111
  9160  0E6F  2EA0               	goto	i1l319
  9161  0E70                     i1l4111:
  9162                           
  9163                           ; Switch size 1, requested type "simple"
  9164                           ; Number of cases is 10, Range of values is 0 to 9
  9165                           ; switch strategies available:
  9166                           ; Name         Instructions Cycles
  9167                           ; simple_byte           31    16 (average)
  9168                           ; direct_byte           38     8 (fixed)
  9169                           ; jumptable            260     6 (fixed)
  9170                           ;	Chosen strategy is simple_byte
  9171  0E70  0879               	movf	??_SSD_Display,w
  9172  0E71  3A00               	xorlw	0	; case 0
  9173  0E72  1903               	skipnz
  9174  0E73  2DFA               	goto	i1l3323
  9175  0E74  3A01               	xorlw	1	; case 1
  9176  0E75  1903               	skipnz
  9177  0E76  2E05               	goto	i1l3325
  9178  0E77  3A03               	xorlw	3	; case 2
  9179  0E78  1903               	skipnz
  9180  0E79  2E10               	goto	i1l3327
  9181  0E7A  3A01               	xorlw	1	; case 3
  9182  0E7B  1903               	skipnz
  9183  0E7C  2E1B               	goto	i1l3329
  9184  0E7D  3A07               	xorlw	7	; case 4
  9185  0E7E  1903               	skipnz
  9186  0E7F  2E26               	goto	i1l3331
  9187  0E80  3A01               	xorlw	1	; case 5
  9188  0E81  1903               	skipnz
  9189  0E82  2E31               	goto	i1l3333
  9190  0E83  3A03               	xorlw	3	; case 6
  9191  0E84  1903               	skipnz
  9192  0E85  2E3C               	goto	i1l3335
  9193  0E86  3A01               	xorlw	1	; case 7
  9194  0E87  1903               	skipnz
  9195  0E88  2E47               	goto	i1l3337
  9196  0E89  3A0F               	xorlw	15	; case 8
  9197  0E8A  1903               	skipnz
  9198  0E8B  2E52               	goto	i1l3339
  9199  0E8C  3A01               	xorlw	1	; case 9
  9200  0E8D  1903               	skipnz
  9201  0E8E  2E5D               	goto	i1l3341
  9202  0E8F  2EA0               	goto	i1l319
  9203  0E90                     i1l3349:
  9204  0E90  087B               	movf	SSD_Display@display_no,w
  9205  0E91  00F9               	movwf	??_SSD_Display
  9206  0E92  01FA               	clrf	??_SSD_Display+1
  9207                           
  9208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9209                           ; Switch size 1, requested type "simple"
  9210                           ; Number of cases is 1, Range of values is 0 to 0
  9211                           ; switch strategies available:
  9212                           ; Name         Instructions Cycles
  9213                           ; simple_byte            4     3 (average)
  9214                           ; direct_byte           11     8 (fixed)
  9215                           ; jumptable            260     6 (fixed)
  9216                           ;	Chosen strategy is simple_byte
  9217  0E93  087A               	movf	??_SSD_Display+1,w
  9218  0E94  3A00               	xorlw	0	; case 0
  9219  0E95  1903               	skipnz
  9220  0E96  2E98               	goto	i1l4113
  9221  0E97  2EA0               	goto	i1l319
  9222  0E98                     i1l4113:
  9223                           
  9224                           ; Switch size 1, requested type "simple"
  9225                           ; Number of cases is 2, Range of values is 0 to 1
  9226                           ; switch strategies available:
  9227                           ; Name         Instructions Cycles
  9228                           ; simple_byte            7     4 (average)
  9229                           ; direct_byte           14     8 (fixed)
  9230                           ; jumptable            260     6 (fixed)
  9231                           ;	Chosen strategy is simple_byte
  9232  0E98  0879               	movf	??_SSD_Display,w
  9233  0E99  3A00               	xorlw	0	; case 0
  9234  0E9A  1903               	skipnz
  9235  0E9B  2D44               	goto	i1l3295
  9236  0E9C  3A01               	xorlw	1	; case 1
  9237  0E9D  1903               	skipnz
  9238  0E9E  2DEA               	goto	i1l3321
  9239  0E9F  2EA0               	goto	i1l319
  9240  0EA0                     i1l319:
  9241  0EA0  0008               	return
  9242  0EA1                     __end_of_SSD_Display:
  9243                           
  9244                           	psect	text41
  9245  14B6                     __ptext41:	
  9246 ;; *************** function i1_DIO_voidWritePortValue *****************
  9247 ;; Defined at:
  9248 ;;		line 61 in file "DIO.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  Port            1    wreg     unsigned char 
  9251 ;;  value           1    0[COMMON] unsigned char 
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  Port            1    3[COMMON] unsigned char 
  9254 ;; Return value:  Size  Location     Type
  9255 ;;                  1    wreg      void 
  9256 ;; Registers used:
  9257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9258 ;; Tracked objects:
  9259 ;;		On entry : 0/0
  9260 ;;		On exit  : 0/0
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9263 ;;      Params:         1       0       0       0       0
  9264 ;;      Locals:         1       0       0       0       0
  9265 ;;      Temps:          2       0       0       0       0
  9266 ;;      Totals:         4       0       0       0       0
  9267 ;;Total ram usage:        4 bytes
  9268 ;; Hardware stack levels used:    1
  9269 ;; This function calls:
  9270 ;;		Nothing
  9271 ;; This function is called by:
  9272 ;;		_SSD_Display
  9273 ;;		i1_SSD_OFF
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           
  9278                           ;psect for function i1_DIO_voidWritePortValue
  9279  14B6                     i1_DIO_voidWritePortValue:
  9280                           
  9281                           ;incstack = 0
  9282                           ; Regs used in i1_DIO_voidWritePortValue: [wreg-fsr0h+status,2+status,0+btemp+1]
  9283                           ;i1DIO_voidWritePortValue@Port stored from wreg
  9284  14B6  00F3               	movwf	i1DIO_voidWritePortValue@Port
  9285  14B7                     i1l2983:
  9286                           
  9287                           ;DIO.c: 62:     switch (Port) {
  9288  14B7  2CDB               	goto	i1l2997
  9289  14B8                     i1l2985:
  9290                           
  9291                           ;DIO.c: 64:             *((uint8*)(0x05)) = value;
  9292  14B8  0870               	movf	i1DIO_voidWritePortValue@value,w
  9293  14B9  00FF               	movwf	btemp+1
  9294  14BA  087F               	movf	btemp+1,w
  9295  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  9296  14BC  1303               	bcf	3,6	;RP1=0, select bank0
  9297  14BD  0085               	movwf	5
  9298                           
  9299                           ;DIO.c: 65:             break;
  9300  14BE  2CF4               	goto	i1l30
  9301  14BF                     i1l2987:
  9302                           
  9303                           ;DIO.c: 67:             *((uint8*)(0x06)) = value;
  9304  14BF  0870               	movf	i1DIO_voidWritePortValue@value,w
  9305  14C0  00FF               	movwf	btemp+1
  9306  14C1  087F               	movf	btemp+1,w
  9307  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  9308  14C3  1303               	bcf	3,6	;RP1=0, select bank0
  9309  14C4  0086               	movwf	6
  9310                           
  9311                           ;DIO.c: 68:             break;
  9312  14C5  2CF4               	goto	i1l30
  9313  14C6                     i1l2989:
  9314                           
  9315                           ;DIO.c: 70:             *((uint8*)(0x07)) = value;
  9316  14C6  0870               	movf	i1DIO_voidWritePortValue@value,w
  9317  14C7  00FF               	movwf	btemp+1
  9318  14C8  087F               	movf	btemp+1,w
  9319  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  9320  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  9321  14CB  0087               	movwf	7
  9322                           
  9323                           ;DIO.c: 71:             break;
  9324  14CC  2CF4               	goto	i1l30
  9325  14CD                     i1l2991:
  9326                           
  9327                           ;DIO.c: 73:             *((uint8*)(0x08)) = value;
  9328  14CD  0870               	movf	i1DIO_voidWritePortValue@value,w
  9329  14CE  00FF               	movwf	btemp+1
  9330  14CF  087F               	movf	btemp+1,w
  9331  14D0  1283               	bcf	3,5	;RP0=0, select bank0
  9332  14D1  1303               	bcf	3,6	;RP1=0, select bank0
  9333  14D2  0088               	movwf	8
  9334                           
  9335                           ;DIO.c: 74:             break;
  9336  14D3  2CF4               	goto	i1l30
  9337  14D4                     i1l2993:
  9338                           
  9339                           ;DIO.c: 76:             *((uint8*)(0x09)) = value;
  9340  14D4  0870               	movf	i1DIO_voidWritePortValue@value,w
  9341  14D5  00FF               	movwf	btemp+1
  9342  14D6  087F               	movf	btemp+1,w
  9343  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  9344  14D8  1303               	bcf	3,6	;RP1=0, select bank0
  9345  14D9  0089               	movwf	9
  9346                           
  9347                           ;DIO.c: 77:             break;
  9348  14DA  2CF4               	goto	i1l30
  9349  14DB                     i1l2997:
  9350  14DB  0873               	movf	i1DIO_voidWritePortValue@Port,w
  9351  14DC  00F1               	movwf	??i1_DIO_voidWritePortValue
  9352  14DD  01F2               	clrf	??i1_DIO_voidWritePortValue+1
  9353                           
  9354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9355                           ; Switch size 1, requested type "simple"
  9356                           ; Number of cases is 1, Range of values is 0 to 0
  9357                           ; switch strategies available:
  9358                           ; Name         Instructions Cycles
  9359                           ; simple_byte            4     3 (average)
  9360                           ; direct_byte           11     8 (fixed)
  9361                           ; jumptable            260     6 (fixed)
  9362                           ;	Chosen strategy is simple_byte
  9363  14DE  0872               	movf	??i1_DIO_voidWritePortValue+1,w
  9364  14DF  3A00               	xorlw	0	; case 0
  9365  14E0  1903               	skipnz
  9366  14E1  2CE3               	goto	i1l4115
  9367  14E2  2CF4               	goto	i1l30
  9368  14E3                     i1l4115:
  9369                           
  9370                           ; Switch size 1, requested type "simple"
  9371                           ; Number of cases is 5, Range of values is 0 to 4
  9372                           ; switch strategies available:
  9373                           ; Name         Instructions Cycles
  9374                           ; simple_byte           16     9 (average)
  9375                           ; direct_byte           23     8 (fixed)
  9376                           ; jumptable            260     6 (fixed)
  9377                           ;	Chosen strategy is simple_byte
  9378  14E3  0871               	movf	??i1_DIO_voidWritePortValue,w
  9379  14E4  3A00               	xorlw	0	; case 0
  9380  14E5  1903               	skipnz
  9381  14E6  2CB8               	goto	i1l2985
  9382  14E7  3A01               	xorlw	1	; case 1
  9383  14E8  1903               	skipnz
  9384  14E9  2CBF               	goto	i1l2987
  9385  14EA  3A03               	xorlw	3	; case 2
  9386  14EB  1903               	skipnz
  9387  14EC  2CC6               	goto	i1l2989
  9388  14ED  3A01               	xorlw	1	; case 3
  9389  14EE  1903               	skipnz
  9390  14EF  2CCD               	goto	i1l2991
  9391  14F0  3A07               	xorlw	7	; case 4
  9392  14F1  1903               	skipnz
  9393  14F2  2CD4               	goto	i1l2993
  9394  14F3  2CF4               	goto	i1l30
  9395  14F4                     i1l30:
  9396  14F4  0008               	return
  9397  14F5                     __end_ofi1_DIO_voidWritePortValue:
  9398                           
  9399                           	psect	text42
  9400  0957                     __ptext42:	
  9401 ;; *************** function i1_DIO_voidWritePinValue *****************
  9402 ;; Defined at:
  9403 ;;		line 146 in file "DIO.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;  pin_num         1    wreg     unsigned char 
  9406 ;;  value           1    0[COMMON] unsigned char 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;  pin_num         1    3[COMMON] unsigned char 
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1    wreg      void 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0, btemp+1
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9418 ;;      Params:         1       0       0       0       0
  9419 ;;      Locals:         1       0       0       0       0
  9420 ;;      Temps:          2       0       0       0       0
  9421 ;;      Totals:         4       0       0       0       0
  9422 ;;Total ram usage:        4 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; This function calls:
  9425 ;;		Nothing
  9426 ;; This function is called by:
  9427 ;;		_SSD_Display
  9428 ;;		i1_SSD_OFF
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           
  9433                           ;psect for function i1_DIO_voidWritePinValue
  9434  0957                     i1_DIO_voidWritePinValue:
  9435                           
  9436                           ;incstack = 0
  9437                           ; Regs used in i1_DIO_voidWritePinValue: [wreg+status,2+status,0+btemp+1]
  9438                           ;i1DIO_voidWritePinValue@pin_num stored from wreg
  9439  0957  00F3               	movwf	i1DIO_voidWritePinValue@pin_num
  9440  0958                     i1l3003:
  9441                           
  9442                           ;DIO.c: 147:     if ((pin_num >= 0)&&(pin_num < 8)) {
  9443  0958  3008               	movlw	8
  9444  0959  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9445  095A  1803               	skipnc
  9446  095B  295D               	goto	u355_21
  9447  095C  295E               	goto	u355_20
  9448  095D                     u355_21:
  9449  095D  297D               	goto	i1l3007
  9450  095E                     u355_20:
  9451  095E                     i1l3005:
  9452                           
  9453                           ;DIO.c: 148:         ((*((uint8*)(0x05))) = (((*((uint8*)(0x05))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  9454  095E  0870               	movf	i1DIO_voidWritePinValue@value,w
  9455  095F  00F1               	movwf	??i1_DIO_voidWritePinValue
  9456  0960  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9457  0961  3907               	andlw	7
  9458  0962  3E01               	addlw	1
  9459  0963  2966               	goto	u356_24
  9460  0964                     u356_25:
  9461  0964  1003               	clrc
  9462  0965  0DF1               	rlf	??i1_DIO_voidWritePinValue,f
  9463  0966                     u356_24:
  9464  0966  3EFF               	addlw	-1
  9465  0967  1D03               	skipz
  9466  0968  2964               	goto	u356_25
  9467  0969  3001               	movlw	1
  9468  096A  00F2               	movwf	??i1_DIO_voidWritePinValue+1
  9469  096B  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9470  096C  3907               	andlw	7
  9471  096D  3E01               	addlw	1
  9472  096E  2971               	goto	u357_24
  9473  096F                     u357_25:
  9474  096F  1003               	clrc
  9475  0970  0DF2               	rlf	??i1_DIO_voidWritePinValue+1,f
  9476  0971                     u357_24:
  9477  0971  3EFF               	addlw	-1
  9478  0972  1D03               	skipz
  9479  0973  296F               	goto	u357_25
  9480  0974  0872               	movf	??i1_DIO_voidWritePinValue+1,w
  9481  0975  3AFF               	xorlw	255
  9482  0976  1283               	bcf	3,5	;RP0=0, select bank0
  9483  0977  1303               	bcf	3,6	;RP1=0, select bank0
  9484  0978  0505               	andwf	5,w
  9485  0979  0471               	iorwf	??i1_DIO_voidWritePinValue,w
  9486  097A  00FF               	movwf	btemp+1
  9487  097B  087F               	movf	btemp+1,w
  9488  097C  0085               	movwf	5
  9489  097D                     i1l3007:
  9490                           
  9491                           ;DIO.c: 150:     if ((pin_num >= 8)&&(pin_num < 16)) {
  9492  097D  3008               	movlw	8
  9493  097E  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9494  097F  1C03               	skipc
  9495  0980  2982               	goto	u358_21
  9496  0981  2983               	goto	u358_20
  9497  0982                     u358_21:
  9498  0982  29A8               	goto	i1l3013
  9499  0983                     u358_20:
  9500  0983                     i1l3009:
  9501  0983  3010               	movlw	16
  9502  0984  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9503  0985  1803               	skipnc
  9504  0986  2988               	goto	u359_21
  9505  0987  2989               	goto	u359_20
  9506  0988                     u359_21:
  9507  0988  29A8               	goto	i1l3013
  9508  0989                     u359_20:
  9509  0989                     i1l3011:
  9510                           
  9511                           ;DIO.c: 151:         ((*((uint8*)(0x06))) = (((*((uint8*)(0x06))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  9512  0989  0870               	movf	i1DIO_voidWritePinValue@value,w
  9513  098A  00F1               	movwf	??i1_DIO_voidWritePinValue
  9514  098B  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9515  098C  3907               	andlw	7
  9516  098D  3E01               	addlw	1
  9517  098E  2991               	goto	u360_24
  9518  098F                     u360_25:
  9519  098F  1003               	clrc
  9520  0990  0DF1               	rlf	??i1_DIO_voidWritePinValue,f
  9521  0991                     u360_24:
  9522  0991  3EFF               	addlw	-1
  9523  0992  1D03               	skipz
  9524  0993  298F               	goto	u360_25
  9525  0994  3001               	movlw	1
  9526  0995  00F2               	movwf	??i1_DIO_voidWritePinValue+1
  9527  0996  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9528  0997  3907               	andlw	7
  9529  0998  3E01               	addlw	1
  9530  0999  299C               	goto	u361_24
  9531  099A                     u361_25:
  9532  099A  1003               	clrc
  9533  099B  0DF2               	rlf	??i1_DIO_voidWritePinValue+1,f
  9534  099C                     u361_24:
  9535  099C  3EFF               	addlw	-1
  9536  099D  1D03               	skipz
  9537  099E  299A               	goto	u361_25
  9538  099F  0872               	movf	??i1_DIO_voidWritePinValue+1,w
  9539  09A0  3AFF               	xorlw	255
  9540  09A1  1283               	bcf	3,5	;RP0=0, select bank0
  9541  09A2  1303               	bcf	3,6	;RP1=0, select bank0
  9542  09A3  0506               	andwf	6,w
  9543  09A4  0471               	iorwf	??i1_DIO_voidWritePinValue,w
  9544  09A5  00FF               	movwf	btemp+1
  9545  09A6  087F               	movf	btemp+1,w
  9546  09A7  0086               	movwf	6
  9547  09A8                     i1l3013:
  9548                           
  9549                           ;DIO.c: 153:     if ((pin_num >= 16)&&(pin_num < 24)) {
  9550  09A8  3010               	movlw	16
  9551  09A9  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9552  09AA  1C03               	skipc
  9553  09AB  29AD               	goto	u362_21
  9554  09AC  29AE               	goto	u362_20
  9555  09AD                     u362_21:
  9556  09AD  29D3               	goto	i1l3019
  9557  09AE                     u362_20:
  9558  09AE                     i1l3015:
  9559  09AE  3018               	movlw	24
  9560  09AF  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9561  09B0  1803               	skipnc
  9562  09B1  29B3               	goto	u363_21
  9563  09B2  29B4               	goto	u363_20
  9564  09B3                     u363_21:
  9565  09B3  29D3               	goto	i1l3019
  9566  09B4                     u363_20:
  9567  09B4                     i1l3017:
  9568                           
  9569                           ;DIO.c: 154:         ((*((uint8*)(0x07))) = (((*((uint8*)(0x07))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  9570  09B4  0870               	movf	i1DIO_voidWritePinValue@value,w
  9571  09B5  00F1               	movwf	??i1_DIO_voidWritePinValue
  9572  09B6  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9573  09B7  3907               	andlw	7
  9574  09B8  3E01               	addlw	1
  9575  09B9  29BC               	goto	u364_24
  9576  09BA                     u364_25:
  9577  09BA  1003               	clrc
  9578  09BB  0DF1               	rlf	??i1_DIO_voidWritePinValue,f
  9579  09BC                     u364_24:
  9580  09BC  3EFF               	addlw	-1
  9581  09BD  1D03               	skipz
  9582  09BE  29BA               	goto	u364_25
  9583  09BF  3001               	movlw	1
  9584  09C0  00F2               	movwf	??i1_DIO_voidWritePinValue+1
  9585  09C1  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9586  09C2  3907               	andlw	7
  9587  09C3  3E01               	addlw	1
  9588  09C4  29C7               	goto	u365_24
  9589  09C5                     u365_25:
  9590  09C5  1003               	clrc
  9591  09C6  0DF2               	rlf	??i1_DIO_voidWritePinValue+1,f
  9592  09C7                     u365_24:
  9593  09C7  3EFF               	addlw	-1
  9594  09C8  1D03               	skipz
  9595  09C9  29C5               	goto	u365_25
  9596  09CA  0872               	movf	??i1_DIO_voidWritePinValue+1,w
  9597  09CB  3AFF               	xorlw	255
  9598  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  9599  09CD  1303               	bcf	3,6	;RP1=0, select bank0
  9600  09CE  0507               	andwf	7,w
  9601  09CF  0471               	iorwf	??i1_DIO_voidWritePinValue,w
  9602  09D0  00FF               	movwf	btemp+1
  9603  09D1  087F               	movf	btemp+1,w
  9604  09D2  0087               	movwf	7
  9605  09D3                     i1l3019:
  9606                           
  9607                           ;DIO.c: 156:     if ((pin_num >= 24)&&(pin_num < 32)) {
  9608  09D3  3018               	movlw	24
  9609  09D4  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9610  09D5  1C03               	skipc
  9611  09D6  29D8               	goto	u366_21
  9612  09D7  29D9               	goto	u366_20
  9613  09D8                     u366_21:
  9614  09D8  29FE               	goto	i1l3025
  9615  09D9                     u366_20:
  9616  09D9                     i1l3021:
  9617  09D9  3020               	movlw	32
  9618  09DA  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9619  09DB  1803               	skipnc
  9620  09DC  29DE               	goto	u367_21
  9621  09DD  29DF               	goto	u367_20
  9622  09DE                     u367_21:
  9623  09DE  29FE               	goto	i1l3025
  9624  09DF                     u367_20:
  9625  09DF                     i1l3023:
  9626                           
  9627                           ;DIO.c: 157:         ((*((uint8*)(0x08))) = (((*((uint8*)(0x08))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  9628  09DF  0870               	movf	i1DIO_voidWritePinValue@value,w
  9629  09E0  00F1               	movwf	??i1_DIO_voidWritePinValue
  9630  09E1  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9631  09E2  3907               	andlw	7
  9632  09E3  3E01               	addlw	1
  9633  09E4  29E7               	goto	u368_24
  9634  09E5                     u368_25:
  9635  09E5  1003               	clrc
  9636  09E6  0DF1               	rlf	??i1_DIO_voidWritePinValue,f
  9637  09E7                     u368_24:
  9638  09E7  3EFF               	addlw	-1
  9639  09E8  1D03               	skipz
  9640  09E9  29E5               	goto	u368_25
  9641  09EA  3001               	movlw	1
  9642  09EB  00F2               	movwf	??i1_DIO_voidWritePinValue+1
  9643  09EC  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9644  09ED  3907               	andlw	7
  9645  09EE  3E01               	addlw	1
  9646  09EF  29F2               	goto	u369_24
  9647  09F0                     u369_25:
  9648  09F0  1003               	clrc
  9649  09F1  0DF2               	rlf	??i1_DIO_voidWritePinValue+1,f
  9650  09F2                     u369_24:
  9651  09F2  3EFF               	addlw	-1
  9652  09F3  1D03               	skipz
  9653  09F4  29F0               	goto	u369_25
  9654  09F5  0872               	movf	??i1_DIO_voidWritePinValue+1,w
  9655  09F6  3AFF               	xorlw	255
  9656  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  9657  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  9658  09F9  0508               	andwf	8,w
  9659  09FA  0471               	iorwf	??i1_DIO_voidWritePinValue,w
  9660  09FB  00FF               	movwf	btemp+1
  9661  09FC  087F               	movf	btemp+1,w
  9662  09FD  0088               	movwf	8
  9663  09FE                     i1l3025:
  9664                           
  9665                           ;DIO.c: 159:     if ((pin_num >= 32)&&(pin_num <= 34)) {
  9666  09FE  3020               	movlw	32
  9667  09FF  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9668  0A00  1C03               	skipc
  9669  0A01  2A03               	goto	u370_21
  9670  0A02  2A04               	goto	u370_20
  9671  0A03                     u370_21:
  9672  0A03  2A29               	goto	i1l65
  9673  0A04                     u370_20:
  9674  0A04                     i1l3027:
  9675  0A04  3023               	movlw	35
  9676  0A05  0273               	subwf	i1DIO_voidWritePinValue@pin_num,w
  9677  0A06  1803               	skipnc
  9678  0A07  2A09               	goto	u371_21
  9679  0A08  2A0A               	goto	u371_20
  9680  0A09                     u371_21:
  9681  0A09  2A29               	goto	i1l65
  9682  0A0A                     u371_20:
  9683  0A0A                     i1l3029:
  9684                           
  9685                           ;DIO.c: 160:         ((*((uint8*)(0x09))) = (((*((uint8*)(0x09))) & ( ~(1 << (pin_num % 
      +                          8))))|(value << pin_num % 8)));
  9686  0A0A  0870               	movf	i1DIO_voidWritePinValue@value,w
  9687  0A0B  00F1               	movwf	??i1_DIO_voidWritePinValue
  9688  0A0C  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9689  0A0D  3907               	andlw	7
  9690  0A0E  3E01               	addlw	1
  9691  0A0F  2A12               	goto	u372_24
  9692  0A10                     u372_25:
  9693  0A10  1003               	clrc
  9694  0A11  0DF1               	rlf	??i1_DIO_voidWritePinValue,f
  9695  0A12                     u372_24:
  9696  0A12  3EFF               	addlw	-1
  9697  0A13  1D03               	skipz
  9698  0A14  2A10               	goto	u372_25
  9699  0A15  3001               	movlw	1
  9700  0A16  00F2               	movwf	??i1_DIO_voidWritePinValue+1
  9701  0A17  0873               	movf	i1DIO_voidWritePinValue@pin_num,w
  9702  0A18  3907               	andlw	7
  9703  0A19  3E01               	addlw	1
  9704  0A1A  2A1D               	goto	u373_24
  9705  0A1B                     u373_25:
  9706  0A1B  1003               	clrc
  9707  0A1C  0DF2               	rlf	??i1_DIO_voidWritePinValue+1,f
  9708  0A1D                     u373_24:
  9709  0A1D  3EFF               	addlw	-1
  9710  0A1E  1D03               	skipz
  9711  0A1F  2A1B               	goto	u373_25
  9712  0A20  0872               	movf	??i1_DIO_voidWritePinValue+1,w
  9713  0A21  3AFF               	xorlw	255
  9714  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  9715  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  9716  0A24  0509               	andwf	9,w
  9717  0A25  0471               	iorwf	??i1_DIO_voidWritePinValue,w
  9718  0A26  00FF               	movwf	btemp+1
  9719  0A27  087F               	movf	btemp+1,w
  9720  0A28  0089               	movwf	9
  9721  0A29                     i1l65:
  9722  0A29  0008               	return
  9723  0A2A                     __end_ofi1_DIO_voidWritePinValue:
  9724  0002                     
  9725                           	psect	functab
  9726  002A                     __pfunctab:
  9727  002A                     fptable:
  9728  002A  282A               	goto	fptable	;no entries
  9729  002B                     __i1fptable:
  9730  002B                     i1fptable:
  9731  002B  00FF               	movwf	(btemp+1)& (0+127)
  9732  002C  3000               	movlw	high i1fptable
  9733  002D  008A               	movwf	10
  9734  002E  087F               	movf	(btemp+1)& (0+127),w
  9735  002F  0782               	addwf	2,f
  9736  0030                     i1fpbase:
  9737  0030  2830               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  9738  0031                     fp__Sch_UpdateTick_Handler:
  9739  0031  120A  118A  2B95   	ljmp	_Sch_UpdateTick_Handler
  9740  0034                     __end_of__i1fptable:
  9741  007E                     btemp	set	126	;btemp
  9742  007E                     wtemp0	set	126
  9743                           
  9744                           	psect	config
  9745                           
  9746                           ;Config register CONFIG @ 0x2007
  9747                           ;	Oscillator Selection bits
  9748                           ;	FOSC = XT, XT oscillator
  9749                           ;	Watchdog Timer Enable bit
  9750                           ;	WDTE = OFF, WDT disabled
  9751                           ;	Power-up Timer Enable bit
  9752                           ;	PWRTE = OFF, PWRT disabled
  9753                           ;	Brown-out Reset Enable bit
  9754                           ;	BOREN = OFF, BOR disabled
  9755                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9756                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9757                           ;	Data EEPROM Memory Code Protection bit
  9758                           ;	CPD = OFF, Data EEPROM code protection off
  9759                           ;	Flash Program Memory Write Enable bits
  9760                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9761                           ;	In-Circuit Debugger Mode bit
  9762                           ;	DEBUG = 0x1, unprogrammed default
  9763                           ;	Flash Program Memory Code Protection bit
  9764                           ;	CP = OFF, Code protection off
  9765  2007                     	org	8199
  9766  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      71
    BANK1            80     11      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    TMR0_vidSetCallBack@CallBack	PTR FTN()void  size(1) Largest target is 1
		 -> Sch_UpdateTick_Handler(), 

    CallBack_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), Sch_UpdateTick_Handler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TMR_Update in COMMON

    i1_SSD_OFF->i1_DIO_voidWritePinValue
    i1_SSD_OFF->i1_DIO_voidWritePortValue
    _sw_voidtask->_DIO_U8ReadPinValue
    _UPDATE_TEMP->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _SSD_Display->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR_Update in BANK0

    _TMR_Update->_Sch_UpdateTick_Handler
    _Sch_UpdateTick_Handler->_UPDATE_TEMP
    _UPDATE_TEMP->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_Sch_Start
    _sw_int->_DIO_voidInitPin
    _Sch_Start->_EEPROM_Read
    _SSD_OFF->_DIO_voidWritePinValue
    _SSD_OFF->_DIO_voidWritePortValue
    _EEPROM_Read->_I2C_Master_Read
    _I2C_Nack->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _DO_SetState->_DIO_voidWritePinValue
    _Sch_Init->_EEPROM_Write
    _EEPROM_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _SSD_Init->_DIO_voidInitPin
    _SSD_Init->_DIO_voidInitPort
    _DO_Init->_DIO_voidInitPin

Critical Paths under _TMR_Update in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR_Update in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR_Update in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8826
                           _ADC_Init
                            _DO_Init
                    _I2C_Master_Init
                           _SSD_Init
                           _Sch_Init
                          _Sch_Start
                _TMR0_vidSetCallBack
                           _TMR_Init
                          _TMR_Start
                             _sw_int
 ---------------------------------------------------------------------------------
 (1) _sw_int                                               0     0      0    1246
                    _DIO_voidInitPin
 ---------------------------------------------------------------------------------
 (1) _TMR_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR_Init                                             2     2      0      23
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_vidSetCallBack                                  1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Sch_Start                                            4     4      0    4431
                                              7 BANK1      4     4      0
                        _DO_SetState
                        _EEPROM_Read
                       _EEPROM_Write
                            _SSD_OFF
 ---------------------------------------------------------------------------------
 (2) _SSD_OFF                                              0     0      0    2164
              _DIO_voidWritePinValue
             _DIO_voidWritePortValue
 ---------------------------------------------------------------------------------
 (3) _DIO_voidWritePortValue                               4     3      1    1208
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          2     2      0      91
                                              5 BANK1      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Nack
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     4      0      24
                                              1 BANK1      4     4      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _DO_SetState                                          2     1      1    1836
                                              4 BANK1      2     1      1
              _DIO_voidWritePinValue
 ---------------------------------------------------------------------------------
 (3) _DIO_voidWritePinValue                                4     3      1     956
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Sch_Init                                             0     0      0     294
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     294
                                              3 BANK1      2     1      1
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     2      0      22
                                              1 BANK1      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SSD_Init                                             0     0      0    1564
                    _DIO_voidInitPin
                   _DIO_voidInitPort
 ---------------------------------------------------------------------------------
 (2) _DIO_voidInitPort                                     4     3      1     318
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_Init                                              0     0      0    1246
                    _DIO_voidInitPin
 ---------------------------------------------------------------------------------
 (2) _DIO_voidInitPin                                      4     3      1    1246
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TMR_Update                                           4     4      0    9486
                                             56 BANK0      4     4      0
                   Absolute function *
             _Sch_UpdateTick_Handler *
 ---------------------------------------------------------------------------------
 (6) _Sch_UpdateTick_Handler                              18    18      0    9486
                                             38 BANK0     18    18      0
                        _SSD_Display
                        _UPDATE_TEMP
                            ___awdiv
                            ___awmod
                            ___llmod
                        _sw_voidtask
                          i1_SSD_OFF
 ---------------------------------------------------------------------------------
 (7) i1_SSD_OFF                                            0     0      0    1362
            i1_DIO_voidWritePinValue
           i1_DIO_voidWritePortValue
 ---------------------------------------------------------------------------------
 (7) _sw_voidtask                                          2     2      0     335
                                              3 COMMON     2     2      0
                 _DIO_U8ReadPinValue
 ---------------------------------------------------------------------------------
 (8) _DIO_U8ReadPinValue                                   3     3      0     335
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                             10     2      8    1375
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     600
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     756
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _UPDATE_TEMP                                          2     2      0    3236
                                             36 BANK0      2     2      0
                           _ADC_Read
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     305
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _ADC_Read                                             9     7      2      92
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _SSD_Display                                          4     3      1    1732
                                              8 COMMON     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
            i1_DIO_voidWritePinValue
           i1_DIO_voidWritePortValue
 ---------------------------------------------------------------------------------
 (8) i1_DIO_voidWritePortValue                             4     3      1     678
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) i1_DIO_voidWritePinValue                              4     3      1     684
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _DO_Init
     _DIO_voidInitPin
   _I2C_Master_Init
   _SSD_Init
     _DIO_voidInitPin
     _DIO_voidInitPort
   _Sch_Init
     _EEPROM_Write
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _Sch_Start
     _DO_SetState
       _DIO_voidWritePinValue
     _EEPROM_Read
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_Nack
         _I2C_Master_Wait
     _EEPROM_Write
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _SSD_OFF
       _DIO_voidWritePinValue
       _DIO_voidWritePortValue
   _TMR0_vidSetCallBack
   _TMR_Init
   _TMR_Start
   _sw_int
     _DIO_voidInitPin

 _TMR_Update (ROOT)
   Absolute function(Fake) *
   _Sch_UpdateTick_Handler *
     _SSD_Display
       ___awdiv (ARG)
       ___awmod (ARG)
       i1_DIO_voidWritePinValue (ARG)
       i1_DIO_voidWritePortValue (ARG)
     _UPDATE_TEMP
       _ADC_Read
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     ___awdiv
     ___awmod
     ___llmod
     _sw_voidtask
       _DIO_U8ReadPinValue
     i1_SSD_OFF
       i1_DIO_voidWritePinValue
       i1_DIO_voidWritePortValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      74       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      B      1F       7       38.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      74      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 18 10:34:34 2020

                                pc 0002                                 l20 1783  
                               l30 1535                                 l57 0D41  
                               l65 0B1A              SSD_Display@display_no 007B  
                     ___awdiv@sign 0075                                 fsr 0004  
                _ON_OFFpushed_flag 00B1                __Umul8_16@word_mpld 0076  
                       _TMR_Update 12F8                                l100 14B3  
                              l110 0837                                l112 0854  
                              l121 12A7                                l114 0864  
                              l115 089C                                l132 1386  
                              l108 0817                                l118 12CF  
                              l233 141D                                l250 128B  
                              l322 134A                                l244 1367  
                              l332 12C1                                l262 147F  
                              l247 1294                                l271 144D  
                              l239 15BC                                l256 1578  
                              l329 13C7                                l265 129D  
                              l169 13A5                                l371 12E1  
                              l277 12B3                                l375 0FEA  
                              l288 132E          __size_of_DIO_voidInitPort 006E  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0075       i1DIO_voidWritePinValue@value 0070  
                     ___flmul@aexp 0032                       ___flmul@bexp 0033  
                     ___flmul@sign 002D                       ___flmul@temp 0038  
                     ___flmul@prod 0034                       ___fltol@exp1 0043  
                             l3101 0C73                               l3111 0C9A  
                             l3103 0C79                               l3031 1719  
                             l3121 0CCC                               l3113 0CAA  
                             l3105 0C7F                               l3041 172A  
                             l3033 171A                               l3131 0CFE  
                             l3123 0CDC                               l3115 0CB0  
                             l3107 0C8E                               l3051 173F  
                             l3043 172F                               l3035 171F  
                             l3133 0D04                               l3125 0CE2  
                             l3117 0CC0                               l3109 0C94  
                             l3061 1753                               l3053 1743  
                             l3045 1733                               l3037 1723  
                             l3135 0D14                               l3127 0CE8  
                             l3119 0CC6                               l3143 0D31  
                             l3071 1768                               l3063 1758  
                             l3055 1748                               l3047 1738  
                             l3039 1728                               l3137 0D1A  
                             l3129 0CF8                               l3065 175A  
                             l3057 174A                               l3049 173A  
                             l2601 0A2D                               l3139 0D20  
                             l3091 0C43                               l3083 0C27  
                             l3067 175F                               l3059 174F  
                             l3075 176A                               l2611 0A87  
                             l2603 0A33                               l3093 0C49  
                             l3085 0C28                               l3069 1763  
                             l3261 13F2                               l2621 0AC6  
                             l2613 0A8F                               l2605 0A56  
                             l3095 0C58                               l3087 0C2E  
                             l2551 1536                               l2711 1283  
                             l3263 13F8                               l2623 0AE9  
                             l2615 0A95                               l2607 0A5E  
                             l3271 157C                               l3503 0869  
                             l3097 0C5E                               l3089 0C3D  
                             l2561 1560                               l2553 1536  
                             l2713 1288                               l2721 146D  
                             l3265 13FD                               l2625 0AF1  
                             l2617 0AB8                               l2609 0A64  
                             l3281 159F                               l3273 1582  
                             l3601 0F30                               l3521 12C5  
                             l3531 1371                               l3099 0C64  
                             l2563 156C                               l2555 1544  
                             l2707 128C                               l2723 1473  
                             l2715 1451                               l3267 1408  
                             l2627 0AF7                               l2619 0AC0  
                             l2731 141E                               l3283 15A5  
                             l3275 1587                               l3363 132F  
                             l4091 0FF4                               l3611 0F78  
                             l3603 0F33                               l3507 086E  
                             l3523 12C9                               l3541 1381  
                             l3533 1372                               l3525 1313  
                             l2557 1548                               l2709 1291  
                             l2717 1456                               l3269 1418  
                             l2741 143C                               l2733 141E  
                             l3285 15AF                               l3277 1592  
                             l4093 1524                               l2581 14F9  
                             l3365 1341                               l3621 0F8E  
                             l3613 0F7F                               l3605 0F47  
                             l3509 0892                               l3543 1385  
                             l3535 1375                               l3527 1368  
                             l3551 134B                               l4095 1772  
                             l2559 1554                               l2727 1295  
                             l2719 145E                               l3367 12B7  
                             l2743 1441                               l2735 1423  
                             l2751 12AB                               l3287 15B4  
                             l3279 159A                               l2583 1500  
                             l3631 0FAC                               l3623 0F92  
                             l3615 0F81                               l3607 0F5A  
                             l4087 0876                               l3519 12C2  
                             l3537 1379                               l3529 136E  
                             l4097 0D39                               l3553 1354  
                             l2729 129A                               l3561 12D6  
                             l2745 144C                               l2737 1426  
                             l2753 12B0                               l3289 15B9  
                             l2585 1507                               l2593 151C  
                             l3641 0FC5                               l3633 0FB0  
                             l3625 0F93                               l3617 0F86  
                             l3609 0F5F                               l4089 088D  
                             l3481 081A                               l3545 1387  
                             l3721 1480                               l3539 137D  
                             l3547 13A6                               l3555 1360  
                             l3563 12D7                               l2739 1436  
                             l2587 150E                               l2579 14F8  
                             l3635 0FB6                               l3643 0FCF  
                             l3627 0F9D                               l3619 0F88  
                             l3571 0EBB                               l3651 0FEA  
                             l3491 084E                               l3483 0827  
                             l3731 14AE                               l3723 1485  
                             l3549 13C1                               l3557 1363  
                             l2749 12A8                               l2589 1515  
                             l3645 0FE1                               l3637 0FBA  
                             l3629 0FA7                               l3581 0ED6  
                             l3573 0EC0                               l3565 12A1  
                             l3493 0857                               l3485 082D  
                             l3477 0803                               l3725 148A  
                             l3559 12D0                               l3639 0FBB  
                             l3591 0EEE                               l3583 0EDB  
                             l3575 0EC7                               l3567 0EA1  
                             l3487 083B                               l3479 0804  
                             l3727 1494                               l3593 0EF2  
                             l3585 0EE0                               l3577 0EC8  
                             l3569 0EA2                               l3497 085C  
                             l3489 0844                               l3729 1499  
                             l3595 0EFA                               l3587 0EE7  
                             l3579 0ECB                               l3499 0862  
                             l3597 0EFD                               l3589 0EEC  
                             l3599 0F13                    __end_of_DO_Init 13C8  
                             u4000 0CC6                               u4001 0CC5  
                             u4010 0CCC                               u2410 1544  
                             u4011 0CCB                               u2411 1543  
                             u4100 0D20                               u2500 1578  
                             u2420 1548                               u4101 0D1F  
                             u2501 1577                               u2421 1547  
                             u2405 153B                               u4030 0CE2  
                             u4031 0CE1                               u4040 0CE8  
                             u4024 0CD4                               u2440 1554  
                             u4041 0CE7                               u4025 0CD2  
                             u2441 1553                               u4114 0D28  
                             u2610 0A8F                               u4115 0D26  
                             u2435 154B                               u2611 0A8E  
                             u4060 0CFE                               u2460 1560  
                             u4300 1408                               u2700 0AF7  
                             u2620 0A95                               u2604 0A77  
                             u2540 0A33                               u4061 0CFD  
                             u2461 155F                               u4301 1407  
                             u2701 0AF6                               u2621 0A94  
                             u2605 0A75                               u2541 0A32  
                             u4070 0D04                               u4054 0CF0  
                             u4310 1592                               u4071 0D03  
                             u4055 0CEE                               u2455 1557  
                             u4311 1591                               u2480 156C  
                             u2481 156B                               u4090 0D1A  
                             u2714 0AFF                               u2650 0AC0  
                             u2634 0A9D                               u2570 0A5E  
                             u2554 0A3B                               u4091 0D19  
                             u2475 1563                               u2715 0AFD  
                             u2651 0ABF                               u2635 0A9B  
                             u2571 0A5D                               u2555 0A39  
                             u4084 0D0C                               u2900 146D  
                             u2724 0B0A                               u2660 0AC6  
                             u2644 0AA8                               u2580 0A64  
                             u2564 0A46                               u4085 0D0A  
                             u2901 146C                               u2725 0B08  
                             u2661 0AC5                               u2645 0AA6  
                             u2581 0A63                               u2565 0A44  
                             u2495 156F                               u3800 174F  
                             u4600 0EEC                               u3801 174E  
                             u4601 0EEB                               u3810 1758  
                             u2690 0AF1                               u2674 0ACE  
                             u2594 0A6C                               u2930 1436  
                             u4610 0F13                               u3811 1757  
                             u2915 1478                               u2691 0AF0  
                             u2675 0ACC                               u2595 0A6A  
                             u2931 1435                               u4611 0F12  
                             u3900 0C64                               u3820 175F  
                             u3740 171F                               u2684 0AD9  
                             u4620 0F47                               u3901 0C63  
                             u3821 175E                               u3741 171E  
                             u2685 0AD7                               u2925 142D  
                             u4621 0F46                               i1l30 14F4  
                             u3830 1768                               u3750 1728  
                             u4630 0F7F                               u3831 1767  
                             u3751 1727                               u4631 0F7E  
                             u4615 0F0F                               u3920 0C79  
                             u3840 0C2E                               u3760 172F  
                             u4640 0F86                               u3921 0C78  
                             u3841 0C2D                               u3761 172E  
                             u4641 0F85                               u4625 0F43  
                             u3930 0C7F                               u3914 0C6C  
                             u3770 1738                               u4650 0F8E  
                             u4570 0EC7                               u3931 0C7E  
                             u3915 0C6A                               u3771 1737  
                             u4651 0F8D                               u4571 0EC6  
                             u3860 0C43                               u3780 173F  
                             u4660 0FAC                               u4580 0EDB  
                             u3861 0C42                               u3781 173E  
                             u4661 0FAB                               u4581 0EDA  
                             u3950 0C94                               u3870 0C49  
                             u3854 0C36                               u3790 1748  
                             u4670 0FB6                               u4590 0EE7  
                             u3951 0C93                               u3871 0C48  
                             u3855 0C34                               u3791 1747  
                             u2895 1464                               u4671 0FB5  
                             u4591 0EE6                               u3960 0C9A  
                             u3944 0C87                               u4680 0FE1  
                             i1l65 0A29                               i1l73 07FC  
                             u3961 0C99                               u3945 0C85  
                             u4681 0FE0                               u3890 0C5E  
                             u3891 0C5D                               u4683 0FDD  
                             u3980 0CB0                               u3884 0C51  
                             u3981 0CAF                               u3885 0C4F  
                             u3974 0CA2                               u3975 0CA0  
               _DIO_U8ReadPinValue 076A                               u3994 0CB8  
                             u3995 0CB6                        _sw_voidtask 05FD  
 __end_of_I2C_Master_RepeatedStart 128C                               _main 1480  
                 __end_of_I2C_Nack 12B4                    __end_of_SSD_OFF 134B  
                             _temp 0061                               btemp 007E  
                 __end_of_ADC_Init 1387                   __end_of_ADC_Read 0C24  
                             start 0012    __size_of_Sch_UpdateTick_Handler 0268  
              ?_DIO_U8ReadPinValue 0070                       _CallBack_ptr 0066  
      TMR0_vidSetCallBack@CallBack 00B4               __end_of_EEPROM_Write 141E  
                 ?_I2C_Master_Init 0070                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                    ___fltol@sign1 0042              I2C_Master_Read@buffer 00B7  
                            ?_main 0070                    __end_of___awdiv 1716  
                  __end_of___awmod 16AF                    __end_of___flmul 0395  
                  __end_of___fltol 1800                 __size_ofi1_SSD_OFF 0016  
                  ___awdiv@divisor 0070                    __end_of___llmod 1656  
                            i1l203 071F                              i1l215 1601  
                            i1l208 0769                              i1l137 0BF3  
                            i1l129 1306                              i1l322 12F7  
                            i1l148 0C23                              i1l413 05FC  
                            i1l319 0EA0                              i1l191 06A6  
                            i1l179 062D                              i1l721 1655  
                            i1l900 0388                              i1l652 1715  
                            i1l665 16AE                              i1l907 13DC  
                            i1l692 17EA                              i1l932 08BF  
                            i1l909 13EE                              i1l685 17FF  
                            i1l934 0956                              i1l695 17FF  
                            i1l945 0920                              i1l946 092C  
                            i1l894 0300                              i1l888 0394  
                  ___awdiv@counter 0074               ??_DIO_U8ReadPinValue 0070  
                     ?_DO_SetState 00B8                              _state 00AE  
                            fpbase 0000                   __end_of_SSD_Init 132F  
                  _DIO_voidInitPin 0C24                              pclath 000A  
                 __end_of_TMR_Init 089D       __size_of_TMR0_vidSetCallBack 000A  
                            status 0003                              wtemp0 007E  
                 EEPROM_Write@data 00B7            i1_DIO_voidWritePinValue 0957  
             __size_of_EEPROM_Read 0044                 __size_of_TMR_Start 000E  
                    _UPpushed_flag 00B3                    __initialization 0015  
 __end_ofi1_DIO_voidWritePortValue 14F5                       __end_of_main 14B6  
                 __end_of_Sch_Init 12E2                             ??_main 00BF  
                      ?_TMR_Update 0070             _Sch_UpdateTick_Handler 0395  
                ?_I2C_Master_Start 0070                          ??_DO_Init 00B8  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 00B5  
               ??_I2C_Master_Write 00B5                          ??_SSD_OFF 00B8  
                 ___llmod@dividend 0074                          ADC_Read@A 0077  
                        ADC_Read@E 0078                   ___awdiv@dividend 0072  
               ADC_Read@ADC_result 0075                             i1l3011 0989  
                           i1l3003 0958                             i1l3021 09D9  
                           i1l3013 09A8                             i1l3005 095E  
                           i1l3023 09DF                             i1l3015 09AE  
                           i1l3007 097D                             i1l3025 09FE  
                           i1l3017 09B4                             i1l3009 0983  
                           i1l3201 06BC                             i1l3027 0A04  
                           i1l3019 09D3                             i1l3203 06C7  
                           i1l3211 06D8                             i1l3029 0A0A  
                           i1l3301 0D6A                             i1l3221 0711  
                           i1l3213 06F0                             i1l3205 06CD  
                           i1l4101 0669                             i1l4111 0E70  
                           i1l3311 0DA1                             i1l3303 0D75  
                           i1l3231 0735                             i1l3223 0719  
                           i1l3215 06FB                             i1l4103 06E2  
                           i1l3207 06D5                             i1l3151 05FD  
                           i1l4113 0E98                             i1l3321 0DEA  
                           i1l3313 0DAC                             i1l3305 0D80  
                           i1l3401 16FA                             i1l4105 075B  
                           i1l3233 0740                             i1l3225 071A  
                           i1l3217 0700                             i1l3241 0751  
                           i1l3161 061F                             i1l3153 05FE  
                           i1l4115 14E3                             i1l3331 0E26  
                           i1l3323 0DFA                             i1l3315 0DB7  
                           i1l3307 0D8B                             i1l4107 0BD9  
                           i1l3403 1701                             i1l3235 0746  
                           i1l3227 0723                             i1l3219 070B  
                           i1l3171 0643                             i1l3163 0627  
                           i1l3155 0609                             i1l3341 0E5D  
                           i1l3333 0E31                             i1l3325 0E05  
                           i1l4109 0DCA                             i1l3309 0D96  
                           i1l3405 1707                             i1l3421 1662  
                           i1l3413 1656                             i1l3237 074E  
                           i1l3229 072E                             i1l3173 064E  
                           i1l3165 0628                             i1l3157 060E  
                           i1l3181 065F                             i1l3335 0E3C  
                           i1l3327 0E10                             i1l3319 0DC2  
                           i1l3255 15BD                             i1l3407 170C  
                           i1l3431 167B                             i1l3423 1666  
                           i1l3415 1657                             i1l2631 0771  
                           i1l3191 0698                             i1l3183 0677  
                           i1l3175 0654                             i1l3167 0631  
                           i1l3159 0619                             i1l3337 0E47  
                           i1l3329 0E1B                             i1l3345 0E68  
                           i1l2801 0046                             i1l3257 15BD  
                           i1l3409 1711                             i1l3441 169A  
                           i1l3433 167F                             i1l3425 166B  
                           i1l3417 165B                             i1l2641 07A7  
                           i1l2633 0783                             i1l3193 06A0  
                           i1l3185 0682                             i1l3177 065C  
                           i1l3169 063C                             i1l3339 0E52  
                           i1l2571 13D6                             i1l2811 0062  
                           i1l2803 004B                             i1l3259 15C9  
                           i1l3371 16B0                             i1l3435 1683  
                           i1l3427 1671                             i1l3443 16A0  
                           i1l3419 1660                             i1l3451 1602  
                           i1l2651 07DD                             i1l2643 07AD  
                           i1l2635 0789                             i1l3195 06A1  
                           i1l3187 0687                             i1l3349 0E90  
                           i1l3293 0D43                             i1l2661 0B1C  
                           i1l2573 13E5                             i1l2565 13C9  
                           i1l2901 0305                             i1l2821 0077  
                           i1l2813 0067                             i1l2805 0050  
                           i1l3381 16C4                             i1l3373 16B4  
                           i1l3445 16A5                             i1l3437 168D  
                           i1l3429 1674                             i1l3461 161E  
                           i1l3453 160A                             i1l2653 07E3  
                           i1l2645 07BF                             i1l2637 078F  
                           i1l2629 076B                             i1l3197 06AA  
                           i1l3189 0692                             i1l3701 053E  
                           i1l3295 0D44                             i1l2671 0B31  
                           i1l2663 0B26                             i1l2575 13EA  
                           i1l2567 13CB                             i1l2903 030A  
                           i1l2911 033B                             i1l2831 0093  
                           i1l2823 007C                             i1l2815 006D  
                           i1l2807 0058                             i1l3391 16DA  
                           i1l3383 16C8                             i1l3375 16B9  
                           i1l3447 16AA                             i1l3439 1693  
                           i1l3463 1630                             i1l3455 160D  
                           i1l2655 07E9                             i1l2647 07C5  
                           i1l2639 07A1                             i1l3199 06B5  
                           i1l3703 0566                             i1l3711 05E2  
                           i1l3297 0D54                             i1l2681 0B81  
                           i1l2673 0B35                             i1l2665 0B26  
                           i1l2569 13D2                             i1l2921 036E  
                           i1l2913 0348                             i1l2905 0318  
                           i1l2841 00BE                             i1l2833 0098  
                           i1l2825 0084                             i1l2817 0071  
                           i1l2809 005A                             i1l2761 179A  
                           i1l3393 16DE                             i1l3385 16CA  
                           i1l3377 16BB                             i1l3369 16AF  
                           i1l3465 163E                             i1l3457 1616  
                           i1l2657 07FB                             i1l2649 07CB  
                           i1l3473 12E2                             i1l3705 0586  
                           i1l3299 0D5F                             i1l2683 0B94  
                           i1l2675 0B47                             i1l2691 0BD1  
                           i1l2667 0B2A                             i1l2931 038C  
                           i1l2923 0374                             i1l2915 0353  
                           i1l2907 031C                             i1l2851 015B  
                           i1l2843 00DB                             i1l2827 0086  
                           i1l2819 0072                             i1l2771 17BE  
                           i1l2763 17AF                             i1l2755 1784  
                           i1l3395 16E2                             i1l3387 16D0  
                           i1l3379 16BF                             i1l3467 1647  
                           i1l3459 161A                             i1l3475 12F0  
                           i1l4099 05F4                             i1l3707 05A4  
                           i1l3715 05E8                             i1l2693 0BF6  
                           i1l2685 0BA8                             i1l2677 0B5A  
                           i1l2669 0B2E                             i1l2925 037C  
                           i1l2917 0362                             i1l2909 0335  
                           i1l2861 01BE                             i1l2853 0164  
                           i1l2845 00F7                             i1l2837 00A1  
                           i1l2829 008E                             i1l2781 17D8  
                           i1l2765 17B0                             i1l2757 1791  
                           i1l2941 08B7                             i1l3397 16F3  
                           i1l3389 16D3                             i1l3469 164D  
                           i1l3709 05C3                             i1l3661 03A5  
                           i1l2695 0C02                             i1l2687 0BBC  
                           i1l2679 0B6D                             i1l2927 0380  
                           i1l2919 036C                             i1l2871 025E  
                           i1l2863 01D7                             i1l2855 0174  
                           i1l2847 0123                             i1l2839 00B1  
                           i1l2791 17F4                             i1l2767 17B8  
                           i1l2951 08D9                             i1l2943 08C7  
                           i1l2935 089E                             i1l3399 16F9  
                           i1l3671 03F1                             i1l3663 03C2  
                           i1l3735 12F8                             u300_20 17DE  
                           i1l2697 0C19                             i1l2929 0381  
                           i1l2881 02CC                             i1l2873 0284  
                           i1l2865 01F4                             i1l2857 0191  
                           i1l2849 013F                             i1l2793 0034  
                           u300_21 17DD                             i1l2777 17C6  
                           i1l2769 17BA                             i1l2961 0904  
                           i1l2953 08E2                             i1l2937 08A3  
                           i1l3681 0419                             i1l3673 0410  
                           i1l3665 03C9                             i1l3737 12FC  
                           i1l2699 0C1F                             i1l2891 02E4  
                           i1l2883 02D0                             i1l2875 02AC  
                           i1l2867 0221                             i1l2859 01A1  
                           i1l2795 003B                             i1l2787 17DF  
                           i1l2779 17CF                             i1l2971 092E  
                           i1l2963 090B                             i1l2955 08E9  
                           i1l2947 08D0                             i1l2939 08A7  
                           i1l3691 04B8                             i1l3683 0426  
                           i1l3675 0415                             i1l3667 03CD  
                           i1l3659 0395                             i1l3739 1300  
                           i1l2893 02E5                             i1l2885 02D1  
                           i1l2877 02B5                             i1l2869 0231  
                           i1l2797 0041                             i1l2789 17EF  
                           i1l2973 0944                             i1l2965 0916  
                           i1l2957 08ED                             i1l2949 08D5  
                           i1l3693 04D6                             i1l3685 042C  
                           i1l3669 03EC                             i1l2991 14CD  
                           i1l2983 14B7                             i1l2895 02E9  
                           i1l2887 02DA                             i1l2879 02C3  
                           i1l2799 0045                             i1l2975 0949  
                           i1l2967 091A                             i1l2959 08FB  
                           i1l3695 04F2                             i1l3687 0439  
                           i1l2993 14D4                             i1l2985 14B8  
                           i1l2897 02FD                             i1l2889 02E0  
                           i1l2977 094D                             i1l2969 0924  
                           i1l3697 0511                             i1l3689 0441  
                           i1l2987 14BF                             i1l2979 094E  
                           i1l3699 052E                             i1l2989 14C6  
                           i1l2997 14DB                             u301_25 17E1  
                           u310_20 0093                             u302_20 17EF  
                           u310_21 0092                             u302_21 17EE  
                           u311_20 0098                             u303_20 17F4  
                           u311_21 0097                             u303_21 17F3  
                           u304_20 0045                             u320_21 01E6  
                           u312_21 00E9                             u304_21 0044  
                           u320_22 01ED                             u312_22 00F0  
                           u320_23 01F4                             u312_23 00F7  
                           u305_20 004B                             u321_21 0213  
                           u313_21 0105                             u305_21 004A  
                           u321_22 021A                             u313_22 010C  
                           u321_23 0221                             u313_23 0113  
                           u306_20 0050                             u322_21 0240  
                           u314_21 0131                             u306_21 004F  
                           u322_22 0247                             u314_22 0138  
                           u322_23 024E                             u314_23 013F  
                           u330_25 02D3                             u251_20 13D6  
                           u331_20 02E4                             u323_20 026A  
                           u307_20 0071                             u251_21 13D5  
                           u331_21 02E3                             u315_21 014D  
                           u307_21 0070                             u315_22 0154  
                           u315_23 015B                             u323_25 0265  
                           u340_20 0380                             u332_20 02E9  
                           u308_20 0077                             u420_20 06A0  
                           u412_20 0609                             u340_21 037F  
                           u332_21 02E8                             u324_21 0276  
                           u308_21 0076                             u420_21 069F  
                           u412_21 0608                             u324_22 027D  
                           u324_23 0284                             u252_25 13DD  
                           u316_25 015D                             u253_20 13EA  
                           u333_20 02FD                             u325_20 0292  
                           u309_20 007C                             u341_20 08A3  
                           u421_20 06B5                             u413_20 0619  
                           u253_21 13E9                             u333_21 02FC  
                           u317_21 0183                             u309_21 007B  
                           u341_21 08A2                             u421_21 06B4  
                           u413_21 0618                             u317_22 018A  
                           u317_23 0191                             u325_25 028D  
                           u334_20 0304                             u350_20 0920  
                           u342_20 08A7                             u422_20 06C7  
                           u414_20 0627                             u334_21 0303  
                           u326_21 029E                             u318_21 01B0  
                           u350_21 091F                             u342_21 08A6  
                           u422_21 06C6                             u414_21 0626  
                           u326_22 02A5                             u318_22 01B7  
                           u326_23 02AC                             u318_23 01BE  
                           u335_20 030A                             u351_20 0924  
                           u343_20 08C7                             u423_20 06D5  
                           u415_20 063C                             u335_21 0309  
                           u351_21 0923                             u343_21 08C6  
                           u423_21 06D4                             u415_21 063B  
                           u327_25 02AE                             u319_25 01C0  
                           u336_20 031C                             u352_20 0939  
                           u440_20 1707                             u432_20 16B4  
                           u424_20 06FB                             u416_20 064E  
                           u336_21 031B                             u440_21 1706  
                           u432_21 16B3                             u424_21 06FA  
                           u416_21 064D                             u360_24 0991  
                           u280_24 07B7                             u360_25 098F  
                           u328_25 02C5                             u352_25 0934  
                           u344_25 08DA                             u280_25 07B5  
                           u337_20 032B                             u329_20 02D0  
                           u353_20 0949                             u345_20 08E8  
                           u441_20 170C                             u433_20 16BF  
                           u281_20 07C5                             u273_20 0771  
                           u425_20 070B                             u417_20 065C  
                           u329_21 02CF                             u353_21 0948  
                           u345_21 08E7                             u441_21 170B  
                           u433_21 16BE                             u281_21 07C4  
                           u273_21 0770                             u425_21 070A  
                           u417_21 065B                             u361_24 099C  
                           u361_25 099A                             u337_25 0326  
                           u370_20 0A04                             u362_20 09AE  
                           u338_20 0348                             u354_20 094D  
                           u434_20 16D0                             u450_20 16A5  
                           u442_20 165B                             u282_20 07CB  
                           u426_20 0719                             u418_20 0682  
                           u370_21 0A03                             u362_21 09AD  
                           u338_21 0347                             u354_21 094C  
                           u434_21 16CF                             u450_21 16A4  
                           u442_21 165A                             u282_21 07CA  
                           u426_21 0718                             u418_21 0681  
                           u274_24 077B                             u338_25 0344  
                           u346_25 08FC                             u274_25 0779  
                           u371_20 0A0A                             u363_20 09B4  
                           u355_20 095E                             u339_20 0362  
                           u347_20 090A                             u443_20 1666  
                           u451_20 160A                             u275_20 0789  
                           u427_20 072E                             u419_20 0692  
                           u371_21 0A09                             u363_21 09B3  
                           u355_21 095D                             u339_21 0361  
                           u347_21 0909                             u443_21 1665  
                           u451_21 1609                             u275_21 0788  
                           u427_21 072D                             u419_21 0691  
                           u283_24 07D5                             u339_25 035E  
                           u435_25 16D4                             u283_25 07D3  
                           u436_20 16E2                             u444_20 1671  
                           u284_20 07E3                             u276_20 078F  
                           u428_20 0740                             u436_21 16E1  
                           u444_21 1670                             u284_21 07E2  
                           u276_21 078E                             u428_21 073F  
                           u372_24 0A12                             u364_24 09BC  
                           u356_24 0966                             u372_25 0A10  
                           u364_25 09BA                             u356_25 0964  
                           u348_25 090F                             u452_25 160F  
                           u349_20 091A                             u453_20 161E  
                           u285_20 07E9                             u429_20 074E  
                           u349_21 0919                             u453_21 161D  
                           u285_21 07E8                             u429_21 074D  
                           u373_24 0A1D                             u365_24 09C7  
                           u357_24 0971                             u277_24 0799  
                           u373_25 0A1B                             u365_25 09C5  
                           u357_25 096F                             u437_25 16E3  
                           u445_25 1675                             u277_25 0797  
                           u366_20 09D9                             u358_20 0983  
                           u294_20 1791                             u438_20 16F3  
                           u446_20 1683                             u454_20 1630  
                           u278_20 07A7                             u470_20 03C9  
                           u366_21 09D8                             u358_21 0982  
                           u294_21 1790                             u438_21 16F2  
                           u446_21 1682                             u454_21 162F  
                           u278_21 07A6                             u470_21 03C8  
                           u286_24 07F3                             u438_25 16EF  
                           u454_25 162C                             u286_25 07F1  
                           u367_20 09DF                             u359_20 0989  
                           u295_20 17A8                             u447_20 168D  
                           u279_20 07AD                             u471_20 03EC  
                           u367_21 09DE                             u359_21 0988  
                           u447_21 168C                             u279_21 07AC  
                           u471_21 03EB                             u287_25 0BF9  
                           u295_25 17A3                             u439_25 16FB  
                           u447_25 1689                             u455_25 163F  
                           u288_20 0C02                             u296_20 17BE  
                           u456_20 164D                             u472_20 0410  
                           u288_21 0C01                             u296_21 17BD  
                           u456_21 164C                             u472_21 040F  
                           u368_24 09E7                             u368_25 09E5  
                           u448_25 1694                             u297_20 17C5  
                           u449_20 16A0                             u473_20 0439  
                           u297_21 17C4                             u449_21 169F  
                           u473_21 0438                             u369_24 09F2  
                           u369_25 09F0                             u473_25 0435  
                           u474_20 04D6                             u474_21 04D5  
                           u298_25 17C7                             u299_20 17D7  
                           u475_20 0511                             u299_21 17D6  
                           u475_21 0510                             u476_20 0566  
                           u476_21 0565                             u476_23 0562  
                           u477_20 0586                             u469_20 03C2  
                           u477_21 0585                             u469_21 03C1  
                           u478_20 05C3                             u478_21 05C2  
                       __i1fptable 002B                   __end_of___xxtofl 0957  
                __end_ofi1_SSD_OFF 12F8                  SSD_Display@number 0078  
                     ?_UPDATE_TEMP 0070                 __size_of_Sch_Start 015F  
          Sch_UpdateTick_Handler@i 0056           _I2C_Master_RepeatedStart 1283  
                        ??___awdiv 0074                          ??___awmod 0074  
                        ??___flmul 0028                          ??___fltol 003E  
                        ??___llmod 0078                    ADC_Read@channel 0074  
                 ___awdiv@quotient 0076                    ___awmod@divisor 0070  
                  ___awmod@counter 0074                             _sw_int 1387  
                           fptable 002A                   _DIO_voidInitPort 1716  
                        ?_I2C_Nack 0070                             fptotal 0000  
               __size_of__Umul8_16 0027            __end_of_DIO_voidInitPin 0D42  
                        ?_ADC_Init 0070                          ?_ADC_Read 0070  
                           saved_w 007E                  __end_of_TMR_Start 12D0  
                     ___xxtofl@arg 007A                       ___xxtofl@exp 0079  
                     ___xxtofl@val 0070          ??i1_DIO_voidWritePinValue 0071  
          __end_of__initialization 0026                __size_of_TMR_Update 001B  
                       ___fltol@f1 003A              __size_of_EEPROM_Write 002F  
                     ?_SSD_Display 0078              _DIO_voidWritePinValue 0A2A  
                   __pcstackCOMMON 0070           i1_DIO_voidWritePortValue 14B6  
                        ?_SSD_Init 0070                          ?_TMR_Init 0070  
                       ??_I2C_Nack 00B5                         ??_ADC_Init 00B4  
                       ??_ADC_Read 0072                  __end_of_Sch_Start 1000  
             __size_of_DO_SetState 000E                       _EEPROM_Write 13EF  
                       __pbssBANK0 005C                         __pbssBANK1 00A0  
                     ?_sw_voidtask 0070                          ?_Sch_Init 0070  
                __end_of__Umul8_16 13EF           ??_DIO_voidWritePortValue 00B5  
                       __pmaintext 1480                         __pintentry 0004  
                       ??_SSD_Init 00B8                _TMR0_vidSetCallBack 129E  
                          ?_sw_int 0070                         ??_TMR_Init 00B4  
                        ?___xxtofl 0070                   ?_DIO_voidInitPin 00B4  
        fp__Sch_UpdateTick_Handler 0031                            _DO_Init 13A6  
                          _SSD_OFF 132F               ?_TMR0_vidSetCallBack 0070  
                          i1fpbase 0030                         ??_Sch_Init 00B9  
                          _UPstate 0065             ?_DIO_voidWritePinValue 00B4  
                          _Settemp 00B0                     UPDATE_TEMP@val 0044  
             __size_of_UPDATE_TEMP 0045                            ___awdiv 16AF  
                          ___awmod 1656                            ___flmul 0034  
                          ___fltol 1784                            ___llmod 1602  
          ?_Sch_UpdateTick_Handler 0070                       ??_TMR_Update 0058  
                          __ptext1 1387                            __ptext2 12C2  
                          __ptext3 0803                            __ptext4 129E  
                          __ptext5 0EA1                            __ptext6 132F  
                          __ptext7 14F5                            __ptext8 1579  
                          __ptext9 12A8                    __size_of_sw_int 001F  
              __size_of__i1fptable 0009                            _avgtemp 00AF  
               DIO_voidInitPin@Dir 00B4                         ??___xxtofl 0074  
                 ___awmod@dividend 0072        __size_of_DIO_U8ReadPinValue 0093  
         __size_of_I2C_Master_Init 001D           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 0043           __size_of_I2C_Master_Stop 0009  
                 DO_SetState@state 00B8                            clrloop0 127C  
             end_of_initialization 0026              ??_TMR0_vidSetCallBack 00B4  
       ??_I2C_Master_RepeatedStart 00B5                      ??_EEPROM_Read 00B9  
                        _DOWNstate 0064           __end_of_DIO_voidInitPort 1784  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 0032  
               __end_of_TMR_Update 1313                       _u32TickCount 005C  
  __size_of_DIO_voidWritePortValue 0041                          i1_SSD_OFF 12E2  
                       _temp_array 00A0     __end_of_Sch_UpdateTick_Handler 05FD  
             __size_of_SSD_Display 015F                      ___xxtofl@sign 0078  
                __size_of_I2C_Nack 000C        DIO_voidWritePortValue@value 00B4  
                __size_of_ADC_Init 001F                  __size_of_ADC_Read 0109  
        DIO_U8ReadPinValue@pin_num 0072                          _TMR_Start 12C2  
                      ___flmul@grs 002E               __size_of_sw_voidtask 016D  
       ??i1_DIO_voidWritePortValue 0071                __end_of_EEPROM_Read 15BD  
                       ?i1_SSD_OFF 0070                     __end_of_sw_int 13A6  
                __size_of_SSD_Init 001C                start_initialization 0015  
                        _SWcounter 0062                  __size_of_TMR_Init 009A  
           _DIO_voidWritePortValue 14F5                          _Sch_Start 0EA1  
                       ?_TMR_Start 0070                  ??_I2C_Master_Init 00B4  
                ??_I2C_Master_Read 00B5                  ??_I2C_Master_Wait 00B4  
                ??_I2C_Master_Stop 00B5                    ___llmod@divisor 0070  
                  ___llmod@counter 0079                  __size_of_Sch_Init 0012  
                        __Umul8_16 13C8                           ??_sw_int 00B8  
               __end_of__i1fptable 0034                          ___flmul@a 0024  
                        ___flmul@b 0020                      ??_DO_SetState 00B9  
                         ?_DO_Init 0070                          ___latbits 0002  
                    __pcstackBANK0 0020                      __pcstackBANK1 00B4  
                __size_of___xxtofl 00BA           ?i1_DIO_voidWritePinValue 0070  
                         ?_SSD_OFF 0070                         ?_Sch_Start 0070  
          ??_DIO_voidWritePinValue 00B5                        _EEPROM_Read 1579  
                 _I2C_Master_Start 128C                   _I2C_Master_Write 144E  
                      ??i1_SSD_OFF 0074                          __pfunctab 002A  
                         ?___awdiv 0070                           ?___awmod 0070  
                         ?___flmul 0020                           ?___fltol 003A  
                         ?___llmod 0070                         ?__Umul8_16 0070  
             I2C_Master_Write@data 00B6                           _I2C_Nack 12A8  
                         _ADC_Init 1368                           _ADC_Read 0B1B  
                      ??_TMR_Start 00B4     i1DIO_voidWritePinValue@pin_num 0073  
                      _heaterstate 0060                __end_of_DO_SetState 12C2  
         __size_of_DIO_voidInitPin 011E                  interrupt_function 0004  
                        clear_ram0 127B                      ??_UPDATE_TEMP 007E  
                ?_DIO_voidInitPort 00B4                 ??_DIO_voidInitPort 00B5  
             DIO_voidInitPort@Port 00B7         DIO_voidWritePortValue@Port 00B7  
                         _SSD_Init 1313         __end_of_DIO_U8ReadPinValue 07FD  
                         _TMR_Init 0803    __end_ofi1_DIO_voidWritePinValue 0A2A  
      __end_of_TMR0_vidSetCallBack 12A8                   __size_of_DO_Init 0022  
                  Sch_Start@OPtemp 00BE                           i1fptable 002B  
                         i1fptotal 0002                        ??_Sch_Start 00BB  
                 __size_of_SSD_OFF 001C                           _Sch_Init 12D0  
                    ??_SSD_Display 0079                        ??__Umul8_16 0072  
__size_of_I2C_Master_RepeatedStart 0009                __end_of_UPDATE_TEMP 1602  
                 __size_of___awdiv 0067                   __size_of___awmod 0059  
                 __size_of___flmul 0361          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___fltol 007C                   __size_of___llmod 0054  
          ?_DIO_voidWritePortValue 00B4                    _I2C_Master_Init 134B  
                  _I2C_Master_Read 141E                           ___xxtofl 089D  
                  _I2C_Master_Wait 1536                    _I2C_Master_Stop 1295  
           DIO_voidInitPin@pin_num 00B7                        _DO_SetState 12B4  
       DIO_voidWritePinValue@value 00B4                           __ptext10 141E  
                         __ptext11 12B4                           __ptext20 1313  
                         __ptext12 0A2A                           __ptext21 1716  
                         __ptext13 12D0                           __ptext30 076A  
                         __ptext22 134B                           __ptext14 13EF  
                         __ptext31 1602                           __ptext23 13A6  
                         __ptext15 144E                           __ptext40 0D42  
                         __ptext32 1656                           __ptext24 0C24  
                         __ptext16 1295                           __ptext41 14B6  
                         __ptext33 16AF                           __ptext25 1368  
                         __ptext17 128C                           __ptext42 0957  
                         __ptext34 15BD                           __ptext26 12F8  
                         __ptext18 1283                           __ptext35 089D  
                         __ptext27 0395                           __ptext19 1536  
                         __ptext36 1784                           __ptext28 12E2  
                         __ptext37 0034                           __ptext29 05FD  
                         __ptext38 13C8                           __ptext39 0B1B  
                    ?_EEPROM_Write 00B7                    _u32SetmodeCount 00AA  
                    ??_sw_voidtask 0073                      __size_of_main 0036  
              DIO_voidInitPort@Dir 00B4                  ??_DIO_voidInitPin 00B5  
            DIO_U8ReadPinValue@pin 0071                  DO_SetState@device 00B9  
   __end_of_DIO_voidWritePortValue 1536                __end_of_SSD_Display 0EA1  
__size_ofi1_DIO_voidWritePortValue 003F           __end_of_I2C_Master_Start 1295  
    i1DIO_voidWritePortValue@value 0070          ?i1_DIO_voidWritePortValue 0070  
         __end_of_I2C_Master_Write 1480                     ??_EEPROM_Write 00B8  
                  _DOWNpushed_flag 00B2                           intlevel1 002A  
                     ?_EEPROM_Read 0070     __size_of_DIO_voidWritePinValue 00F1  
         ??_Sch_UpdateTick_Handler 0046      __end_of_DIO_voidWritePinValue 0B1B  
                      _UPDATE_TEMP 15BD   __size_ofi1_DIO_voidWritePinValue 00D3  
              __end_of_sw_voidtask 076A                 EEPROM_Read@address 00B9  
     DIO_voidWritePinValue@pin_num 00B7       i1DIO_voidWritePortValue@Port 0073  
          __end_of_I2C_Master_Init 1368            __end_of_I2C_Master_Read 144E  
          __end_of_I2C_Master_Wait 1579            __end_of_I2C_Master_Stop 129E  
                      _ON_OFFstate 0063             __Umul8_16@multiplicand 0070  
                  EEPROM_Read@Data 00BA               __Umul8_16@multiplier 0078  
              EEPROM_Write@address 00B8                        _SSD_Display 0D42  
                __Umul8_16@product 0074  
