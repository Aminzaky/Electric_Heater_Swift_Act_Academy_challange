Version 4.0 HI-TECH Software Intermediate Code
[v F20 `(v ~T0 @X0 0 tf ]
[v F25 `(v ~T0 @X0 0 tf ]
[v F27 `(v ~T0 @X0 0 tf ]
[t ~ __interrupt . k ]
[t T2 __interrupt ]
"17 TMR0.c
[; ;TMR0.c: 17: void (*CallBack_ptr)(void);
[v _CallBack_ptr `*F20 ~T0 @X0 1 e ]
"20
[; ;TMR0.c: 20: void TMR_Init(void) {
[v _TMR_Init `(v ~T0 @X0 1 ef ]
{
[e :U _TMR_Init ]
[f ]
"21
[; ;TMR0.c: 21:     int prescale = 256.0;
[v _prescale `i ~T0 @X0 1 a ]
[e = _prescale -> .256.0 `i ]
"24
[; ;TMR0.c: 24:     switch (prescale) {
[e $U 3  ]
{
"25
[; ;TMR0.c: 25:         case 2:
[e :U 4 ]
"26
[; ;TMR0.c: 26:             (*((uint8*)(0x81)) &= ~(1 << 0));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 0 `i `uc ]
"27
[; ;TMR0.c: 27:             (*((uint8*)(0x81)) &= ~(1 << 1));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 1 `i `uc ]
"28
[; ;TMR0.c: 28:             (*((uint8*)(0x81)) &= ~(1 << 2));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 2 `i `uc ]
"29
[; ;TMR0.c: 29:             (*((uint8*)(0x81)) &= ~(1 << 3));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 3 `i `uc ]
"30
[; ;TMR0.c: 30:             break;
[e $U 2  ]
"31
[; ;TMR0.c: 31:         case 4:
[e :U 5 ]
"32
[; ;TMR0.c: 32:             ((*((uint8*)(0x81))) |= (1 << (0)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 0 `i `uc ]
"33
[; ;TMR0.c: 33:             (*((uint8*)(0x81)) &= ~(1 << 1));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 1 `i `uc ]
"34
[; ;TMR0.c: 34:             (*((uint8*)(0x81)) &= ~(1 << 2));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 2 `i `uc ]
"35
[; ;TMR0.c: 35:             (*((uint8*)(0x81)) &= ~(1 << 3));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 3 `i `uc ]
"36
[; ;TMR0.c: 36:             break;
[e $U 2  ]
"37
[; ;TMR0.c: 37:         case 8:
[e :U 6 ]
"38
[; ;TMR0.c: 38:             (*((uint8*)(0x81)) &= ~(1 << 0));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 0 `i `uc ]
"39
[; ;TMR0.c: 39:             ((*((uint8*)(0x81))) |= (1 << (1)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 1 `i `uc ]
"40
[; ;TMR0.c: 40:             (*((uint8*)(0x81)) &= ~(1 << 2));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 2 `i `uc ]
"41
[; ;TMR0.c: 41:             (*((uint8*)(0x81)) &= ~(1 << 3));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 3 `i `uc ]
"42
[; ;TMR0.c: 42:             break;
[e $U 2  ]
"43
[; ;TMR0.c: 43:         case 16:
[e :U 7 ]
"44
[; ;TMR0.c: 44:             ((*((uint8*)(0x81))) |= (1 << (0)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 0 `i `uc ]
"45
[; ;TMR0.c: 45:             ((*((uint8*)(0x81))) |= (1 << (1)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 1 `i `uc ]
"46
[; ;TMR0.c: 46:             (*((uint8*)(0x81)) &= ~(1 << 2));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 2 `i `uc ]
"47
[; ;TMR0.c: 47:             (*((uint8*)(0x81)) &= ~(1 << 3));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 3 `i `uc ]
"48
[; ;TMR0.c: 48:             break;
[e $U 2  ]
"49
[; ;TMR0.c: 49:         case 32:
[e :U 8 ]
"50
[; ;TMR0.c: 50:             (*((uint8*)(0x81)) &= ~(1 << 0));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 0 `i `uc ]
"51
[; ;TMR0.c: 51:             (*((uint8*)(0x81)) &= ~(1 << 1));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 1 `i `uc ]
"52
[; ;TMR0.c: 52:             ((*((uint8*)(0x81))) |= (1 << (2)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 2 `i `uc ]
"53
[; ;TMR0.c: 53:             (*((uint8*)(0x81)) &= ~(1 << 3));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 3 `i `uc ]
"54
[; ;TMR0.c: 54:             break;
[e $U 2  ]
"55
[; ;TMR0.c: 55:         case 64:
[e :U 9 ]
"56
[; ;TMR0.c: 56:             ((*((uint8*)(0x81))) |= (1 << (0)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 0 `i `uc ]
"57
[; ;TMR0.c: 57:             (*((uint8*)(0x81)) &= ~(1 << 1));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 1 `i `uc ]
"58
[; ;TMR0.c: 58:             ((*((uint8*)(0x81))) |= (1 << (2)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 2 `i `uc ]
"59
[; ;TMR0.c: 59:             (*((uint8*)(0x81)) &= ~(1 << 3));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 3 `i `uc ]
"60
[; ;TMR0.c: 60:             break;
[e $U 2  ]
"61
[; ;TMR0.c: 61:         case 128:
[e :U 10 ]
"62
[; ;TMR0.c: 62:             (*((uint8*)(0x81)) &= ~(1 << 0));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 0 `i `uc ]
"63
[; ;TMR0.c: 63:             ((*((uint8*)(0x81))) |= (1 << (1)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 1 `i `uc ]
"64
[; ;TMR0.c: 64:             ((*((uint8*)(0x81))) |= (1 << (2)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 2 `i `uc ]
"65
[; ;TMR0.c: 65:             (*((uint8*)(0x81)) &= ~(1 << 3));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 3 `i `uc ]
"66
[; ;TMR0.c: 66:             break;
[e $U 2  ]
"67
[; ;TMR0.c: 67:         case 256:
[e :U 11 ]
"68
[; ;TMR0.c: 68:             ((*((uint8*)(0x81))) |= (1 << (0)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 0 `i `uc ]
"69
[; ;TMR0.c: 69:             ((*((uint8*)(0x81))) |= (1 << (1)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 1 `i `uc ]
"70
[; ;TMR0.c: 70:             ((*((uint8*)(0x81))) |= (1 << (2)));
[e =| *U -> -> 129 `i `*uc -> << -> 1 `i -> 2 `i `uc ]
"71
[; ;TMR0.c: 71:             (*((uint8*)(0x81)) &= ~(1 << 3));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 3 `i `uc ]
"72
[; ;TMR0.c: 72:             break;
[e $U 2  ]
"73
[; ;TMR0.c: 73:     }
}
[e $U 2  ]
[e :U 3 ]
[e [\ _prescale , $ -> 2 `i 4
 , $ -> 4 `i 5
 , $ -> 8 `i 6
 , $ -> 16 `i 7
 , $ -> 32 `i 8
 , $ -> 64 `i 9
 , $ -> 128 `i 10
 , $ -> 256 `i 11
 2 ]
[e :U 2 ]
"74
[; ;TMR0.c: 74:     (*((uint8*)(0x81)) &= ~(1 << 5));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 5 `i `uc ]
"75
[; ;TMR0.c: 75:     (*((uint8*)(0x81)) &= ~(1 << 4));
[e =& *U -> -> 129 `i `*uc -> ~ << -> 1 `i -> 4 `i `uc ]
"76
[; ;TMR0.c: 76: }
[e :UE 1 ]
}
"79
[; ;TMR0.c: 79: void TMR_Start(void) {
[v _TMR_Start `(v ~T0 @X0 1 ef ]
{
[e :U _TMR_Start ]
[f ]
"82
[; ;TMR0.c: 82:     ((*((uint8*)(0x0B))) |= (1 << (5)));
[e =| *U -> -> 11 `i `*uc -> << -> 1 `i -> 5 `i `uc ]
"84
[; ;TMR0.c: 84:     ((*((uint8*)(0x0B))) |= (1 << (7)));
[e =| *U -> -> 11 `i `*uc -> << -> 1 `i -> 7 `i `uc ]
"86
[; ;TMR0.c: 86:     ((*((uint8*)(0x0B))) |= (1 << (6)));
[e =| *U -> -> 11 `i `*uc -> << -> 1 `i -> 6 `i `uc ]
"88
[; ;TMR0.c: 88:     (*((uint8*)(0x0B)) &= ~(1 << 2));
[e =& *U -> -> 11 `i `*uc -> ~ << -> 1 `i -> 2 `i `uc ]
"90
[; ;TMR0.c: 90:     (*((uint8*)(0x01))=(((uint8) ((256 + 2)-(((8.0 * 5.0) / (256.0))*250.0))) | (*((uint8*)(0x01))&0x00)));
[e = *U -> -> 1 `i `*uc -> | -> -> - -> + -> 256 `i -> 2 `i `d * / * .8.0 .5.0 .256.0 .250.0 `uc `i & -> *U -> -> 1 `i `*uc `i -> 0 `i `uc ]
"92
[; ;TMR0.c: 92: }
[e :UE 12 ]
}
"95
[; ;TMR0.c: 95: void TMR0_vidSetCallBack(void (*CallBack)(void)) {
[v _TMR0_vidSetCallBack `(v ~T0 @X0 1 ef1`*F25 ]
{
[e :U _TMR0_vidSetCallBack ]
[v _CallBack `*F27 ~T0 @X0 1 r1 ]
[f ]
"96
[; ;TMR0.c: 96:     CallBack_ptr = CallBack;
[e = _CallBack_ptr _CallBack ]
"97
[; ;TMR0.c: 97: }
[e :UE 13 ]
}
"100
[; ;TMR0.c: 100: uint8 TMR_CheckOverFlow(void) {
[v _TMR_CheckOverFlow `(uc ~T0 @X0 1 ef ]
{
[e :U _TMR_CheckOverFlow ]
[f ]
"101
[; ;TMR0.c: 101:     return ((*((uint8*)(0x0B)) >> 2) & (1));
[e ) -> & >> -> *U -> -> 11 `i `*uc `i -> 2 `i -> 1 `i `uc ]
[e $UE 14  ]
"102
[; ;TMR0.c: 102: }
[e :UE 14 ]
}
[v $root$_TMR_Update `(v ~T0 @X0 0 e ]
"109
[; ;TMR0.c: 109: void __attribute__((picinterrupt(("")))) TMR_Update(void) {
[v _TMR_Update `(v ~T2 @X0 1 ef ]
{
[e :U _TMR_Update ]
[f ]
"112
[; ;TMR0.c: 112:     (*((uint8*)(0x0B)) &= ~(1 << 2));
[e =& *U -> -> 11 `i `*uc -> ~ << -> 1 `i -> 2 `i `uc ]
"114
[; ;TMR0.c: 114:     (*((uint8*)(0x01))=(((uint8) ((256 + 2)-(((8.0 * 5.0) / (256.0))*250.0))) | (*((uint8*)(0x01))&0x00)));
[e = *U -> -> 1 `i `*uc -> | -> -> - -> + -> 256 `i -> 2 `i `d * / * .8.0 .5.0 .256.0 .250.0 `uc `i & -> *U -> -> 1 `i `*uc `i -> 0 `i `uc ]
"116
[; ;TMR0.c: 116:     CallBack_ptr();
[e ( *U _CallBack_ptr ..  ]
"119
[; ;TMR0.c: 119: }
[e :UE 15 ]
}
